{"config":{"lang":["en","tr"],"separator":"[\\s\\-,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Blank","text":""},{"location":"license/","title":"License","text":""},{"location":"license/#license","title":"License","text":""},{"location":"license/#code-license","title":"Code License","text":"<p>MIT License</p> <p>Copyright \u00a9 2019-2024 U\u011fur CORUH</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"license/#content-licence","title":"Content Licence","text":"<p>Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License (CC BY-NC-ND 4.0)</p> <p></p> <p>You are free to:</p> <ul> <li>Share: Copy and redistribute the material in any medium or format.</li> </ul> <p>Under the following terms:</p> <ul> <li>Attribution: You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.</li> <li>NonCommercial: You may not use the material for commercial purposes.</li> <li>NoDerivatives: If you remix, transform, or build upon the material, you may not distribute the modified material.</li> </ul> <p>No additional restrictions \u2014 You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits.</p> <p>For more details, visit: Creative Commons CC BY-NC-ND 4.0</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#changelog","title":"Changelog","text":""},{"location":"changelog/#material-for-algorithm-lovers","title":"Material for Algorithm Lovers","text":""},{"location":"changelog/#1.0.0","title":"1.0.0 _ October 20, 2020","text":"<ul> <li>Initial release</li> </ul>"},{"location":"resume/","title":"Resume","text":""},{"location":"resume/#resume","title":"Resume","text":"<ul> <li>Download Resume</li> </ul>"},{"location":"syllabus/syllabus/","title":"CEN429 Secure Programming","text":"","tags":["cen429-syllabus","secure-programming","fall-2024","cen429"]},{"location":"syllabus/syllabus/#recep-tayyip-erdogan-university","title":"Recep Tayyip Erdo\u011fan University","text":"","tags":["cen429-syllabus","secure-programming","fall-2024","cen429"]},{"location":"syllabus/syllabus/#faculty-of-engineering-and-architecture-computer-engineering","title":"Faculty of Engineering and Architecture, Computer Engineering","text":"","tags":["cen429-syllabus","secure-programming","fall-2024","cen429"]},{"location":"syllabus/syllabus/#cen429-secure-programming-course-syllabus","title":"CEN429 - Secure Programming Course Syllabus","text":"","tags":["cen429-syllabus","secure-programming","fall-2024","cen429"]},{"location":"syllabus/syllabus/#fall-semester-2024-2025","title":"Fall Semester, 2024-2025","text":"<p>Download </p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul> Instructor: Asst. Prof. Dr. U\u011fur CORUH Contact Information: ugur.coruh@erdogan.edu.tr Office No: F-301 Google Classroom Code Not Used Microsoft Teams Code zk6388k Lecture Hours and Days Thursday, 13:00 - 15:00 IBBF 402, 4<sup>th</sup> Floor Lecture Classroom IBBF 402 4<sup>th</sup> Floor or Online via Google Meet / Microsoft Teams Office Hours Meetings will be scheduled via Google Meet or Microsoft Teams using your university account and email. Email requests for meetings are required. To receive a faster response, ensure your email subject begins with [CEN429], and write clear, concise, formal emails. Lecture and Communication Language English Theory Course Hour Per Week 3 Hours Credit ????? Prerequisite CE103- Algorithms and Programming I Corequisite TBD Requirement TBD <p>*TBD: To Be Defined.</p>","tags":["cen429-syllabus","secure-programming","fall-2024","cen429"]},{"location":"syllabus/syllabus/#a-course-description","title":"A. Course Description","text":"<p>This course provides a comprehensive approach to understanding secure software development techniques. Students will learn software protection methods to address common security vulnerabilities such as buffer overflows, memory leaks, and injection attacks. The course focuses on real-world applications and best practices in secure software development.</p>","tags":["cen429-syllabus","secure-programming","fall-2024","cen429"]},{"location":"syllabus/syllabus/#b-course-learning-outcomes","title":"B. Course Learning Outcomes","text":"<p>After successfully completing this course, a student will be able to:</p> <ol> <li>Identify common software security vulnerabilities.</li> <li>Apply encryption methods to secure sensitive data.</li> <li>Implement code hardening techniques (such as RASP and code obfuscation).</li> <li>Establish secure communication channels using encryption and authentication mechanisms.</li> <li>Plan secure software design by employing defense strategies.</li> <li>Perform security reviews and vulnerability assessments.</li> </ol>","tags":["cen429-syllabus","secure-programming","fall-2024","cen429"]},{"location":"syllabus/syllabus/#c-course-topics","title":"C. Course Topics","text":"<ul> <li> <p>Introduction to Secure Programming and Application Protection Plan</p> </li> <li> <p>Overview of application protection</p> </li> <li>Buffer overflows and prevention techniques</li> <li>Memory management and security</li> <li>Protected code partitioning and secure processing with encryption</li> </ul> <ul> <li> <p>Computer Viruses and Security Models</p> </li> <li> <p>Types of viruses (program, macro, boot sector)</p> </li> <li>Attack trees and security models</li> <li>Virus countermeasures</li> </ul> <ul> <li> <p>Data Security: In Transit, At Rest, and In Use</p> </li> <li> <p>SSL/TLS usage</p> </li> <li>Whitebox cryptography applications</li> <li>Dynamic key management</li> <li>Data masking techniques</li> </ul> <ul> <li> <p>Code Hardening Techniques (C/C++)</p> </li> <li> <p>Control flow flattening</p> </li> <li>Function name hiding</li> <li>Memory allocation obfuscation</li> <li>Dynamic encryption techniques</li> </ul> <ul> <li> <p>Code Hardening Techniques (Java/Interpreted Languages)</p> </li> <li> <p>Code obfuscation with ProGuard</p> </li> <li>Dynamic method obfuscation</li> <li>Static string obfuscation and protection</li> <li>Advanced ProGuard rules</li> </ul> <ul> <li> <p>Runtime Application Self-Protection (RASP) Techniques (C/C++)</p> </li> <li> <p>Root detection and APK signature verification</p> </li> <li>Dynamic memory protection</li> <li>Debugger and memory monitoring detection</li> <li>Protection against dynamic analysis tools</li> </ul> <ul> <li> <p>Advanced Code Obfuscation and Diversification Techniques</p> </li> <li> <p>Dynamic control flow obfuscation</p> </li> <li>Adding fake control flows</li> <li>Program obfuscation techniques</li> <li>Dynamic function calls and runtime optimizations</li> </ul> <ul> <li> <p>Quiz 1 + Midterm Project Report Submission</p> </li> <li> <p>Quiz covering the first 7 weeks of content</p> </li> <li>Submission of midterm project report</li> </ul> <ul> <li> <p>Certificates and Cryptographic Methods (AES, RSA, PKI)</p> </li> <li> <p>AES and RSA encryption</p> </li> <li>Data integrity with HMAC</li> <li>Creating digital signatures and certificates</li> </ul> <ul> <li> <p>Whitebox Cryptography</p> </li> <li> <p>Whitebox AES and DES applications</p> </li> <li>Key protection with whitebox cryptography</li> <li>Software-based security solutions</li> </ul> <ul> <li> <p>Security Certifications and Penetration Testing Planning</p> </li> <li> <p>ETSI and EMV security standards</p> </li> <li>Penetration testing planning</li> <li>PCI DSS and ISO 27001 security testing</li> </ul> <ul> <li> <p>Security Requirements</p> </li> <li> <p>ETSI,GSMA and EMV Security Requirements</p> </li> <li>EAL Requirements</li> <li>FIPS Requirements</li> </ul> <ul> <li> <p>Tigress and Diversification</p> </li> <li> <p>Tigress and Diversification Techniques</p> </li> <li> <p>Obfuscation Methods</p> </li> <li> <p>Defense Against Attacks</p> </li> </ul> <ul> <li> <p>Quiz 2</p> </li> <li> <p>The second quiz covers topics from the previous weeks</p> </li> </ul> <ul> <li> <p>Final Project Submission and Presentation</p> </li> <li> <p>Final project report and presentation</p> </li> </ul>","tags":["cen429-syllabus","secure-programming","fall-2024","cen429"]},{"location":"syllabus/syllabus/#d-textbooks-and-required-hardware-or-equipment","title":"D. Textbooks and Required Hardware or Equipment","text":"<p>There is no required textbook for this course. However, the following sources are recommended:</p> <ul> <li>C How to Program, 7/E. Deitel &amp; Deitel. 2013, Prentice-Hall.</li> <li>Introduction to Algorithms, Third Edition By Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein.</li> <li>Problem Solving and Program Design in C, J.R. Hanly, and E.B. Koffman.</li> </ul> <p>You are expected to have a personal laptop for class activities and exams.</p>","tags":["cen429-syllabus","secure-programming","fall-2024","cen429"]},{"location":"syllabus/syllabus/#e-grading","title":"E. Grading","text":"<p>You will complete one project and two written quizzes throughout the semester. You are expected to submit your Midterm Project Report at the midterm, demonstrating progress and outputs aligned with your project plan. In the 15<sup>th</sup> week, you will present and submit your Final Project Report. You will take a written quiz in the 8<sup>th</sup> week and another in the 14<sup>th</sup> week.</p> Assessment Code Weight Scope Midterm Project Report RAP1 60% Midterm Quiz-1 QUIZ1 40% Midterm Final Project Report RAP2 70% Final Quiz-2 QUIZ2 30% Final \\[ Grade_{Midterm} = 0.6 RAP1 + 0.4 QUIZ1 \\] \\[ Grade_{Final} = 0.7 RAP2 + 0.3 QUIZ2 \\] \\[ Passing Grade = (40 * Grade_{Midterm} + 60 * Grade_{Final}) / 100 \\]","tags":["cen429-syllabus","secure-programming","fall-2024","cen429"]},{"location":"syllabus/syllabus/#f-course-execution","title":"F. Course Execution","text":"<p>Classes will be conducted in person, with supplemental materials and announcements shared via Google Classroom or Microsoft Teams. In the event of a pandemic-related shift to remote learning, the course will transition to synchronous and asynchronous online education methods.</p>","tags":["cen429-syllabus","secure-programming","fall-2024","cen429"]},{"location":"syllabus/syllabus/#g-late-submissions","title":"G. Late Submissions","text":"<p>Assignments and projects must be submitted by the specified deadlines. Late submissions will not be accepted. Any unexpected situations must be communicated to the instructor as soon as possible.</p>","tags":["cen429-syllabus","secure-programming","fall-2024","cen429"]},{"location":"syllabus/syllabus/#h-communication-and-course-platform","title":"H. Communication and Course Platform","text":"<p>Google Classroom and Microsoft Teams will serve as the platforms for this course. All resources and announcements will be shared through these channels. To ensure smooth communication, you are expected to check these platforms regularly.</p>","tags":["cen429-syllabus","secure-programming","fall-2024","cen429"]},{"location":"syllabus/syllabus/#i-academic-integrity-plagiarism-and-cheating","title":"I. Academic Integrity, Plagiarism, and Cheating","text":"<p>Academic integrity is one of the most important principles at RTE\u00dc University. Anyone who violates academic honesty will face serious consequences.</p> <p>Collaborating with classmates or others to \"study together\" is normal. A student may seek help from someone else, paid or unpaid, to better understand a difficult topic or course. However, where is the line between \"studying together\" and \"academic dishonesty\"? When does it become plagiarism, and when is it cheating?</p> <p>It is clear that looking at another student\u2019s paper or any unauthorized sources during the exam is cheating and will be punished. However, many students enter university with little experience regarding what is acceptable in assignments, particularly when it comes to \"copying.\"</p> <p>The following guidelines for the Faculty of Engineering and Architecture students highlight the philosophy of academic honesty for graded assignments. Should any situation arise that is not described here, students are advised to consult with the course instructor or assistant to determine whether their actions fall within the bounds of academic honesty.</p>","tags":["cen429-syllabus","secure-programming","fall-2024","cen429"]},{"location":"syllabus/syllabus/#a-what-is-acceptable-when-preparing-an-assignment","title":"a. What is acceptable when preparing an assignment?","text":"<ul> <li>Communicating with classmates to better understand the assignment.</li> </ul> <ul> <li> <p>Including ideas, quotes, paragraphs, or small code snippets found online or elsewhere in your assignment, provided that:</p> </li> <li> <p>These do not represent the entire solution to the assignment.</p> </li> <li> <p>The sources are properly cited.</p> </li> </ul> <ul> <li> <p>Asking for guidance in improving the English content of your assignment.</p> </li> <li> <p>Sharing small portions of your assignment in class for discussion.</p> </li> <li> <p>Using external sources for technical instructions, references, or troubleshooting, but not for direct answers to the assignment.</p> </li> <li> <p>Discussing solutions using diagrams or summarized statements, but not actual text or code.</p> </li> <li> <p>Working with (and even paying) a tutor to help with the course, as long as the tutor does not complete the assignment for you.</p> </li> </ul>","tags":["cen429-syllabus","secure-programming","fall-2024","cen429"]},{"location":"syllabus/syllabus/#b-what-is-not-acceptable","title":"b. What is not acceptable?","text":"<ul> <li> <p>Asking to see a classmate\u2019s solution to a problem before submitting your own.</p> </li> <li> <p>Failing to cite the source of any text or code used from outside the course.</p> </li> <li> <p>Giving or showing your solution to a classmate struggling to solve the problem.</p> </li> </ul>","tags":["cen429-syllabus","secure-programming","fall-2024","cen429"]},{"location":"syllabus/syllabus/#j-expectations","title":"J. Expectations","text":"<p>You are expected to attend classes on time and complete weekly course requirements (readings and assignments) throughout the semester. The primary communication channel between the instructor and students will be email. Please send your questions to the instructor\u2019s university-provided email address. Be sure to include the course name in the subject line and your name in the body of the email. The instructor will also contact you via email when necessary, so it is crucial to check your email regularly for communication.</p>","tags":["cen429-syllabus","secure-programming","fall-2024","cen429"]},{"location":"syllabus/syllabus/#k-course-content-and-schedule-updates","title":"K. Course Content and Schedule Updates","text":"<p>The course content and schedule may be updated as needed. Any changes will be communicated to students by the instructor.</p>","tags":["cen429-syllabus","secure-programming","fall-2024","cen429"]},{"location":"syllabus/syllabus/#c-weekly-lesson-plan","title":"C. Weekly Lesson Plan","text":"Week Date Topic Other Tasks 1. Week 26 September 2024 Introduction to Secure Programming and Application Protection Plan 2. Week 3 October 2024 Computer Viruses and Security Models 3. Week 10 October 2024 Data Security: In Transit, At Rest, and In Use","tags":["cen429-syllabus","secure-programming","fall-2024","cen429"]},{"location":"syllabus/syllabus/#c-weekly-lesson-plan_1","title":"C. Weekly Lesson Plan","text":"Week Date Topic Other Tasks 4. Week 17 October 2024 Code Hardening Techniques (C/C++) 5. Week 24 October 2024 Code Hardening Techniques (Java/Interpreted Languages) 6. Week 31 October 2024 Runtime Application Self-Protection (RASP) Techniques (C/C++) 7. Week 7 November 2024 Advanced Code Obfuscation and Diversification Techniques","tags":["cen429-syllabus","secure-programming","fall-2024","cen429"]},{"location":"syllabus/syllabus/#c-weekly-lesson-plan_2","title":"C. Weekly Lesson Plan","text":"Week Date Topic Other Tasks 8. Week 14 November 2024 Quiz 1 + Midterm Project Report Submission Quiz and Midterm Report 9. Week 21 November 2024 Certificates and Cryptographic Methods (AES, RSA, PKI) 10. Week 28 November 2024 Whitebox Cryptography 11. Week 5 December 2024 Security Certifications and Penetration Testing Planning","tags":["cen429-syllabus","secure-programming","fall-2024","cen429"]},{"location":"syllabus/syllabus/#c-weekly-lesson-plan_3","title":"C. Weekly Lesson Plan","text":"Week Date Topic Other Tasks 12. Week 12 December 2024 Security Requirements 13. Week 19 December 2024 Tigress and Diversification 14. Week 26 December 2024 Quiz 2 Quiz 2 15. Week 2 January 2025 Final Project Submission and Presentation Final Project and Presentation","tags":["cen429-syllabus","secure-programming","fall-2024","cen429"]},{"location":"syllabus/syllabus/#bologna-information","title":"Bologna Information","text":"<p>\\(End-Of-Syllabus\\)</p>","tags":["cen429-syllabus","secure-programming","fall-2024","cen429"]},{"location":"week-1/cen429-week-1/","title":"CEN429 Secure Programming Week-1","text":"","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#cen429-secure-programming","title":"CEN429 Secure Programming","text":"","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#week-1","title":"Week-1","text":"","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#course-plan-and-communication-secure-programming-and-computer-viruses","title":"Course Plan and Communication, Secure Programming, and Computer Viruses","text":"<p>Download </p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#outline","title":"Outline","text":"<ul> <li>Secure Programming and Computer Viruses</li> <li>Application Protection Plan</li> <li>Code Splitting    </li> <li>Code Verification</li> <li>Timing    </li> <li>Protocol Monitoring</li> <li>Computer Viruses</li> <li>Virus Characteristics</li> <li>Virus Types</li> <li>Virus Countermeasures</li> <li>Attack Trees and Security Models</li> <li>Attack Methods</li> <li>Secure Communication Goals</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#application-protection-plan","title":"Application Protection Plan","text":"","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#1-code-splitting","title":"1. Code Splitting","text":"","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#theoretical-explanation","title":"Theoretical Explanation:","text":"<p>Code splitting refers to moving operations performed in an untrusted environment to a trusted one, thus minimizing security vulnerabilities.</p>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#practical-application","title":"Practical Application:","text":"<ul> <li>Task: Implement a system where encryption is handled on the server instead of the client in a client-server model. This method ensures that critical operations are executed in a secure environment.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#2-code-verification","title":"2. Code Verification","text":"","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#theoretical-explanation_1","title":"Theoretical Explanation:","text":"<p>We verify that a system performs as expected by asking an untrusted device or site, \"Are you running the correct code?\"</p>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#practical-application_1","title":"Practical Application:","text":"<ul> <li>Task: Develop a system that checks whether an application can solve specific mathematical problems correctly and quickly during runtime. The system will cease operations if it cannot prove its correctness.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#3-timing","title":"3. Timing","text":"","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#theoretical-explanation_2","title":"Theoretical Explanation:","text":"<p>In an untrusted system, a computational challenge is set up and expected to be solved within a certain timeframe. This technique prevents attackers from having enough time for analysis.</p>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#practical-application_2","title":"Practical Application:","text":"<ul> <li>Task: Create a \"Time-Based Question-Answer\" application. If no response is received within the specified time, terminate the session.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#4-protocol-monitoring","title":"4. Protocol Monitoring","text":"","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#theoretical-explanation_3","title":"Theoretical Explanation:","text":"<p>By monitoring protocol flows during data transfer, we can detect potential security vulnerabilities or malicious activities.</p>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#practical-application_3","title":"Practical Application:","text":"<ul> <li>Task: Set up a logging system that monitors HTTP requests on a web server. Block users when suspicious requests are detected.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#computer-viruses","title":"Computer Viruses","text":"","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#1-virus-characteristics","title":"1. Virus Characteristics","text":"<ul> <li>Dormant State: A virus may remain inactive for a while, avoiding detection.</li> <li>Propagation: It spreads to new files or systems.</li> <li>Triggering: An event determines when the virus will activate.</li> <li>Action: The virus performs a harmful task, often called a \"payload.\"</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#practical-application_4","title":"Practical Application:","text":"<ul> <li>Task: Create a simulation where the virus stays dormant and activates on a specific date to delete a file.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#2-virus-types","title":"2. Virus Types","text":"<ul> <li>Program/File Virus: Infects program files.</li> <li>Macro Virus: Infects Word/Excel documents and executes when the document is opened.</li> <li>Boot Sector Virus: Infects the boot sector of a hard drive, activating when the computer starts.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#practical-application_5","title":"Practical Application:","text":"<ul> <li>Task: Create a simulation showing how different virus types work. Each type should be triggered by different events.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#3-virus-countermeasures","title":"3. Virus Countermeasures","text":"<ul> <li>Signature-Based Detection: Detects viruses based on known code snippets.</li> <li>Encryption: Viruses can encrypt their code to evade signature-based detection.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#practical-application_6","title":"Practical Application:","text":"<ul> <li>Task: Create a simulation of an encrypted virus. The virus's code should be encrypted with a different key each time it is executed.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#security-models-and-attack-trees","title":"Security Models and Attack Trees","text":"","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#1-what-is-an-attack-tree","title":"1. What is an Attack Tree?","text":"<p>An attack tree helps us understand the strategies an attacker might use to reach a goal. This model visualizes vulnerabilities, aiding in the development of effective defenses.</p>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#practical-application_7","title":"Practical Application:","text":"<ul> <li>Task: Build a simple attack tree. For example, model the steps from an SQL injection in a web application to gaining access to the database.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#2-cost-modeling","title":"2. Cost Modeling","text":"<p>Each step in an attack has a cost. These costs can be calculated to make it harder for an attacker to achieve their goal. In an attack tree, costs are assigned to each node, and the least costly path is calculated.</p>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#practical-application_8","title":"Practical Application:","text":"<ul> <li>Task: Create a simulation that calculates the cost of each step in an attack tree. Simulate reaching the goal with the lowest cost.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#attack-methods","title":"Attack Methods","text":"","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#1-dynamic-analysis","title":"1. Dynamic Analysis","text":"<p>This helps understand which parts of a program are triggered during execution and how the system behaves based on inputs.</p>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#practical-application_9","title":"Practical Application:","text":"<ul> <li>Task: Develop a tracker that monitors which functions of software are called during runtime and what inputs trigger these functions.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#2-static-analysis","title":"2. Static Analysis","text":"<p>This involves analyzing the source code or compiled version of a program. This analysis helps identify potential security vulnerabilities.</p>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#practical-application_10","title":"Practical Application:","text":"<ul> <li>Task: Use a disassembler to analyze the compiled code of a simple program and identify weaknesses.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#3-editing-phase","title":"3. Editing Phase","text":"<p>After understanding the internal workings of software, an attacker may edit the program to disable license checks or remove restrictions.</p>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#practical-application_11","title":"Practical Application:","text":"<ul> <li>Task: Edit a program's binary to bypass a license check. Track which restrictions are lifted.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#secure-communication-goals","title":"Secure Communication Goals","text":"<ul> <li>Mutual Authentication: Both parties in a communication verify each other.</li> <li>Key Revocation: Revocation of invalid keys.</li> <li>High Performance: Speed and low latency are essential for secure communication.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#practical-application_12","title":"Practical Application:","text":"<ul> <li>Task: Create a simple authentication protocol where both parties mutually verify each other.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#week-summary-and-next-week","title":"Week Summary and Next Week","text":"","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#this-week","title":"This Week:","text":"<ul> <li>Application Protection Plan</li> <li>Computer Viruses and Types</li> <li>Attack Trees and Security Models</li> <li>Attack Methods and Secure Communication Goals</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-1/cen429-week-1/#next-week","title":"Next Week:","text":"<ul> <li>Data Security</li> <li>Cryptographic Techniques</li> <li>Applied Encryption</li> </ul> \\[ End-Of-Week-1 \\]","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"week-10/cen429-week-10/","title":"CEN429 Secure Programming Week-10","text":"","tags":["cen429-week-10","whitebox-cryptography","encryption","security"]},{"location":"week-10/cen429-week-10/#cen429-secure-programming","title":"CEN429 Secure Programming","text":"","tags":["cen429-week-10","whitebox-cryptography","encryption","security"]},{"location":"week-10/cen429-week-10/#week-10","title":"Week-10","text":"","tags":["cen429-week-10","whitebox-cryptography","encryption","security"]},{"location":"week-10/cen429-week-10/#whitebox-cryptography","title":"Whitebox Cryptography","text":"<p>Download </p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-week-10","whitebox-cryptography","encryption","security"]},{"location":"week-10/cen429-week-10/#outline","title":"Outline","text":"<ul> <li>What is Whitebox Cryptography?</li> <li>Whitebox Encryption Methods</li> <li>Application Areas and Threats</li> </ul>","tags":["cen429-week-10","whitebox-cryptography","encryption","security"]},{"location":"week-10/cen429-week-10/#week-10-whitebox-cryptography","title":"Week-10: Whitebox Cryptography","text":"<p>This week, we will explore Whitebox Cryptography, which deals with securely applying encryption processes in open systems. Whitebox cryptography is especially important for ensuring data security in digital rights management (DRM) and mobile applications.</p>","tags":["cen429-week-10","whitebox-cryptography","encryption","security"]},{"location":"week-10/cen429-week-10/#1-fundamentals-of-whitebox-cryptography","title":"1. Fundamentals of Whitebox Cryptography","text":"<p>Theoretical Explanation: Whitebox cryptography was developed to provide security when an attacker has access to all resources of a system. The main goal is to keep encryption keys and processes hidden from external attacks. The attacker may analyze the code, read memory, and track encryption processes in the system. Whitebox cryptography offers techniques to ensure security even in these cases.</p> <ul> <li>Blackbox Model: The key and data remain hidden within the system during the encryption process. The attacker does not have access to the encryption algorithm.</li> <li>Whitebox Model: The attacker has full access to the system. The encryption algorithm and keys are visible to the attacker.</li> </ul> <p>Application Examples:</p> <ol> <li>Analyzing how an encryption algorithm can be hidden in a whitebox environment.</li> <li>Comparing and explaining the differences between blackbox and whitebox models.</li> </ol>","tags":["cen429-week-10","whitebox-cryptography","encryption","security"]},{"location":"week-10/cen429-week-10/#2-whitebox-encryption-methods","title":"2. Whitebox Encryption Methods","text":"<p>Theoretical Explanation: Whitebox encryption is mainly used for symmetric encryption algorithms. In whitebox environments, encryption is done in a way that makes it difficult to extract or predict the encryption key from memory.</p> <ul> <li>Whitebox AES: Ensures the secure application of the AES encryption algorithm in whitebox environments.</li> <li>Whitebox DES: Similar to Whitebox AES but applies to the DES algorithm.</li> </ul> <p>Application Examples:</p> <ol> <li>Encrypting and decrypting text using Whitebox AES.</li> <li>Encrypting and decrypting data using Whitebox DES.</li> </ol>","tags":["cen429-week-10","whitebox-cryptography","encryption","security"]},{"location":"week-10/cen429-week-10/#3-whitebox-aes-and-des","title":"3. Whitebox AES and DES","text":"<p>Theoretical Explanation: AES and DES are symmetric encryption algorithms. In whitebox applications, various techniques are used to obscure the internal structures of these algorithms.</p> <ul> <li>Whitebox AES: The AES algorithm, normally running in a secure environment, is transformed to hide keys even when the attacker has full access to memory and code. This is achieved through table-based transformations.</li> <li>Whitebox DES: Similar techniques are used for DES, but it offers lower security compared to AES.</li> </ul> <p>Application Examples:</p> <ol> <li>Analyzing the step-by-step working of Whitebox AES.</li> <li>Discussing the weaknesses and security vulnerabilities of Whitebox DES.</li> </ol>","tags":["cen429-week-10","whitebox-cryptography","encryption","security"]},{"location":"week-10/cen429-week-10/#4-techniques-used-in-whitebox-cryptography","title":"4. Techniques Used in Whitebox Cryptography","text":"<p>Theoretical Explanation: Whitebox cryptography uses various techniques that make it difficult for the attacker to obtain the keys.</p> <ul> <li>Table Lookups: Key operations are performed through table-based transformations, ensuring that keys are not visible in the code.</li> <li>Obfuscation: The code is made more complex to make it harder to track encryption processes.</li> <li>Multiple Masking: Keys are protected with multiple layers of masking, making it insufficient for an attacker to capture just one key.</li> </ul> <p>Application Examples:</p> <ol> <li>How can encryption processes be secured in a whitebox using Table Lookups?</li> <li>Using Obfuscation techniques to make the encryption algorithm more complex.</li> </ol>","tags":["cen429-week-10","whitebox-cryptography","encryption","security"]},{"location":"week-10/cen429-week-10/#5-security-threats-in-whitebox-cryptography","title":"5. Security Threats in Whitebox Cryptography","text":"<p>Theoretical Explanation: Whitebox cryptography may not provide full security and may be vulnerable to various types of attacks.</p> <ul> <li>Side-Channel Attacks: The attacker may analyze energy consumption, electromagnetic emissions, or timing information during the encryption process to obtain the encryption keys.</li> <li>Brute Force Attacks: The attacker tries all possible key combinations to find the correct key.</li> <li>Differential Fault Analysis (DFA): The attacker manipulates memory or processor faults during the encryption process to extract key information.</li> </ul> <p>Application Examples:</p> <ol> <li>How can whitebox environments protect against side-channel attacks?</li> <li>Analyzing the effects and mitigation strategies for brute force attacks.</li> </ol>","tags":["cen429-week-10","whitebox-cryptography","encryption","security"]},{"location":"week-10/cen429-week-10/#6-advantages-and-disadvantages-of-whitebox-cryptography-in-security","title":"6. Advantages and Disadvantages of Whitebox Cryptography in Security","text":"<p>Theoretical Explanation: While whitebox cryptography is widely used in digital rights management (DRM) and mobile applications, it does not offer a perfect solution in all cases. The advantages and disadvantages are as follows:</p> <ul> <li>Advantages:</li> <li>Provides security even when the attacker has full access to the system.</li> <li>Widely used in applications like digital rights management (DRM).</li> <li>Disadvantages:</li> <li>It may still be vulnerable to various attacks like side-channel attacks.</li> <li>Performance can be costly due to the added layers of masking and transformations.</li> </ul> <p>Application Examples:</p> <ol> <li>Discussing the advantages and disadvantages of whitebox cryptography.</li> <li>Comparing the security models of whitebox and blackbox.</li> </ol>","tags":["cen429-week-10","whitebox-cryptography","encryption","security"]},{"location":"week-10/cen429-week-10/#7-application-areas-of-whitebox-cryptography","title":"7. Application Areas of Whitebox Cryptography","text":"<p>Theoretical Explanation: Whitebox cryptography is used in various application areas:</p> <ul> <li>Digital Rights Management (DRM): Prevents the piracy of digital content like music, movies, and software.</li> <li>Mobile Application Security: Protects sensitive information in applications running on mobile devices, especially in financial apps.</li> <li>IoT Security: Ensures data security in Internet of Things (IoT) devices.</li> </ul> <p>Application Examples:</p> <ol> <li>Examining the use of whitebox cryptography in DRM systems.</li> <li>Implementing and testing whitebox cryptography in mobile applications.</li> </ol>","tags":["cen429-week-10","whitebox-cryptography","encryption","security"]},{"location":"week-10/cen429-week-10/#8-whitebox-cryptography-tools","title":"8. Whitebox Cryptography Tools","text":"<p>Theoretical Explanation: Various tools and libraries can be used to implement whitebox cryptography. These tools make encryption processes more complex, enhancing security.</p> <ul> <li>Tigress: A tool that provides obfuscation and whitebox cryptography techniques for C/C++ programs.</li> <li>Whitebox Toolkits: Various open-source and commercial libraries that implement whitebox AES and other encryption algorithms.</li> </ul> <p>Application Examples:</p> <ol> <li>Using Tigress to obfuscate an encryption algorithm.</li> <li>Developing a simple application using whitebox cryptography tools.</li> </ol>","tags":["cen429-week-10","whitebox-cryptography","encryption","security"]},{"location":"week-10/cen429-week-10/#9-future-trends-in-whitebox-cryptography","title":"9. Future Trends in Whitebox Cryptography","text":"<p>Theoretical Explanation: Whitebox cryptography continues to play a critical role in digital rights management and secure mobile applications. In the future, whitebox security techniques are expected to improve and become more resistant to new types of attacks.</p> <ul> <li>Post-Quantum Cryptography: With the advent of quantum computers, the security of current encryption algorithms is being questioned. Whitebox cryptography is being enhanced to deal with these new threats.</li> </ul> <p>Application Examples:</p> <ol> <li>Analyzing how whitebox cryptography can be developed to address future security threats.</li> </ol>","tags":["cen429-week-10","whitebox-cryptography","encryption","security"]},{"location":"week-10/cen429-week-10/#conclusion","title":"Conclusion","text":"<p>This week, we learned the fundamentals of whitebox cryptography, its application areas, and how to protect against security threats. Whitebox cryptography is a crucial tool for securing digital content and sensitive information.</p> \\[ End-of-Week-10 \\]","tags":["cen429-week-10","whitebox-cryptography","encryption","security"]},{"location":"week-11/cen429-week-11/","title":"CEN429 Secure Programming Week-11","text":"","tags":["cen429-week-11","security-certificates","penetration-testing","security"]},{"location":"week-11/cen429-week-11/#cen429-secure-programming","title":"CEN429 Secure Programming","text":"","tags":["cen429-week-11","security-certificates","penetration-testing","security"]},{"location":"week-11/cen429-week-11/#week-11","title":"Week-11","text":"","tags":["cen429-week-11","security-certificates","penetration-testing","security"]},{"location":"week-11/cen429-week-11/#security-certificates-and-penetration-testing-plans","title":"Security Certificates and Penetration Testing Plans","text":"<p>Download</p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-week-11","security-certificates","penetration-testing","security"]},{"location":"week-11/cen429-week-11/#outline","title":"Outline","text":"<ul> <li>Importance of Security Certificates</li> <li>Penetration Testing Plans and Tools</li> <li>Certification Processes and Relationships</li> </ul>","tags":["cen429-week-11","security-certificates","penetration-testing","security"]},{"location":"week-11/cen429-week-11/#week-11-security-certificates-and-penetration-testing-plans","title":"Week-11: Security Certificates and Penetration Testing Plans","text":"<p>The goal of this week is to learn the importance of security certifications, the standards used, and how penetration testing (PenTest) processes are planned. Security certificates demonstrate the compliance of software and hardware with international security standards, while penetration tests help identify security vulnerabilities and analyze potential threats.</p>","tags":["cen429-week-11","security-certificates","penetration-testing","security"]},{"location":"week-11/cen429-week-11/#1-importance-of-security-certificates","title":"1. Importance of Security Certificates","text":"<p>Theoretical Explanation: Security certificates indicate that a system or product meets certain security standards. Certificates usually provide assurance to users that a product has undergone specific security testing.</p> <ul> <li>Why Important?</li> <li>Provides reliability.</li> <li>Shows compliance with international standards.</li> <li>Meets regulatory and legal requirements.</li> <li>Increases product security level.</li> <li>Instills confidence in users and customers.</li> </ul> <p>Application Examples:</p> <ol> <li>Analyzing why a system requires a security certificate.</li> <li>Examining the effects of security certificates on commercial products.</li> </ol>","tags":["cen429-week-11","security-certificates","penetration-testing","security"]},{"location":"week-11/cen429-week-11/#2-common-security-certificates-and-standards","title":"2. Common Security Certificates and Standards","text":"<p>Theoretical Explanation: Many security standards and certifications are used to ensure the security of hardware and software products. These standards guide how products should be tested and certified.</p> <ul> <li>ETSI (European Telecommunications Standards Institute): Establishes standards for telecommunications and network security.</li> <li>EMV (Europay, MasterCard, Visa): A standard used to secure card-based payment systems.</li> <li>GSMA: Security standards for mobile devices and networks.</li> <li>ISO/IEC 27001: Information security management systems standard.</li> <li>PCI DSS (Payment Card Industry Data Security Standard): A standard used to secure payment card information.</li> </ul> <p>Application Examples:</p> <ol> <li>Creating a network security plan based on ETSI standards.</li> <li>Exploring how PCI DSS compliance is ensured for a payment system.</li> </ol>","tags":["cen429-week-11","security-certificates","penetration-testing","security"]},{"location":"week-11/cen429-week-11/#3-eal-evaluation-assurance-level-certification","title":"3. EAL (Evaluation Assurance Level) Certification","text":"<p>Theoretical Explanation: EAL (Evaluation Assurance Level) indicates the degree to which a product meets certain security requirements. It provides security assurance at various levels (from EAL1 to EAL7).</p> <ul> <li>EAL Levels:</li> <li>EAL1: Functionally tested.</li> <li>EAL2: Structurally tested.</li> <li>EAL3: Methodically tested and checked.</li> <li>EAL4: Design reviewed and methodically tested.</li> <li>EAL5: High assurance, semantically analyzed.</li> <li>EAL6 and EAL7: Extremely high security level, mathematically proven.</li> </ul> <p>Application Examples:</p> <ol> <li>Investigating how the EAL certification process works.</li> <li>Assessing the security of a system based on EAL levels.</li> </ol>","tags":["cen429-week-11","security-certificates","penetration-testing","security"]},{"location":"week-11/cen429-week-11/#4-penetration-testing-pentest-plans","title":"4. Penetration Testing (PenTest) Plans","text":"<p>Theoretical Explanation: Penetration testing simulates attacks to identify vulnerabilities and security weaknesses in a system. Penetration testing plans include the areas to be tested, methodology, objectives, and process.</p> <ul> <li>Why Conduct Penetration Testing?</li> <li>To identify security vulnerabilities.</li> <li>To test the system against real-world attacks.</li> <li>To strengthen defense mechanisms by identifying weaknesses.</li> <li>To proactively improve system security.</li> </ul> <p>PenTest Process Steps:</p> <ol> <li>Reconnaissance: Gathering information about the system.</li> <li>Scanning: Identifying open ports, services, and vulnerabilities.</li> <li>Exploitation: Exploiting identified vulnerabilities to gain access.</li> <li>Privilege Escalation: Gaining administrative privileges within the system.</li> <li>Maintaining Access: Making the access permanent.</li> <li>Evidence Collection: Documenting the discovered vulnerabilities.</li> </ol> <p>Application Examples:</p> <ol> <li>Creating a penetration testing plan for a web application.</li> <li>Simulating real-world attacks to analyze the security weaknesses of a system.</li> </ol>","tags":["cen429-week-11","security-certificates","penetration-testing","security"]},{"location":"week-11/cen429-week-11/#5-penetration-testing-methods","title":"5. Penetration Testing Methods","text":"<p>Theoretical Explanation: Penetration testing methods vary depending on the type of system and attack objectives. Common testing methods include:</p> <ul> <li>Whitebox Testing: The tester has knowledge of the system's internal structure and source code.</li> <li>Blackbox Testing: The tester has no prior knowledge of the system. Attacks are carried out from the outside.</li> <li>Graybox Testing: The tester has partial knowledge of the system. For example, they may have information about the application structure or user roles.</li> </ul> <p>Application Examples:</p> <ol> <li>Analyzing the differences between whitebox and blackbox testing.</li> <li>Conducting graybox testing on a system and reporting the results.</li> </ol>","tags":["cen429-week-11","security-certificates","penetration-testing","security"]},{"location":"week-11/cen429-week-11/#6-penetration-testing-tools","title":"6. Penetration Testing Tools","text":"<p>Theoretical Explanation: Various tools are used during penetration testing to analyze system vulnerabilities. These tools are chosen based on the scope and objectives of the test.</p> <ul> <li>Nessus: A popular tool used for vulnerability scanning.</li> <li>Metasploit: A framework used for exploiting vulnerabilities and testing weaknesses.</li> <li>Wireshark: A tool used to monitor and analyze network traffic.</li> <li>Burp Suite: A tool used for security testing of web applications.</li> <li>OWASP ZAP: An open-source tool used to detect security vulnerabilities in web applications.</li> </ul> <p>Application Examples:</p> <ol> <li>Scanning a system for security vulnerabilities using Nessus.</li> <li>Exploiting a security vulnerability using Metasploit and analyzing the results.</li> </ol>","tags":["cen429-week-11","security-certificates","penetration-testing","security"]},{"location":"week-11/cen429-week-11/#7-the-relationship-between-penetration-testing-and-certification","title":"7. The Relationship Between Penetration Testing and Certification","text":"<p>Theoretical Explanation: Penetration testing results play a crucial role in the security certification process of a system. Certification bodies often consider penetration test results to verify the security of a system.</p> <ul> <li>How Are They Related?</li> <li>PenTest results are included in the certification process, proving the security level.</li> <li>Specific tests must be passed successfully to obtain a security certificate.</li> <li>Regular penetration tests are conducted to ensure certification compliance.</li> </ul> <p>Application Examples:</p> <ol> <li>Analyzing how penetration test results can be integrated into the certification process.</li> <li>Preparing a security testing plan in line with certification requirements.</li> </ol>","tags":["cen429-week-11","security-certificates","penetration-testing","security"]},{"location":"week-11/cen429-week-11/#conclusion","title":"Conclusion","text":"<p>This week, we examined the impact of security certifications and penetration testing on system security. Security certificates demonstrate compliance with international standards, while penetration tests uncover vulnerabilities and improve the security of a system. These two processes work together to enhance the security level of software and hardware products.</p> \\[ End-Of-Week-11 \\]","tags":["cen429-week-11","security-certificates","penetration-testing","security"]},{"location":"week-12/cen429-week-12/","title":"CEN429 Secure Programming Week-12","text":"","tags":["cen429-week-12","security-requirements","standards","security"]},{"location":"week-12/cen429-week-12/#cen429-secure-programming","title":"CEN429 Secure Programming","text":"","tags":["cen429-week-12","security-requirements","standards","security"]},{"location":"week-12/cen429-week-12/#week-12","title":"Week-12","text":"","tags":["cen429-week-12","security-requirements","standards","security"]},{"location":"week-12/cen429-week-12/#security-requirements-and-standards","title":"Security Requirements and Standards","text":"<p>Download</p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-week-12","security-requirements","standards","security"]},{"location":"week-12/cen429-week-12/#outline","title":"Outline","text":"<ul> <li>Importance of Security Requirements</li> <li>International Security Standards</li> <li>Common Security Certifications</li> </ul>","tags":["cen429-week-12","security-requirements","standards","security"]},{"location":"week-12/cen429-week-12/#week-12-security-requirements-and-standards","title":"Week-12: Security Requirements and Standards","text":"<p>This week, we will learn how to define security requirements, how international security standards are developed, and why it is important to comply with widely used security certifications. Security requirements are designed to determine how resilient a system is to attacks. These standards are used in various sectors to ensure security.</p>","tags":["cen429-week-12","security-requirements","standards","security"]},{"location":"week-12/cen429-week-12/#1-importance-of-security-requirements","title":"1. Importance of Security Requirements","text":"<p>Theoretical Explanation: For a system to be secure, it must meet specific security requirements. These requirements determine what threats the system should be protected against and what security measures should be implemented.</p> <ul> <li>Main Categories of Security Requirements:</li> <li>Confidentiality: Preventing unauthorized access to information.</li> <li>Integrity: Preventing unauthorized changes to data.</li> <li>Authentication: Verifying the identity of users accessing the system.</li> <li>Authorization: Ensuring only certain users can access specific resources.</li> <li>Auditing: Recording and tracking system events.</li> <li>Availability: Ensuring the system operates continuously without interruption.</li> </ul> <p>Practical Examples:</p> <ol> <li>Defining security requirements for an application.</li> <li>Analyzing how to secure a database.</li> </ol>","tags":["cen429-week-12","security-requirements","standards","security"]},{"location":"week-12/cen429-week-12/#2-etsi-european-telecommunications-standards-institute","title":"2. ETSI (European Telecommunications Standards Institute)","text":"<p>Theoretical Explanation: ETSI is responsible for defining standards, particularly in the areas of network security, mobile communications, and IoT devices.</p> <ul> <li>ETSI\u2019s Roles:</li> <li>Developing international standards for telecommunications technologies.</li> <li>Providing security solutions for mobile networks.</li> <li>Creating security standards for 5G.</li> </ul> <p>Practical Examples:</p> <ol> <li>Evaluating the security of an IoT device according to ETSI standards.</li> <li>Configuring a network according to ETSI-defined security requirements.</li> </ol>","tags":["cen429-week-12","security-requirements","standards","security"]},{"location":"week-12/cen429-week-12/#3-gsma-gsm-association","title":"3. GSMA (GSM Association)","text":"<p>Theoretical Explanation: GSMA defines security standards for mobile devices and networks, particularly focusing on SIM card security, network security, and protocols for mobile operators.</p> <ul> <li>GSMA\u2019s Role:</li> <li>Creating security standards for protocols used in mobile networks.</li> <li>Managing security standards for SIM and eSIM cards.</li> <li>Ensuring secure data exchange between mobile operators.</li> </ul> <p>Practical Examples:</p> <ol> <li>Defining security requirements for a mobile device according to GSMA standards.</li> <li>Integrating security protocols suggested by GSMA into mobile application development processes.</li> </ol>","tags":["cen429-week-12","security-requirements","standards","security"]},{"location":"week-12/cen429-week-12/#4-emv-europay-mastercard-visa","title":"4. EMV (Europay, MasterCard, Visa)","text":"<p>Theoretical Explanation: EMV is a standard created to ensure the security of payment cards. It is widely used to enhance the security of credit cards and POS devices.</p> <ul> <li>EMV Standards:</li> <li>MasterCard: Ensuring card security and protection of payment systems.</li> <li>Visa: Protocols for securing cardholders and POS devices.</li> </ul> <p>Practical Examples:</p> <ol> <li>Creating security requirements for a payment system compliant with EMV standards.</li> <li>Integrating security protocols provided by MasterCard and Visa into a POS device.</li> </ol>","tags":["cen429-week-12","security-requirements","standards","security"]},{"location":"week-12/cen429-week-12/#5-eal-evaluation-assurance-level","title":"5. EAL (Evaluation Assurance Level)","text":"<p>Theoretical Explanation: EAL, or Evaluation Assurance Level, indicates the level of security a product meets. EAL levels help define how extensively a system's security is tested.</p> <ul> <li>EAL Levels:</li> <li>EAL1: Functionally tested.</li> <li>EAL2: Structurally tested.</li> <li>EAL3: Methodically tested and checked.</li> <li>EAL4: Methodically tested, designed, and reviewed.</li> <li>EAL5 and above: Systems with high-security requirements.</li> </ul> <p>Practical Examples:</p> <ol> <li>Determining the security rating of a system according to EAL levels.</li> <li>Developing test scenarios for a system at EAL4 level.</li> </ol>","tags":["cen429-week-12","security-requirements","standards","security"]},{"location":"week-12/cen429-week-12/#6-common-criteria","title":"6. Common Criteria","text":"<p>Theoretical Explanation: Common Criteria is an international security certification standard used to evaluate the security level of products, widely recognized worldwide.</p> <ul> <li>Advantages of Common Criteria:</li> <li>Ensures product security is globally acknowledged.</li> <li>Provides a common language for verifying security features.</li> <li>Compatible with EAL certification processes.</li> </ul> <p>Practical Examples:</p> <ol> <li>Initiating a security certification process under Common Criteria.</li> <li>Preparing a software development plan compliant with Common Criteria.</li> </ol>","tags":["cen429-week-12","security-requirements","standards","security"]},{"location":"week-12/cen429-week-12/#7-fips-federal-information-processing-standards","title":"7. FIPS (Federal Information Processing Standards)","text":"<p>Theoretical Explanation: FIPS defines information processing standards used by the U.S. government. It is particularly known for setting security standards for cryptographic modules.</p> <ul> <li>Importance of FIPS:</li> <li>Defines security protocols used in U.S. government systems.</li> <li>Ensures the certification of cryptographic algorithms and modules.</li> <li>Provides security standards developed to protect sensitive information.</li> </ul> <p>Practical Examples:</p> <ol> <li>Developing a cryptographic module compliant with FIPS standards.</li> <li>Integrating FIPS-certified security algorithms into an application.</li> </ol>","tags":["cen429-week-12","security-requirements","standards","security"]},{"location":"week-12/cen429-week-12/#conclusion","title":"Conclusion","text":"<p>This week, we explored security requirements and standards like ETSI, GSMA, EMV, EAL, Common Criteria, and FIPS. These standards help ensure the security of systems and products by defining internationally recognized security protocols. Security certifications demonstrate that products and systems have been evaluated and approved for security.</p> \\[ End-of-Week-12 \\]","tags":["cen429-week-12","security-requirements","standards","security"]},{"location":"week-13/cen429-week-13/","title":"CEN429 Secure Programming Week-13","text":"","tags":["cen429-week-13","tigress","diversification-techniques","security"]},{"location":"week-13/cen429-week-13/#cen429-secure-programming","title":"CEN429 Secure Programming","text":"","tags":["cen429-week-13","tigress","diversification-techniques","security"]},{"location":"week-13/cen429-week-13/#week-13","title":"Week-13","text":"","tags":["cen429-week-13","tigress","diversification-techniques","security"]},{"location":"week-13/cen429-week-13/#tigress-and-diversification-techniques","title":"Tigress and Diversification Techniques","text":"<p>Download</p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-week-13","tigress","diversification-techniques","security"]},{"location":"week-13/cen429-week-13/#outline","title":"Outline","text":"<ul> <li>Tigress and Diversification Techniques</li> <li>Obfuscation Methods</li> <li>Defense Against Attacks</li> </ul>","tags":["cen429-week-13","tigress","diversification-techniques","security"]},{"location":"week-13/cen429-week-13/#week-13-tigress-and-diversification-techniques","title":"Week-13: Tigress and Diversification Techniques","text":"<p>This week, we will examine diversification techniques that make code analysis more difficult and make programs more resistant to attacks, as well as obfuscation tools like Tigress. These techniques ensure that each time the program runs, it behaves differently, making it harder for attackers to analyze the program with the same methods.</p>","tags":["cen429-week-13","tigress","diversification-techniques","security"]},{"location":"week-13/cen429-week-13/#1-tigress-diversification","title":"1. Tigress Diversification","text":"<p>Theoretical Explanation: Tigress is a powerful obfuscation tool that transforms a program in various ways to make it more resistant to attacks. Each output of a program creates a unique interpreter, randomizing the program's behavior and making it harder to analyze.</p> <ul> <li>Methods Used in Tigress:</li> <li>Instruction Dispatch Types:<ul> <li>Switch, direct, indirect, call, if-else, linear, binary, interpolation.</li> </ul> </li> <li>Operand Types:<ul> <li>Stack, registers.</li> </ul> </li> <li>Randomized Operators:<ul> <li>Complex combinations of operands and operators to obfuscate the code.</li> </ul> </li> <li>Various Transformations:<ul> <li>Code Flattening: Flattening the control flow of the program.</li> <li>Merge/Split Functions: Merging or splitting functions.</li> <li>Opaque Predicates: Adding hidden and unchangeable conditional statements in the code.</li> </ul> </li> </ul> <p>Example: </p> <pre><code>tigress --Transform=Virtualize --Functions=fib --VirtualizeDispatch=switch --out=v1.c test1.c\ngcc -o v1 v1.c\n</code></pre> <p>This transforms the \"fib\" function into a switch-based virtual machine.</p> <ol> <li>Implementing Diversification in Code    Theoretical Explanation: Diversification involves randomizing code in different ways to make it harder to analyze. This method makes it difficult for an attacker to reverse-engineer the program. With Tigress, a program can create a unique virtual machine every time it runs.</li> </ol> <p>Techniques for Implementing Code Diversification: Flattening: Mixing the control flow of the program by placing everything in a loop. Function Merging: Combining multiple functions into one. Random Numbers for Diversification: Using random numbers to obfuscate functions and operands. Instruction Dispatch Types: Switch-based Dispatching: Using a switch-case to dispatch virtual machine instructions. Indirect Dispatching: Redirecting branching points indirectly. Example:</p> <pre><code>tigress --Transform=Virtualize --Functions=fib --VirtualizeDispatch=indirect --out=v2.c test1.c\ngcc -o v2 v2.c\n</code></pre>","tags":["cen429-week-13","tigress","diversification-techniques","security"]},{"location":"week-13/cen429-week-13/#3-attacks-and-countermeasures","title":"3. Attacks and Countermeasures","text":"<p>Theoretical Explanation: An attacker may try to reverse-engineer the virtual instruction set of the program to understand how it operates. There are various attack methods developed for this, but Tigress provides countermeasures against these attacks.</p> <ul> <li> <p>Attack Types:</p> </li> <li> <p>Attack 1: Reverse-engineering instructions by interpreting the program.</p> </li> <li> <p>Attack 2: Using dynamic attacks, executing the program and observing the virtual program counter (PC) to decipher instructions.</p> </li> <li> <p>Countermeasures:</p> </li> <li> <p>Using Complex Semantic Instructions: Making instruction contents more complex to complicate reverse-engineering.</p> </li> <li>Using Multiple Program Counters: Creating multiple PCs in the program, making it harder for attackers to figure out which PC to monitor.</li> </ul> <p>Example:</p> <ol> <li>Attack Scenario: Reverse-engineering the instruction set of a virtual machine.</li> <li>Countermeasure: Implementing multiple virtual machine program counters to complicate reverse-engineering.</li> </ol>","tags":["cen429-week-13","tigress","diversification-techniques","security"]},{"location":"week-13/cen429-week-13/#4-algorithmic-methods-and-implementing-diversification","title":"4. Algorithmic Methods and Implementing Diversification","text":"<p>Theoretical Explanation: Diversification algorithms can be applied at various levels to complicate the program's execution. These methods are used to reduce the likelihood of an attacker successfully reverse-engineering the program.</p> <ul> <li> <p>Algorithmic Methods:</p> </li> <li> <p>Build-and-Execute: Building and executing parts of the code during runtime.</p> </li> <li>Self-Modifying Code: Algorithms that modify code during runtime.</li> <li>Encryption: Encrypting parts of the code and decrypting them at runtime.</li> <li> <p>Moving Code Around: Shuffling the code to different locations each time it runs.</p> </li> <li> <p>Granularity Levels:</p> </li> <li> <p>File Level: Encrypting or moving the entire file.</p> </li> <li>Function Level: Dynamically changing specific functions.</li> <li>Basic Block Level: Shuffling the basic blocks of the program.</li> </ul> <p>Example:</p> <pre><code>void makeCodeWritable(caddr_t first, caddr_t last) {\n  // Modify code before execution.\n}\n</code></pre>","tags":["cen429-week-13","tigress","diversification-techniques","security"]},{"location":"week-13/cen429-week-13/#5-self-modifying-code","title":"5. Self-Modifying Code","text":"<p>Theoretical Explanation: Self-modifying code allows a program to modify itself during execution. This method is used to make it harder for attackers to analyze the code.</p> <ul> <li>Kanzaki Algorithm: Replaces real instructions with fake ones and swaps them back before execution.</li> <li>Madou Algorithm: Dynamically merges functions and ensures the code changes continuously.</li> </ul> <p>Example:</p> <pre><code>gcc -o v5 v5.c\n</code></pre>","tags":["cen429-week-13","tigress","diversification-techniques","security"]},{"location":"week-13/cen429-week-13/#conclusion","title":"Conclusion","text":"<p>This week, we learned about advanced code obfuscation techniques like diversification and self-modifying code. These techniques make programs more resistant to attacks and harder for attackers to reverse-engineer. Tools like Tigress randomize code, creating a different structure every time, making code analysis and reverse-engineering much more difficult.</p> \\[ End-Of-Week-13 \\]","tags":["cen429-week-13","tigress","diversification-techniques","security"]},{"location":"week-14-quiz/cen429-week-14/","title":"CEN429 Secure Programming Week-14","text":"","tags":["cen429-week-14","quiz"]},{"location":"week-14-quiz/cen429-week-14/#cen429-secure-programming","title":"CEN429 Secure Programming","text":"","tags":["cen429-week-14","quiz"]},{"location":"week-14-quiz/cen429-week-14/#week-14","title":"Week-14","text":"","tags":["cen429-week-14","quiz"]},{"location":"week-14-quiz/cen429-week-14/#quiz-2","title":"Quiz 2","text":"<p>Download</p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-week-14","quiz"]},{"location":"week-14-quiz/cen429-week-14/#content","title":"Content","text":"<ul> <li>Quiz 2</li> </ul>","tags":["cen429-week-14","quiz"]},{"location":"week-15-project/cen429-week-15/","title":"CEN429 Secure Programming Week-15","text":"","tags":["cen429-week-15","project-presentation","project-review","final-report"]},{"location":"week-15-project/cen429-week-15/#cen429-secure-programming","title":"CEN429 Secure Programming","text":"","tags":["cen429-week-15","project-presentation","project-review","final-report"]},{"location":"week-15-project/cen429-week-15/#week-15","title":"Week-15","text":"","tags":["cen429-week-15","project-presentation","project-review","final-report"]},{"location":"week-15-project/cen429-week-15/#project-review-and-presentation","title":"Project Review and Presentation","text":"<p>Download</p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-week-15","project-presentation","project-review","final-report"]},{"location":"week-15-project/cen429-week-15/#content","title":"Content","text":"<ul> <li>Project Review and Presentation</li> </ul>","tags":["cen429-week-15","project-presentation","project-review","final-report"]},{"location":"week-2/cen429-week-2/","title":"CEN429 Secure Programming Week-2","text":"","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#cen429-secure-programming","title":"CEN429 Secure Programming","text":"","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#week-2","title":"Week-2","text":"","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#development-environment-security-and-software-development-processes","title":"Development Environment Security and Software Development Processes","text":"<p>Download </p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#outline","title":"Outline","text":"<ul> <li> <p>Development Environment Security and Software Development Processes</p> </li> <li> <p>Software Development Process</p> </li> <li> <p>Software Development Flow</p> </li> <li> <p>Configuration Baseline</p> </li> <li> <p>Initiating and Classifying Changes</p> </li> <li> <p>Approving and Releasing Changes</p> </li> <li> <p>Software Development Environments</p> </li> <li> <p>Development Environment Security</p> </li> <li> <p>Version Control Systems</p> </li> <li> <p>Source Code Server Security</p> </li> <li> <p>Server Room and Development Computer Security</p> </li> </ul>","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#software-development-flow-and-change-management","title":"Software Development Flow and Change Management","text":"","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#1-software-development-flow","title":"1. Software Development Flow","text":"","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#theoretical-explanation","title":"Theoretical Explanation:","text":"<p>Software development processes must be controlled through specific flows. Managing changes effectively ensures the success of the project. This flow typically involves version control systems, technical teams, and project management processes.</p>","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#application","title":"Application:","text":"<ul> <li>Application: Start a simple software project and create a process showing how to manage change requests (RFC). Set up an approval mechanism at every step and manage the project through a version control system.</li> </ul>","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#2-configuration-baseline","title":"2. Configuration Baseline","text":"","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#theoretical-explanation_1","title":"Theoretical Explanation:","text":"<p>Configuration baseline involves defining a specific version of a product or system, ensuring that all changes from this version onward can be tracked. This is a critical step in the development and change management processes.</p>","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#application_1","title":"Application:","text":"<ul> <li>Application: Create a GIT repository and set up the initial configuration baseline. Establish a structure where all subsequent changes are traceable.</li> </ul>","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#3-initiating-a-change","title":"3. Initiating a Change","text":"","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#theoretical-explanation_2","title":"Theoretical Explanation:","text":"<p>Change requests (RFC) are made for adding new features or fixing bugs in the project. This process involves defining all requirements and conducting technical meetings before development begins.</p>","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#application_2","title":"Application:","text":"<ul> <li>Application: Create a change request (RFC) and simulate how this request is communicated to the project team. Show a scenario where decisions are made through meetings and technical reviews.</li> </ul>","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#4-classifying-the-change","title":"4. Classifying the Change","text":"","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#theoretical-explanation_3","title":"Theoretical Explanation:","text":"<p>Change requests are classified based on cost, time, and technical requirements. If there are no financial or technical barriers, the product owner approves the request for development by the technical team.</p>","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#application_3","title":"Application:","text":"<ul> <li>Application: Review a change request and manage the process of how it is classified and approved based on specific conditions.</li> </ul>","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#5-approving-and-scheduling-the-change","title":"5. Approving and Scheduling the Change","text":"","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#theoretical-explanation_4","title":"Theoretical Explanation:","text":"<p>Before starting development, the change request is approved, and a project plan is created. This plan includes sprints and task assignments.</p>","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#application_4","title":"Application:","text":"<ul> <li>Application: Organize a sprint planning meeting and assign tasks according to the change request. Use planning tools (Jira, Trello, etc.) to structure the process.</li> </ul>","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#6-releasing-the-change","title":"6. Releasing the Change","text":"","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#theoretical-explanation_5","title":"Theoretical Explanation:","text":"<p>The developed change is deployed to production after testing is completed. This step ensures that the change is implemented successfully.</p>","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#application_5","title":"Application:","text":"<ul> <li>Application: Pull a developed change from the version control system and deploy it to the production environment. Record the steps and test results during the release process.</li> </ul>","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#7-validating-and-reviewing-the-change","title":"7. Validating and Reviewing the Change","text":"","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#theoretical-explanation_6","title":"Theoretical Explanation:","text":"<p>After the change is released, it is validated to ensure it has been implemented correctly and meets expectations. Technical and user reviews are conducted.</p>","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#application_6","title":"Application:","text":"<ul> <li>Application: Test the released change and gather user feedback. Verify whether the change meets expectations.</li> </ul>","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#software-development-environments-and-source-code-version-control-system","title":"Software Development Environments and Source Code Version Control System","text":"","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#1-development-environments","title":"1. Development Environments","text":"","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#theoretical-explanation_7","title":"Theoretical Explanation:","text":"<p>Software development occurs across different environments: development, testing, and production. Each environment requires different security measures and configurations.</p>","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#application_7","title":"Application:","text":"<ul> <li>Application: Set up development and testing environments. Develop an application that demonstrates different security configurations for each environment.</li> </ul>","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#2-version-control-systems","title":"2. Version Control Systems","text":"","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#theoretical-explanation_8","title":"Theoretical Explanation:","text":"<p>Version control systems (Git, SVN, etc.) are used to track software development processes and revert changes when necessary. Each change is recorded, and developers can switch between versions.</p>","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#application_8","title":"Application:","text":"<ul> <li>Application: Manage a software development process using GIT. Switch between branches and revert a change.</li> </ul>","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#3-development-site-and-source-code-server-security","title":"3. Development Site and Source Code Server Security","text":"","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#theoretical-explanation_9","title":"Theoretical Explanation:","text":"<p>The physical and digital security of the development environment is crucial. Protecting source code servers and monitoring systems ensures the integrity of the software.</p>","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#application_9","title":"Application:","text":"<ul> <li>Application: Demonstrate how to secure a source code server in a development environment. Set up encryption and access control systems.</li> </ul>","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#4-development-office-and-server-room-security","title":"4. Development Office and Server Room Security","text":"","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#theoretical-explanation_10","title":"Theoretical Explanation:","text":"<p>Server rooms and development computers must be protected with security measures to ensure the security of the software. Access controls, encryption, and physical security are part of this process.</p>","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#application_10","title":"Application:","text":"<ul> <li>Application: Simulate access controls for a server room. Configure security software on development computers and take precautions against potential attacks.</li> </ul>","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#summary-of-the-week-and-next-week","title":"Summary of the Week and Next Week","text":"","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#this-week","title":"This Week:","text":"<ul> <li>Software Development Flow and Change Management</li> <li>Configuration Baseline and Change Approval</li> <li>Development Environments and Version Control Systems</li> <li>Physical and Digital Security</li> </ul>","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-2/cen429-week-2/#next-week","title":"Next Week:","text":"<ul> <li>Data Security and Cryptography</li> <li>Secure Communication and Key Management</li> </ul> \\[ End-Of-Week-2 \\]","tags":["cen429-week-2","software-development","change-management","version-control","security","development-environment"]},{"location":"week-3/cen429-week-3/","title":"CEN429 Secure Programming Week-3","text":"","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#cen429-secure-programming","title":"CEN429 Secure Programming","text":"","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#week-3","title":"Week-3","text":"","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#data-security-in-use-in-transit-and-at-rest","title":"Data Security: In Use, In Transit, and At Rest","text":"<p>Download </p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#outline","title":"Outline","text":"<ul> <li>Data Security: In Use, In Transit, and At Rest</li> <li>Software Development Processes</li> <li>Data-In-Use Security</li> <li>Data-In-Transit Security</li> <li>Data-At-Rest Security</li> <li>Protection of Dynamic and Static Assets</li> </ul>","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#week-3-data-security-data-in-use-in-transit-and-at-rest","title":"Week-3: Data Security - Data In Use, In Transit, and At Rest","text":"","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#theoretical-topics-and-applications","title":"Theoretical Topics and Applications","text":"","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#data-in-use-security","title":"Data-In-Use Security","text":"","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#1-runtime-application-data-security","title":"1. Runtime Application Data Security","text":"","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#theoretical-explanation","title":"Theoretical Explanation:","text":"<p>Data-In-Use Security refers to the protection of sensitive information held in memory while an application is running. This security measure is critical for preventing sensitive data from being captured by malicious software during processing.</p>","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#applications","title":"Applications:","text":"<ol> <li>Memory Encryption: Encrypting sensitive data in memory.</li> <li>Misuse Detection: Monitoring suspicious behavior in memory and intervening as needed.</li> <li>Data Manipulation Tests: Testing if data is being altered accidentally or maliciously during runtime.</li> <li>Dynamic Memory Management: Preventing memory leaks and minimizing data breaches.</li> <li>Continuous Authentication: Re-authenticating users periodically during a session.</li> <li>Data Masking: Ensuring sensitive data is visible only to authorized processes.</li> <li>Tamperproof Mechanisms: Detecting if data in memory is being tampered with and triggering responses accordingly.</li> <li>Security Protocol Monitoring: Monitoring the behavior of security protocols during application runtime.</li> <li>Data Firewalls: Adding security layers so that only authorized processes can access sensitive memory.</li> <li>Advanced Logging: Recording all operations performed on the data in memory.</li> </ol>","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#data-in-transit-security","title":"Data-In-Transit Security","text":"","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#1-data-security-methods-during-transportation","title":"1. Data Security Methods During Transportation","text":"","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#theoretical-explanation_1","title":"Theoretical Explanation:","text":"<p>When data is transmitted over a network, its confidentiality and integrity must be protected. Encryption, authentication, and integrity controls are used to ensure secure data transmission.</p>","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#applications_1","title":"Applications:","text":"<ol> <li>Session Key: Dynamically generating a session key between client and server and encrypting communication with it.</li> <li>Device Binding: Ensuring data can only be decrypted by a specific device to prevent unauthorized access on other devices.</li> <li>Version Binding: Allowing only certain versions to communicate, preventing older, insecure versions from receiving data.</li> <li>Confidential Payload: Encrypting the data so only authorized parties can read it.</li> <li>Integrity Control: Verifying that data has not been altered or corrupted during transmission.</li> <li>Authenticity Control: Authenticating the sender and receiver of the data.</li> <li>Secure Communication Channels: Using SSL/TLS protocols for secure data transmission.</li> <li>SSL Certificates: Enhancing security during data transmission by using SSL certificates for server authentication.</li> <li>Data Monitoring: Monitoring data during transmission and detecting anomalies.</li> <li>Encrypted Communication Protocols: Using encrypted protocols such as HTTPS, SSH for data communication.</li> </ol>","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#2-server-communication","title":"2. Server Communication","text":"","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#theoretical-explanation_2","title":"Theoretical Explanation:","text":"<p>Secure communication between server and client ensures that data is safely transmitted to the server. It is essential to authenticate the server and encrypt transmitted data.</p>","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#applications_2","title":"Applications:","text":"<ol> <li>Server Authentication Code: Developing a custom mechanism to authenticate the server.</li> <li>Secure Server Communication: Ensuring that data between server and client is encrypted using SSL/TLS.</li> <li>Session Key Encryption: Encrypting data using session keys.</li> <li>Data Monitoring on Server: Monitoring data traffic to and from the server to detect anomalies.</li> <li>Data Integrity Verification: Ensuring that data is transmitted to the server without corruption using integrity checks.</li> <li>Data Encryption: Encrypting data on the client-side before sending it to the server.</li> <li>Response Signing: Verifying server responses with digital signatures.</li> <li>Server Backup: Regularly backing up critical data on the server and storing it securely.</li> <li>Secure Session Termination: Safely cleaning session keys after the session ends.</li> <li>Authentication Logging: Logging all authentication activities on the server for auditing and monitoring.</li> </ol>","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#data-at-rest-security","title":"Data-At-Rest Security","text":"","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#1-data-security-methods-during-stored-state","title":"1. Data Security Methods During Stored State","text":"","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#theoretical-explanation_3","title":"Theoretical Explanation:","text":"<p>Data stored on hard disks, databases, or cloud environments must be protected. Encryption and integrity controls prevent unauthorized access or attacks on stored data.</p>","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#applications_3","title":"Applications:","text":"<ol> <li>Whitebox AES: Securing data using the whitebox method with the AES algorithm in storage.</li> <li>Whitebox DES: Encrypting data with the Whitebox DES algorithm and performing security tests.</li> <li>Security Shell Matrix: Creating a security shell in the file system to ensure safe storage of data.</li> <li>Key Management: Storing encryption keys securely and rotating them regularly.</li> <li>Encrypted Database: Encrypting sensitive data in the database, allowing access only to authorized users.</li> <li>Data Encryption at Rest: Storing all data in encrypted format to prevent unauthorized access.</li> <li>File Integrity Checks: Verifying if stored files have been altered without authorization.</li> <li>Data Backup: Regularly backing up critical data and storing backups securely.</li> <li>Secure Erasure: Safely deleting data so that it cannot be recovered.</li> <li>Integrity Checks: Using mechanisms to ensure the integrity of stored files and detect unauthorized modifications.</li> </ol>","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#protection-of-static-and-dynamic-assets","title":"Protection of Static and Dynamic Assets","text":"","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#1-protection-of-static-assets","title":"1. Protection of Static Assets","text":"","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#theoretical-explanation_4","title":"Theoretical Explanation:","text":"<p>Static assets consist of data that remains unchanged in databases or on storage devices. Protecting these assets is crucial to maintain data integrity and prevent unauthorized access.</p>","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#applications_4","title":"Applications:","text":"<ol> <li>Key Encryption: Encrypting static keys to ensure their secure storage.</li> <li>Source Code Protection: Developing mechanisms to prevent unauthorized copying or modification of source code.</li> <li>Static File Integrity Checks: Ensuring the integrity of static files and preventing unauthorized modifications.</li> <li>Data Signature: Using digital signatures to verify that stored data has not been altered.</li> <li>Database Integrity: Encrypting and protecting critical data in the database.</li> <li>File Access Control: Implementing access control mechanisms to protect static files from unauthorized access.</li> <li>Secret Key Management: Safely storing and managing static keys.</li> <li>Database Encryption: Ensuring that static data is securely stored in an encrypted format in the database.</li> <li>Signature and Encryption Combination: Combining encryption with digital signatures to enhance security and ensure data integrity.</li> <li>File Firewall: Establishing a firewall to protect static files.</li> </ol>","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#2-protection-of-dynamic-assets","title":"2. Protection of Dynamic Assets","text":"","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#theoretical-explanation_5","title":"Theoretical Explanation:","text":"<p>Dynamic assets are created and modified while the application is running. Protecting these assets ensures the security of sensitive information like session data and dynamic keys.</p>","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#applications_5","title":"Applications:","text":"<ol> <li>Dynamic Key Security: Ensuring dynamic keys are used only during specific sessions and securely rotated.</li> <li>Session Data Encryption: Encrypting session data to ensure its confidentiality.</li> <li>Protection of Device Fingerprints: Ensuring device fingerprints are verified only by authorized parties.</li> <li>Session Data Protection: Securing dynamic session data through encryption.</li> <li>Dynamic Key Management: Safely creating and managing dynamic keys during a session.</li> <li>Session Timeout: Implementing automatic session timeout to enhance security.</li> <li>Continuous Monitoring of Data: Monitoring dynamic data with encryption and detecting security breaches instantly.</li> <li>Prevention of Data Manipulation: Establishing security mechanisms to prevent dynamic data from being manipulated.</li> <li>Dynamic Data Signature: Using digital signatures to verify the integrity of data changed during a session.</li> <li>Real-Time Data Analysis: Implementing security protocols to analyze dynamic data in real time during a session.</li> </ol>","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#property-of-assets","title":"Property of Assets","text":"","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#theoretical-explanation_6","title":"Theoretical Explanation:","text":"<p>The properties of an asset include its name, description, location, source, size, creation, and deletion times. It is also essential to determine how to protect an asset according to security needs like confidentiality, integrity, and authentication.</p>","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#applications_6","title":"Applications:","text":"<ol> <li>Asset Name: Defining the name of the asset and identifying what it represents.</li> <li>Description: Explaining the function and information contained in the asset.</li> <li>Location: Defining the physical location of the asset, such as a database, table, or column.</li> <li>Source: Identifying the process or data source from which the asset originated.</li> <li>Size: Defining the asset's size to optimize storage needs.</li> <li>Creation Time: Logging the date and time when the asset was created.</li> <li>Destruction Time: Determining when and how the asset should be destroyed.</li> <li>Default Value: Defining the default value of the asset and what it should be initially.</li> <li>Confidentiality, Integrity, and Authentication: Defining protection levels for assets according to security needs (C - Confidentiality, I - Integrity, A - Authentication).</li> <li>Asset Protection Schema: Developing a specific protection plan for each asset according to its security needs and determining which measures should be taken.</li> </ol>","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#week-summary-and-next-week","title":"Week Summary and Next Week","text":"","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#this-week","title":"This Week:","text":"<ul> <li>Data Security In Use, In Transit, and At Rest</li> <li>Protection of Static and Dynamic Assets</li> </ul>","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-3/cen429-week-3/#next-week","title":"Next Week:","text":"<ul> <li>Certificates and Encryption Methods</li> <li>Authentication and Data Integrity</li> </ul> \\[ End-Of-Week-3 \\]","tags":["cen429-week-3","data-security","data-in-use-security","data-in-transit-security","data-at-rest-security"]},{"location":"week-4/cen429-week-4/","title":"CEN429 Secure Programming Week-4","text":"","tags":["cen429-week-4","code-hardening","c++","java","obfuscation"]},{"location":"week-4/cen429-week-4/#cen429-secure-programming","title":"CEN429 Secure Programming","text":"","tags":["cen429-week-4","code-hardening","c++","java","obfuscation"]},{"location":"week-4/cen429-week-4/#week-4","title":"Week-4","text":"","tags":["cen429-week-4","code-hardening","c++","java","obfuscation"]},{"location":"week-4/cen429-week-4/#code-hardening-techniques","title":"Code Hardening Techniques","text":"<p>Download </p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-week-4","code-hardening","c++","java","obfuscation"]},{"location":"week-4/cen429-week-4/#outline","title":"Outline","text":"<ul> <li>Code Hardening Techniques</li> <li>Code Hardening for Native C/C++</li> <li>Code Hardening for Java and Interpreted Languages</li> </ul>","tags":["cen429-week-4","code-hardening","c++","java","obfuscation"]},{"location":"week-4/cen429-week-4/#week-4-code-hardening-techniques","title":"Week-4: Code Hardening Techniques","text":"","tags":["cen429-week-4","code-hardening","c++","java","obfuscation"]},{"location":"week-4/cen429-week-4/#1-code-hardening-techniques-for-native-cc","title":"1. Code Hardening Techniques for Native C/C++","text":"<p>In low-level languages like C and C++, various techniques are used to write secure code and make it resistant to attacks. These techniques aim to make code analysis and reverse engineering more difficult.</p>","tags":["cen429-week-4","code-hardening","c++","java","obfuscation"]},{"location":"week-4/cen429-week-4/#a-opaque-loops","title":"a) Opaque Loops","text":"<p>Theoretical Explanation: Opaque loops are loops that, when viewed externally, have no clear purpose. These loops make code analysis more difficult. Attackers struggle to understand the function of the loop, making the code harder to reverse-engineer.</p> <p>Example Applications:</p> <ol> <li>Adding loops created with random conditions to complicate code analysis.</li> <li>Introducing loops that do not affect program functionality but confuse the analysis.</li> <li>Using opaque loops to increase program runtime, misleading attackers.</li> </ol>","tags":["cen429-week-4","code-hardening","c++","java","obfuscation"]},{"location":"week-4/cen429-week-4/#b-hiding-shared-object-symbols","title":"b) Hiding Shared Object Symbols","text":"<p>Theoretical Explanation: Hiding symbols used in shared objects makes external access to these objects difficult. This process is used to prevent analysis and reverse engineering.</p> <p>Example Applications:</p> <ol> <li>Restricting symbol visibility with compiler options.</li> <li>Only exposing necessary symbols and hiding others to improve security.</li> <li>Concealing critical functions in shared libraries to enhance protection.</li> </ol>","tags":["cen429-week-4","code-hardening","c++","java","obfuscation"]},{"location":"week-4/cen429-week-4/#c-obfuscation-of-arithmetic-instructions","title":"c) Obfuscation of Arithmetic Instructions","text":"<p>Theoretical Explanation: Arithmetic operations are fundamental to a program. Making these operations more complex makes the code harder to analyze and understand.</p> <p>Example Applications:</p> <ol> <li>Replacing simple addition operations with more complex mathematical expressions.</li> <li>Adding unnecessary steps to arithmetic operations to maintain functionality while complicating code analysis.</li> <li>Using bit manipulation on arithmetic operations to make them more complex.</li> </ol>","tags":["cen429-week-4","code-hardening","c++","java","obfuscation"]},{"location":"week-4/cen429-week-4/#d-obfuscation-of-function-names","title":"d) Obfuscation of Function Names","text":"<p>Theoretical Explanation: Changing function names to random character strings makes the code harder to understand. This technique is especially useful for preventing reverse engineering.</p> <p>Example Applications:</p> <ol> <li>Changing function names to meaningless strings of characters.</li> <li>Generating different function names for each compilation to confuse static analysis tools.</li> <li>Randomizing critical function names to make them difficult for attackers to identify.</li> </ol>","tags":["cen429-week-4","code-hardening","c++","java","obfuscation"]},{"location":"week-4/cen429-week-4/#e-obfuscation-of-source-file-names","title":"e) Obfuscation of Source File Names","text":"<p>Theoretical Explanation: Obfuscating source file names makes it difficult to understand which function or class the file belongs to.</p> <p>Example Applications:</p> <ol> <li>Changing source file names to random characters.</li> <li>Hiding relationships between source files to obscure code structure.</li> <li>Obfuscating file names without affecting the source code by modifying structures.</li> </ol>","tags":["cen429-week-4","code-hardening","c++","java","obfuscation"]},{"location":"week-4/cen429-week-4/#f-obfuscation-of-static-strings","title":"f) Obfuscation of Static Strings","text":"<p>Theoretical Explanation: Static strings are important information sources for attackers. Encrypting and hiding these strings increases code security.</p> <p>Example Applications:</p> <ol> <li>Encrypting static strings and decrypting them at runtime.</li> <li>Applying random string masks to obscure the meaning of the strings.</li> <li>Reducing static string usage by eliminating string constants.</li> </ol>","tags":["cen429-week-4","code-hardening","c++","java","obfuscation"]},{"location":"week-4/cen429-week-4/#g-other-code-hardening-techniques","title":"g) Other Code Hardening Techniques","text":"<ol> <li>Opaque Boolean Variables: Making conditional statements more complex.</li> <li>Function Boolean Return Codes: Making function return values more complex.</li> <li>Obfuscation of Function Parameters: Hiding function parameters.</li> <li>Bogus Function Parameters &amp; Operations: Adding meaningless parameters and operations to complicate analysis.</li> <li>Control Flow Flattening: Flattening control flow to make it unpredictable.</li> <li>Randomized Exit Points: Randomizing exit points to reduce code predictability.</li> <li>Logging Disabled on Release: Disabling logging in the final release version.</li> </ol>","tags":["cen429-week-4","code-hardening","c++","java","obfuscation"]},{"location":"week-4/cen429-week-4/#2-code-hardening-techniques-for-java-and-interpreted-languages","title":"2. Code Hardening Techniques for Java and Interpreted Languages","text":"<p>In Java and other interpreted languages, code hardening techniques are used to reduce security vulnerabilities and complicate reverse engineering efforts.</p>","tags":["cen429-week-4","code-hardening","c++","java","obfuscation"]},{"location":"week-4/cen429-week-4/#a-code-obfuscation-and-shrink-protection-with-proguard","title":"a) Code Obfuscation and Shrink Protection with Proguard","text":"<p>Theoretical Explanation: Proguard shrinks, optimizes, and obfuscates Java code, making it harder to analyze.</p> <p>Example Applications:</p> <ol> <li>Using a Proguard configuration file to shrink and optimize the code.</li> <li>Testing obfuscated code and resolving errors.</li> <li>Analyzing Proguard reports to identify which elements have been obfuscated.</li> </ol>","tags":["cen429-week-4","code-hardening","c++","java","obfuscation"]},{"location":"week-4/cen429-week-4/#b-separated-fingerprint-storage-for-device-binding","title":"b) Separated Fingerprint Storage for Device Binding","text":"<p>Theoretical Explanation: This technique uses a device's unique properties to ensure that the application only runs on specific devices.</p> <p>Example Applications:</p> <ol> <li>Encrypting the device fingerprint and storing it securely.</li> <li>Using fingerprint verification to ensure the application runs on the designated device.</li> <li>Protecting fingerprint data from attacks.</li> </ol>","tags":["cen429-week-4","code-hardening","c++","java","obfuscation"]},{"location":"week-4/cen429-week-4/#c-native-library-jni-api-obfuscation","title":"c) Native Library JNI API Obfuscation","text":"<p>Theoretical Explanation: Obfuscating native libraries called through the Java Native Interface (JNI) makes reverse engineering more difficult.</p> <p>Example Applications:</p> <ol> <li>Randomizing JNI function names.</li> <li>Hiding JNI parameters to complicate understanding.</li> <li>Using error management in JNI to prevent attackers from analyzing errors.</li> </ol>","tags":["cen429-week-4","code-hardening","c++","java","obfuscation"]},{"location":"week-4/cen429-week-4/#d-obfuscation-of-static-strings","title":"d) Obfuscation of Static Strings","text":"<p>Theoretical Explanation: Static strings contain important information that attackers can use during reverse engineering. Obfuscating these strings increases security.</p> <p>Example Applications:</p> <ol> <li>Encrypting static strings and decrypting them at runtime.</li> <li>Obfuscating strings to obscure their meaning.</li> <li>Using random string generation and manipulation techniques to enhance security.</li> </ol>","tags":["cen429-week-4","code-hardening","c++","java","obfuscation"]},{"location":"week-4/cen429-week-4/#summary-of-the-week-and-next-week","title":"Summary of the Week and Next Week","text":"","tags":["cen429-week-4","code-hardening","c++","java","obfuscation"]},{"location":"week-4/cen429-week-4/#this-week","title":"This Week:","text":"<ul> <li>Code Hardening Techniques (C/C++ and Java)</li> <li>Obfuscation Techniques and Applications</li> </ul>","tags":["cen429-week-4","code-hardening","c++","java","obfuscation"]},{"location":"week-4/cen429-week-4/#next-week","title":"Next Week:","text":"<ul> <li>Attack Trees and Security Models</li> <li>Attack Methods and Secure Communication</li> </ul> \\[ End-Of-Week-4 \\]","tags":["cen429-week-4","code-hardening","c++","java","obfuscation"]},{"location":"week-5/cen429-week-5/","title":"CEN429 Secure Programming Week-5","text":"","tags":["cen429-week-5","rasp","c++","runtime-application-self-protection"]},{"location":"week-5/cen429-week-5/#cen429-secure-programming","title":"CEN429 Secure Programming","text":"","tags":["cen429-week-5","rasp","c++","runtime-application-self-protection"]},{"location":"week-5/cen429-week-5/#week-5","title":"Week-5","text":"","tags":["cen429-week-5","rasp","c++","runtime-application-self-protection"]},{"location":"week-5/cen429-week-5/#rasp-techniques-for-native-cc","title":"RASP Techniques for Native C/C++","text":"<p>Download </p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-week-5","rasp","c++","runtime-application-self-protection"]},{"location":"week-5/cen429-week-5/#outline","title":"Outline","text":"<ul> <li>What is RASP (Runtime Application Self-Protection)?</li> <li>RASP Techniques for Native C/C++</li> <li>Caller APK Hash Verification</li> <li>Root Detection and LD Preload Protection</li> </ul>","tags":["cen429-week-5","rasp","c++","runtime-application-self-protection"]},{"location":"week-5/cen429-week-5/#week-5-rasp-runtime-application-self-protection-for-native-cc","title":"Week-5: RASP (Runtime Application Self-Protection) for Native C/C++","text":"<p>Runtime Application Self-Protection (RASP) is a security approach that allows applications to protect themselves during runtime. In Native C/C++ applications, various security checks can be applied using RASP. In this session, RASP techniques will be explained in detail, along with practical examples.</p>","tags":["cen429-week-5","rasp","c++","runtime-application-self-protection"]},{"location":"week-5/cen429-week-5/#1-runtime-codeblock-checksum-verification","title":"1. Runtime CodeBlock Checksum Verification","text":"<p>Theoretical Explanation: During runtime, the hash or checksum values of specific code blocks are verified to detect if the code has been tampered with. This method protects against code manipulation and malicious interventions.</p> <p>Practical Examples:</p> <ol> <li>Calculate the checksum of any code block and compare it during execution.</li> <li>Terminate the program or produce incorrect results when tampering is detected.</li> <li>Protect important functions and critical code parts with checksum verification.</li> </ol>","tags":["cen429-week-5","rasp","c++","runtime-application-self-protection"]},{"location":"week-5/cen429-week-5/#2-caller-apk-hash-and-signature-verification","title":"2. Caller APK Hash and Signature Verification","text":"<p>Theoretical Explanation: By verifying the hash and signature of APK files, only trusted and signed APKs are allowed to execute the application. This prevents modified or fake APKs from running the application.</p> <p>Practical Examples:</p> <ol> <li>Verify the hash value of the APK file during runtime.</li> <li>Check the signature information of the APK, allowing only original signed APKs to run.</li> <li>Store hash and signature values for dynamic verification processes.</li> </ol>","tags":["cen429-week-5","rasp","c++","runtime-application-self-protection"]},{"location":"week-5/cen429-week-5/#3-rooted-device-detection","title":"3. Rooted Device Detection","text":"<p>Theoretical Explanation: Devices with root privileges pose security risks. Detecting rooted devices can prevent the application from running on such devices.</p> <p>Root Detection Methods:</p> <ol> <li>/dev/kmem File: Check if this file exists on the system. If present, syscall table may be hooked, indicating the device has root access.</li> <li>/proc/kallsyms File: Verify if sys_call_table and compat_sys_call_table addresses are empty.</li> <li>/default.prop and /system/build.prop Files: If these files are readable, the device may be rooted.</li> <li>Other Root Detection Methods:</li> <li>The presence of Superuser.apk.</li> <li>Connecting to port 27047 to search for a running Frida server.</li> </ol> <p>Practical Examples:</p> <ol> <li>Detect root by checking for the presence of the specified files.</li> <li>Test for tools like Frida and detect them.</li> <li>Prevent the application from running on rooted devices.</li> </ol>","tags":["cen429-week-5","rasp","c++","runtime-application-self-protection"]},{"location":"week-5/cen429-week-5/#4-advanced-ld-preload-attack-detection","title":"4. Advanced LD Preload Attack Detection","text":"<p>Theoretical Explanation: LD_PRELOAD is a method used to manipulate dynamically loaded libraries. This technique is a vector used by malware. Detecting LD_PRELOAD attacks improves the security of the application.</p> <p>Practical Examples:</p> <ol> <li>Check LD_PRELOAD environment variables during runtime.</li> <li>Use specific algorithms to detect LD_PRELOAD attacks.</li> <li>Protect the application when such attacks are detected.</li> </ol>","tags":["cen429-week-5","rasp","c++","runtime-application-self-protection"]},{"location":"week-5/cen429-week-5/#5-gdb-tracers-and-emulator-detection","title":"5. GDB, Tracers, and Emulator Detection","text":"<p>Theoretical Explanation: Detecting debugging tools like GDB, tracers, and emulators prevents attackers from analyzing and modifying the application.</p> <p>Practical Examples:</p> <ol> <li>Detect if the GDB environment is present and prevent the application from running in this environment.</li> <li>Detect and block the usage of tracers such as ltrace or strace.</li> <li>Make the application close or behave differently when running in an emulator environment.</li> </ol>","tags":["cen429-week-5","rasp","c++","runtime-application-self-protection"]},{"location":"week-5/cen429-week-5/#6-debugger-attachment-check","title":"6. Debugger Attachment Check","text":"<p>Theoretical Explanation: By detecting whether the application is attached to a debugger, attackers can be prevented from analyzing the application.</p> <p>Practical Examples:</p> <ol> <li>Add code snippets that detect debugger attachment.</li> <li>Stop the application or make it behave differently when a debugger is detected.</li> <li>Use anti-debugging techniques to enhance the application's security.</li> </ol>","tags":["cen429-week-5","rasp","c++","runtime-application-self-protection"]},{"location":"week-5/cen429-week-5/#7-memory-protection","title":"7. Memory Protection","text":"<p>Theoretical Explanation: Memory protection techniques control memory access. These techniques protect against manipulations in memory. Clang's SafeStack feature makes memory access traceable.</p> <p>Practical Examples:</p> <ol> <li>Activate memory protection mechanisms using SafeStack.</li> <li>Detect any manipulation in memory.</li> <li>Enhance application security with memory protection mechanisms.</li> </ol>","tags":["cen429-week-5","rasp","c++","runtime-application-self-protection"]},{"location":"week-5/cen429-week-5/#8-other-rasp-techniques","title":"8. Other RASP Techniques","text":"<ol> <li>LD Preload Custom Environment Detection: Detect customized LD_PRELOAD environment variables.</li> <li>Tamper Device Detection: Check if the device running the application has been tampered with.</li> <li>Control Flow Counter Checking: Use counters to monitor control flow and detect code manipulation.</li> <li>Device Binding: Ensure the application runs only on a specific device.</li> <li>Version Binding: Ensure the application runs only on a specific version.</li> </ol> \\[ End-Of-Week-5 \\]","tags":["cen429-week-5","rasp","c++","runtime-application-self-protection"]},{"location":"week-6/cen429-week-6/","title":"CEN429 Secure Programming Week-6","text":"","tags":["cen429-week-6","rasp","java","runtime-application-self-protection"]},{"location":"week-6/cen429-week-6/#cen429-secure-programming","title":"CEN429 Secure Programming","text":"","tags":["cen429-week-6","rasp","java","runtime-application-self-protection"]},{"location":"week-6/cen429-week-6/#week-6","title":"Week-6","text":"","tags":["cen429-week-6","rasp","java","runtime-application-self-protection"]},{"location":"week-6/cen429-week-6/#rasp-techniques-for-java","title":"RASP Techniques for Java","text":"<p>Download </p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-week-6","rasp","java","runtime-application-self-protection"]},{"location":"week-6/cen429-week-6/#outline","title":"Outline","text":"<ul> <li>What is RASP (Runtime Application Self-Protection)?</li> <li>RASP Techniques for Java</li> <li>Emulator, Root, and Debug Mode Detection</li> <li>Security Libraries and SSL Pinning</li> </ul>","tags":["cen429-week-6","rasp","java","runtime-application-self-protection"]},{"location":"week-6/cen429-week-6/#week-6-rasp-runtime-application-self-protection-in-java","title":"Week-6: RASP (Runtime Application Self-Protection) in Java","text":"<p>RASP (Runtime Application Self-Protection) for Java applications consists of techniques that ensure security during runtime. This week, we will explore RASP strategies for Java-based applications. Applications, especially mobile ones, must be able to protect themselves from various threats during runtime. The following topics cover techniques used for RASP in Java.</p>","tags":["cen429-week-6","rasp","java","runtime-application-self-protection"]},{"location":"week-6/cen429-week-6/#1-emulator-detection","title":"1. Emulator Detection","text":"<p>Theoretical Explanation: Emulators are tools that attackers can use to analyze an application and discover vulnerabilities. Emulator detection allows an application to determine whether it is running in an emulated environment. Specific detection mechanisms can be applied for popular emulators like Qemu.</p> <p>Source and Application:</p> <ul> <li>Example for detecting Qemu ARM Emulator: Anti Emulator for Qemu ARM</li> <li>Detecting emulator environments and altering application behavior during runtime.</li> </ul>","tags":["cen429-week-6","rasp","java","runtime-application-self-protection"]},{"location":"week-6/cen429-week-6/#2-debug-mode-detection","title":"2. Debug Mode Detection","text":"<p>Theoretical Explanation: Running an application in debug mode provides an opportunity for malicious individuals to analyze the application. Detecting whether the application is in debug mode and preventing it from functioning in this mode enhances security.</p> <p>Application Examples:</p> <ol> <li>Adding code snippets that check whether the application is in debug mode during runtime.</li> <li>Terminating or altering the application\u2019s behavior when it is running in debug mode.</li> </ol>","tags":["cen429-week-6","rasp","java","runtime-application-self-protection"]},{"location":"week-6/cen429-week-6/#3-debugger-attach-detection","title":"3. Debugger Attach Detection","text":"<p>Theoretical Explanation: Attaching a debugger to an application allows it to be monitored and analyzed. Debugger detection checks whether the application has been attached to a debugger during runtime and reacts accordingly.</p> <p>Application Examples:</p> <ol> <li>Ensuring that the application closes or alters its behavior when a debugger is detected.</li> <li>Implementing security mechanisms that detect debugger attachment.</li> </ol>","tags":["cen429-week-6","rasp","java","runtime-application-self-protection"]},{"location":"week-6/cen429-week-6/#4-rootbeer-implementation","title":"4. RootBeer Implementation","text":"<p>Theoretical Explanation: RootBeer is a library that checks whether Android devices are rooted. Rooted devices can pose security risks for applications. Using RootBeer, the detection of rooted devices can be performed.</p> <p>Application Examples:</p> <ol> <li>Detecting whether a device is rooted using RootBeer.</li> <li>Preventing or limiting the application\u2019s functionality on rooted devices.</li> </ol>","tags":["cen429-week-6","rasp","java","runtime-application-self-protection"]},{"location":"week-6/cen429-week-6/#5-root-detection-with-androidsecuritymanager","title":"5. Root Detection with AndroidSecurityManager","text":"<p>Theoretical Explanation: AndroidSecurityManager is a security manager that provides information about the security status of Android devices. It ensures that rooted devices are detected and prevents the application from running on such devices.</p> <p>Application Examples:</p> <ol> <li>Performing root detection using AndroidSecurityManager.</li> <li>Disabling certain features on rooted devices.</li> </ol>","tags":["cen429-week-6","rasp","java","runtime-application-self-protection"]},{"location":"week-6/cen429-week-6/#6-safetynet-implementation","title":"6. SafetyNet Implementation","text":"<p>Theoretical Explanation: Google SafetyNet is an API used to assess the security status of a device. Applications can check the device's security integrity using SafetyNet and respond when security breaches are detected.</p> <p>Application Examples:</p> <ol> <li>Using the SafetyNet API to verify the device\u2019s security integrity.</li> <li>Altering or terminating the application's behavior when security violations are detected.</li> </ol>","tags":["cen429-week-6","rasp","java","runtime-application-self-protection"]},{"location":"week-6/cen429-week-6/#7-checksum-control-of-used-native-libraries","title":"7. Checksum Control of Used Native Libraries","text":"<p>Theoretical Explanation: Verifying the checksum values of native libraries used by an application allows us to determine whether these libraries have been tampered with. This is an important way to maintain the security of the application.</p> <p>Application Examples:</p> <ol> <li>Checking the checksum values of the libraries used during runtime.</li> <li>Terminating or altering the application\u2019s behavior if a library modification is detected.</li> </ol>","tags":["cen429-week-6","rasp","java","runtime-application-self-protection"]},{"location":"week-6/cen429-week-6/#8-tamper-device-detection","title":"8. Tamper Device Detection","text":"<p>Theoretical Explanation: Detecting whether the device or application has been tampered with helps protect the application against security breaches. Tamper detection identifies any modifications made to the device or application.</p> <p>Application Examples:</p> <ol> <li>Detecting whether the device or application has been tampered with.</li> <li>Halting or limiting the application\u2019s functionality when tampering is detected.</li> </ol>","tags":["cen429-week-6","rasp","java","runtime-application-self-protection"]},{"location":"week-6/cen429-week-6/#9-ssl-pinning-and-webview-ssl-pinning","title":"9. SSL Pinning and WebView SSL Pinning","text":"<p>Theoretical Explanation: SSL Pinning ensures that the application securely connects to a specific server. Implementing SSL pinning on WebView prevents users from connecting to fake servers.</p> <p>Application Examples:</p> <ol> <li>Implementing SSL pinning in WebView to verify the server\u2019s identity.</li> <li>Terminating the connection if an incorrect server is detected.</li> </ol>","tags":["cen429-week-6","rasp","java","runtime-application-self-protection"]},{"location":"week-6/cen429-week-6/#10-server-certificate-check","title":"10. Server Certificate Check","text":"<p>Theoretical Explanation: Checking the validity of the server certificate when the application connects to a server prevents connections to fake servers. This is crucial for protecting against man-in-the-middle attacks.</p> <p>Application Examples:</p> <ol> <li>Verifying the server certificate during runtime.</li> <li>Terminating the connection when an invalid certificate is detected.</li> </ol>","tags":["cen429-week-6","rasp","java","runtime-application-self-protection"]},{"location":"week-6/cen429-week-6/#11-device-and-version-binding","title":"11. Device and Version Binding","text":"<p>Theoretical Explanation: Device binding ensures that the application runs on a specific device and prevents it from running on other devices. Version binding ensures that the application is running on a specific version.</p> <p>Application Examples:</p> <ol> <li>Implementing device binding to ensure the application only runs on a designated device.</li> <li>Implementing version binding to ensure the application runs only on specific versions.</li> </ol>","tags":["cen429-week-6","rasp","java","runtime-application-self-protection"]},{"location":"week-6/cen429-week-6/#12-consumer-verification","title":"12. Consumer Verification","text":"<p>Theoretical Explanation: Verifying that the application is being used by a legitimate user helps prevent fake users and automated processes. This verification process ensures the identity of the consumer.</p> <p>Application Examples:</p> <ol> <li>Using security tests and algorithms for consumer verification.</li> <li>Applying access restrictions for unverified users.</li> </ol> \\[ End-of-Week-6 \\]","tags":["cen429-week-6","rasp","java","runtime-application-self-protection"]},{"location":"week-7/cen429-week-7/","title":"CEN429 Secure Programming Week-7","text":"","tags":["cen429-week-7","code-obfuscation","diversification","obfuscation"]},{"location":"week-7/cen429-week-7/#cen429-secure-programming","title":"CEN429 Secure Programming","text":"","tags":["cen429-week-7","code-obfuscation","diversification","obfuscation"]},{"location":"week-7/cen429-week-7/#week-7","title":"Week-7","text":"","tags":["cen429-week-7","code-obfuscation","diversification","obfuscation"]},{"location":"week-7/cen429-week-7/#code-obfuscation-and-diversification-techniques","title":"Code Obfuscation and Diversification Techniques","text":"<p>Download </p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-week-7","code-obfuscation","diversification","obfuscation"]},{"location":"week-7/cen429-week-7/#outline","title":"Outline","text":"<ul> <li>Code Obfuscation and Diversification Techniques</li> <li>Static and Dynamic Code Obfuscation</li> <li>Virtualization and Encryption</li> </ul>","tags":["cen429-week-7","code-obfuscation","diversification","obfuscation"]},{"location":"week-7/cen429-week-7/#week-7-code-obfuscation-and-diversification","title":"Week-7: Code Obfuscation and Diversification","text":"<p>Code obfuscation and diversification techniques involve making the source code and functions of a program more complex to enhance security. This week, we will explore these techniques and their applications. These methods are crucial for protecting software from reverse engineering and complicating attacks.</p>","tags":["cen429-week-7","code-obfuscation","diversification","obfuscation"]},{"location":"week-7/cen429-week-7/#1-what-is-tigress","title":"1. What is Tigress?","text":"<p>Theoretical Explanation: Tigress is a tool used to transform, obfuscate, and complicate programs. It provides obfuscation techniques that help protect software from reverse engineering. Tigress offers various methods to make code analysis harder.</p>","tags":["cen429-week-7","code-obfuscation","diversification","obfuscation"]},{"location":"week-7/cen429-week-7/#2-types-of-obfuscation-techniques","title":"2. Types of Obfuscation Techniques","text":"<p>Theoretical Explanation: Code obfuscation makes the code difficult to understand for both humans and tools. The following are basic methods of code obfuscation:</p> <ul> <li>Abstraction Transformations: Removing module structures, classes, functions, etc.</li> <li>Data Transformations: Changing data structures to new representations.</li> <li>Control Transformations: Eliminating control structures like if, while, repeat, etc.</li> <li>Dynamic Transformations: Modifying the program at runtime.</li> </ul>","tags":["cen429-week-7","code-obfuscation","diversification","obfuscation"]},{"location":"week-7/cen429-week-7/#3-static-obfuscation","title":"3. Static Obfuscation","text":"<p>Theoretical Explanation: Static obfuscation refers to obfuscation that remains fixed during the program\u2019s runtime. It alters the structure but does not change dynamically. The following techniques fall under this category:</p> <ul> <li>Bogus Control Flow: Introduces fake control structures, dead branches, and unnecessary branches to complicate the control flow.</li> <li>Control Flow Flattening: Breaks down control structures, flattening the code.</li> </ul> <p>Application Examples:</p> <ol> <li>Adding unnecessary branches and dead code to complicate control flow.</li> <li>Injecting fake operations into functions.</li> </ol>","tags":["cen429-week-7","code-obfuscation","diversification","obfuscation"]},{"location":"week-7/cen429-week-7/#4-opaque-predicates-and-breaking-them","title":"4. Opaque Predicates and Breaking Them","text":"<p>Theoretical Explanation: Opaque Predicates are condition expressions that always evaluate to a fixed value but appear to change from an outsider\u2019s perspective. Creating complex mathematical or logical relations for these conditions makes code analysis difficult.</p> <p>Application Examples:</p> <ol> <li>Using Opaque Predicates to create fixed conditions.</li> <li>Breaking opaque predicates by using mathematical analysis to resolve these structures.</li> </ol>","tags":["cen429-week-7","code-obfuscation","diversification","obfuscation"]},{"location":"week-7/cen429-week-7/#5-encoding-integer-arithmetic","title":"5. Encoding Integer Arithmetic","text":"<p>Theoretical Explanation: Using complex mathematical transformations to hide original operations on numbers. For example, transforming simple addition into complex mathematical expressions makes reverse engineering more difficult.</p> <p>Application Examples:</p> <ol> <li>Hiding simple arithmetic operations like x + y by replacing them with more complex mathematical expressions.</li> <li>Working with transformed numerical operations to reverse the original arithmetic structure.</li> </ol>","tags":["cen429-week-7","code-obfuscation","diversification","obfuscation"]},{"location":"week-7/cen429-week-7/#6-linear-transformation-and-number-theoretic-tricks","title":"6. Linear Transformation and Number-Theoretic Tricks","text":"<p>Theoretical Explanation: Linear transformations hide original data through complex mathematical operations. Although these transformations can be reversed, analyzing them is difficult.</p> <p>Application Examples:</p> <ol> <li>Using large modular arithmetic, like Mod 2^32, to apply linear transformations and hide numerical operations.</li> <li>Reversing transformations using mathematical methods like Euclid\u2019s Extended Algorithm.</li> </ol>","tags":["cen429-week-7","code-obfuscation","diversification","obfuscation"]},{"location":"week-7/cen429-week-7/#7-virtualization","title":"7. Virtualization","text":"<p>Theoretical Explanation: Virtualization involves executing code not directly on the CPU but within a virtual machine (interpreter). This method constantly converts the program at runtime, making reverse engineering much harder.</p> <p>Application Examples:</p> <ol> <li>Running all program commands through an interpreter to hide the original code.</li> <li>Using interpreter-based virtualization to keep the code in a constantly changing state.</li> </ol>","tags":["cen429-week-7","code-obfuscation","diversification","obfuscation"]},{"location":"week-7/cen429-week-7/#8-diversity","title":"8. Diversity","text":"<p>Theoretical Explanation: Diversity involves creating different versions of the same program so that the code doesn\u2019t remain fixed. This makes it harder for viruses or malicious software to analyze the code.</p> <p>Application Examples:</p> <ol> <li>Generating different versions of code structures that perform the same function.</li> <li>Making small structural changes in each version of the code to complicate analysis.</li> </ol>","tags":["cen429-week-7","code-obfuscation","diversification","obfuscation"]},{"location":"week-7/cen429-week-7/#9-encoding-and-transforming","title":"9. Encoding and Transforming","text":"<p>Theoretical Explanation: Certain parts of the code can be hidden using special encryption algorithms. This is another obfuscation technique that makes analyzing the code harder. Encoding and transformations can be applied especially to numbers.</p> <p>Application Examples:</p> <ol> <li>Encrypting the numbers used in the code to complicate their analysis.</li> <li>Analyzing the encrypted numbers to reverse them back to their original values.</li> </ol>","tags":["cen429-week-7","code-obfuscation","diversification","obfuscation"]},{"location":"week-7/cen429-week-7/#10-opaque-expressions-and-dynamic-obfuscation","title":"10. Opaque Expressions and Dynamic Obfuscation","text":"<p>Theoretical Explanation: Opaque expressions involve evaluating certain parts of the code under complex conditions. Dynamic obfuscation includes continuously transforming the code at runtime, keeping it in a constantly changing state.</p> <p>Application Examples:</p> <ol> <li>Applying continuous transformations during execution to make the code harder to analyze.</li> <li>Restructuring the code dynamically during execution to prevent it from remaining fixed.</li> </ol> \\[ End of Week-7 \\]","tags":["cen429-week-7","code-obfuscation","diversification","obfuscation"]},{"location":"week-8-quiz-report/cen429-week-8/","title":"CEN429 Secure Programming Week-8","text":"","tags":["cen429-week-8","quiz","midterm-report"]},{"location":"week-8-quiz-report/cen429-week-8/#cen429-secure-programming","title":"CEN429 Secure Programming","text":"","tags":["cen429-week-8","quiz","midterm-report"]},{"location":"week-8-quiz-report/cen429-week-8/#week-8","title":"Week-8","text":"","tags":["cen429-week-8","quiz","midterm-report"]},{"location":"week-8-quiz-report/cen429-week-8/#quiz-1-midterm-project-report-submission","title":"Quiz 1 &amp; Midterm Project Report Submission","text":"<p>\u0130ndir </p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-week-8","quiz","midterm-report"]},{"location":"week-8-quiz-report/cen429-week-8/#content","title":"Content","text":"<ul> <li>Quiz 1</li> <li>Midterm Project Report Submission Guidelines</li> <li>Important Deadlines</li> </ul>","tags":["cen429-week-8","quiz","midterm-report"]},{"location":"week-9/cen429-week-9/","title":"CEN429 Secure Programming Week-9","text":"","tags":["cen429-week-9","certificates","encryption","symmetric-encryption","asymmetric-encryption"]},{"location":"week-9/cen429-week-9/#cen429-secure-programming","title":"CEN429 Secure Programming","text":"","tags":["cen429-week-9","certificates","encryption","symmetric-encryption","asymmetric-encryption"]},{"location":"week-9/cen429-week-9/#week-9","title":"Week-9","text":"","tags":["cen429-week-9","certificates","encryption","symmetric-encryption","asymmetric-encryption"]},{"location":"week-9/cen429-week-9/#certificates-and-encryption-methods","title":"Certificates and Encryption Methods","text":"<p>Download </p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-week-9","certificates","encryption","symmetric-encryption","asymmetric-encryption"]},{"location":"week-9/cen429-week-9/#outline","title":"Outline","text":"<ul> <li>Certificates and Encryption Methods</li> <li>Symmetric and Asymmetric Encryption</li> <li>Digital Signatures and Certificate Management</li> </ul>","tags":["cen429-week-9","certificates","encryption","symmetric-encryption","asymmetric-encryption"]},{"location":"week-9/cen429-week-9/#week-9-certificates-and-encryption-methods","title":"Week-9: Certificates and Encryption Methods","text":"<p>This week, we will examine the fundamental principles of encryption methods and certificates used in software security and communication. We will explore both symmetric and asymmetric encryption algorithms, how digital certificates work, and how they contribute to application security.</p>","tags":["cen429-week-9","certificates","encryption","symmetric-encryption","asymmetric-encryption"]},{"location":"week-9/cen429-week-9/#1-basics-of-encryption-methods","title":"1. Basics of Encryption Methods","text":"<p>Theoretical Explanation: Encryption is a technique used to protect data confidentiality and prevent unauthorized access. Encryption methods are divided into two main categories: symmetric and asymmetric.</p> <ul> <li>Symmetric Encryption: The same key is used for both encryption and decryption. Example algorithms: AES, DES.</li> <li>Asymmetric Encryption: Two different keys are used. One key is for encryption, the other for decryption. Example algorithms: RSA, ECC.</li> </ul>","tags":["cen429-week-9","certificates","encryption","symmetric-encryption","asymmetric-encryption"]},{"location":"week-9/cen429-week-9/#2-symmetric-encryption-methods","title":"2. Symmetric Encryption Methods","text":"<p>Theoretical Explanation: Symmetric encryption is advantageous in terms of speed and efficiency compared to asymmetric encryption, but it has the key-sharing problem.</p> <ul> <li>AES (Advanced Encryption Standard): A widely used and highly secure block encryption algorithm. It works with key lengths of 128, 192, or 256 bits.</li> <li>DES (Data Encryption Standard): An older algorithm that is no longer recommended due to security vulnerabilities.</li> <li>Block Encryption and Modes: Block encryption encrypts data in fixed-length blocks. Example modes: ECB (Electronic Codebook), CBC (Cipher Block Chaining).</li> </ul> <p>Application Examples:</p> <ol> <li>Encrypting and decrypting text using AES.</li> <li>Encrypting and decrypting a file using CBC mode.</li> </ol>","tags":["cen429-week-9","certificates","encryption","symmetric-encryption","asymmetric-encryption"]},{"location":"week-9/cen429-week-9/#3-asymmetric-encryption-methods","title":"3. Asymmetric Encryption Methods","text":"<p>Theoretical Explanation: Asymmetric encryption involves two keys: a public key and a private key. Data is encrypted with the public key and can only be decrypted with the private key.</p> <ul> <li>RSA (Rivest-Shamir-Adleman): A widely used asymmetric encryption algorithm. It is based on large prime numbers and is used for both encryption and digital signatures.</li> <li>ECC (Elliptic Curve Cryptography): A more secure asymmetric encryption algorithm compared to RSA, with smaller key sizes.</li> </ul> <p>Application Examples:</p> <ol> <li>Encrypting and decrypting text using RSA.</li> <li>Creating and verifying a digital signature using ECC.</li> </ol>","tags":["cen429-week-9","certificates","encryption","symmetric-encryption","asymmetric-encryption"]},{"location":"week-9/cen429-week-9/#4-hybrid-encryption","title":"4. Hybrid Encryption","text":"<p>Theoretical Explanation: Hybrid encryption uses both symmetric and asymmetric encryption. Symmetric keys are securely shared using asymmetric encryption, and then the data is encrypted with the symmetric key.</p> <ul> <li>Application: Used in many secure communication protocols, such as email and HTTPS.</li> </ul> <p>Application Examples:</p> <ol> <li>Encrypting a symmetric key asymmetrically and then securing data with symmetric encryption.</li> <li>Secure data exchange between two devices using hybrid encryption.</li> </ol>","tags":["cen429-week-9","certificates","encryption","symmetric-encryption","asymmetric-encryption"]},{"location":"week-9/cen429-week-9/#5-digital-certificates-and-certificate-authorities-cas","title":"5. Digital Certificates and Certificate Authorities (CAs)","text":"<p>Theoretical Explanation: Digital certificates can be defined as electronic documents that verify the identity of a person or organization. These certificates are typically signed by a Certificate Authority (CA) and securely transmitted to users.</p> <ul> <li>X.509 Certificate: The most commonly used certificate type.</li> <li>Certificate Authority (CA): Trusted authorities that digitally sign certificates.</li> <li>Certificate Chain: A structure in which certificates are linked in a verifiable hierarchy. Each certificate is signed by a higher authority.</li> </ul> <p>Application Examples:</p> <ol> <li>Creating and installing an SSL/TLS certificate for a web server.</li> <li>Verifying X.509 certificates and inspecting the security chain.</li> </ol>","tags":["cen429-week-9","certificates","encryption","symmetric-encryption","asymmetric-encryption"]},{"location":"week-9/cen429-week-9/#6-digital-signatures","title":"6. Digital Signatures","text":"<p>Theoretical Explanation: Digital signatures are used to verify the identity of data and check whether it has been altered. The signature is created by calculating a hash of a message and encrypting the hash with a private key.</p> <ul> <li>Verification of the Signature: The signature can be verified using the public key.</li> <li>Applications: Email, software distribution, digital contracts.</li> </ul> <p>Application Examples:</p> <ol> <li>Creating and verifying a digital signature for a file.</li> <li>Signing and verifying a message using PGP/GPG.</li> </ol>","tags":["cen429-week-9","certificates","encryption","symmetric-encryption","asymmetric-encryption"]},{"location":"week-9/cen429-week-9/#7-certificate-based-authentication","title":"7. Certificate-Based Authentication","text":"<p>Theoretical Explanation: Certificates are used for authentication, especially in secure communication between servers. Both the client and server validate each other's certificates to establish a secure communication channel.</p> <ul> <li>SSL/TLS: A protocol used for secure communication between web browsers and servers.</li> <li>Mutual Authentication: Both the server and the client authenticate each other using certificates.</li> </ul> <p>Application Examples:</p> <ol> <li>Establishing a secure connection using SSL/TLS.</li> <li>Implementing a certificate-based two-way authentication scenario.</li> </ol>","tags":["cen429-week-9","certificates","encryption","symmetric-encryption","asymmetric-encryption"]},{"location":"week-9/cen429-week-9/#8-pki-public-key-infrastructure","title":"8. PKI (Public Key Infrastructure)","text":"<p>Theoretical Explanation: PKI encompasses the processes involved in the creation, distribution, management, and verification of digital certificates. PKI facilitates the management of key pairs and certificates necessary for secure communication.</p> <ul> <li>Components: CA (Certificate Authority), RA (Registration Authority), CRL (Certificate Revocation List), OCSP (Online Certificate Status Protocol).</li> <li>Applications: SSL/TLS, VPN, email security, code signing.</li> </ul> <p>Application Examples:</p> <ol> <li>Setting up a certificate management infrastructure using PKI.</li> <li>Checking certificate revocations using OCSP and CRL.</li> </ol>","tags":["cen429-week-9","certificates","encryption","symmetric-encryption","asymmetric-encryption"]},{"location":"week-9/cen429-week-9/#9-whitebox-cryptography","title":"9. Whitebox Cryptography","text":"<p>Theoretical Explanation: Whitebox cryptography ensures the secure implementation of encryption algorithms in an open system. With this technique, encryption processes protect sensitive information, such as keys, during operation.</p> <ul> <li>Whitebox AES/DES: Implementing AES and DES encryption algorithms in whitebox environments.</li> <li>Applications: Digital rights management (DRM), mobile application security.</li> </ul> <p>Application Examples:</p> <ol> <li>Encrypting a file using Whitebox AES.</li> <li>Securing sensitive data using whitebox cryptography.</li> </ol>","tags":["cen429-week-9","certificates","encryption","symmetric-encryption","asymmetric-encryption"]},{"location":"week-9/cen429-week-9/#10-certificate-and-key-management","title":"10. Certificate and Key Management","text":"<p>Theoretical Explanation: Proper management of certificates and cryptographic keys is essential for maintaining secure systems. Timely renewal, revocation, and storage of certificates are critical for a secure communication environment.</p> <p>Application Examples:</p> <ol> <li>Automatically renewing certificates and revoking old certificates (using CRL or OCSP).</li> <li>Managing keys securely with Key Management Systems.</li> </ol> \\[ End-Of-Week-9 \\]","tags":["cen429-week-9","certificates","encryption","symmetric-encryption","asymmetric-encryption"]},{"location":"tags/","title":"Tags","text":""},{"location":"tags/#tags","title":"Tags","text":"<p>This file contains a global index of all tags used on the pages.</p>"},{"location":"tags/#application-protection-plan","title":"application-protection-plan","text":"<ul> <li>CEN429 Secure Programming Week-1</li> </ul>"},{"location":"tags/#asymmetric-encryption","title":"asymmetric-encryption","text":"<ul> <li>CEN429 Secure Programming Week-9</li> </ul>"},{"location":"tags/#c","title":"c++","text":"<ul> <li>CEN429 Secure Programming Week-4</li> <li>CEN429 Secure Programming Week-5</li> </ul>"},{"location":"tags/#cen429","title":"cen429","text":"<ul> <li>CEN429 Secure Programming</li> </ul>"},{"location":"tags/#cen429-syllabus","title":"cen429-syllabus","text":"<ul> <li>CEN429 Secure Programming</li> </ul>"},{"location":"tags/#cen429-week-1","title":"cen429-week-1","text":"<ul> <li>CEN429 Secure Programming Week-1</li> </ul>"},{"location":"tags/#cen429-week-10","title":"cen429-week-10","text":"<ul> <li>CEN429 Secure Programming Week-10</li> </ul>"},{"location":"tags/#cen429-week-11","title":"cen429-week-11","text":"<ul> <li>CEN429 Secure Programming Week-11</li> </ul>"},{"location":"tags/#cen429-week-12","title":"cen429-week-12","text":"<ul> <li>CEN429 Secure Programming Week-12</li> </ul>"},{"location":"tags/#cen429-week-13","title":"cen429-week-13","text":"<ul> <li>CEN429 Secure Programming Week-13</li> </ul>"},{"location":"tags/#cen429-week-14","title":"cen429-week-14","text":"<ul> <li>CEN429 Secure Programming Week-14</li> </ul>"},{"location":"tags/#cen429-week-15","title":"cen429-week-15","text":"<ul> <li>CEN429 Secure Programming Week-15</li> </ul>"},{"location":"tags/#cen429-week-2","title":"cen429-week-2","text":"<ul> <li>CEN429 Secure Programming Week-2</li> </ul>"},{"location":"tags/#cen429-week-3","title":"cen429-week-3","text":"<ul> <li>CEN429 Secure Programming Week-3</li> </ul>"},{"location":"tags/#cen429-week-4","title":"cen429-week-4","text":"<ul> <li>CEN429 Secure Programming Week-4</li> </ul>"},{"location":"tags/#cen429-week-5","title":"cen429-week-5","text":"<ul> <li>CEN429 Secure Programming Week-5</li> </ul>"},{"location":"tags/#cen429-week-6","title":"cen429-week-6","text":"<ul> <li>CEN429 Secure Programming Week-6</li> </ul>"},{"location":"tags/#cen429-week-7","title":"cen429-week-7","text":"<ul> <li>CEN429 Secure Programming Week-7</li> </ul>"},{"location":"tags/#cen429-week-8","title":"cen429-week-8","text":"<ul> <li>CEN429 Secure Programming Week-8</li> </ul>"},{"location":"tags/#cen429-week-9","title":"cen429-week-9","text":"<ul> <li>CEN429 Secure Programming Week-9</li> </ul>"},{"location":"tags/#certificates","title":"certificates","text":"<ul> <li>CEN429 Secure Programming Week-9</li> </ul>"},{"location":"tags/#change-management","title":"change-management","text":"<ul> <li>CEN429 Secure Programming Week-2</li> </ul>"},{"location":"tags/#code-hardening","title":"code-hardening","text":"<ul> <li>CEN429 Secure Programming Week-4</li> </ul>"},{"location":"tags/#code-obfuscation","title":"code-obfuscation","text":"<ul> <li>CEN429 Secure Programming Week-7</li> </ul>"},{"location":"tags/#code-splitting","title":"code-splitting","text":"<ul> <li>CEN429 Secure Programming Week-1</li> </ul>"},{"location":"tags/#code-verification","title":"code-verification","text":"<ul> <li>CEN429 Secure Programming Week-1</li> </ul>"},{"location":"tags/#computer-viruses","title":"computer-viruses","text":"<ul> <li>CEN429 Secure Programming Week-1</li> </ul>"},{"location":"tags/#data-at-rest-security","title":"data-at-rest-security","text":"<ul> <li>CEN429 Secure Programming Week-3</li> </ul>"},{"location":"tags/#data-in-transit-security","title":"data-in-transit-security","text":"<ul> <li>CEN429 Secure Programming Week-3</li> </ul>"},{"location":"tags/#data-in-use-security","title":"data-in-use-security","text":"<ul> <li>CEN429 Secure Programming Week-3</li> </ul>"},{"location":"tags/#data-security","title":"data-security","text":"<ul> <li>CEN429 Secure Programming Week-3</li> </ul>"},{"location":"tags/#development-environment","title":"development-environment","text":"<ul> <li>CEN429 Secure Programming Week-2</li> </ul>"},{"location":"tags/#diversification","title":"diversification","text":"<ul> <li>CEN429 Secure Programming Week-7</li> </ul>"},{"location":"tags/#diversification-techniques","title":"diversification-techniques","text":"<ul> <li>CEN429 Secure Programming Week-13</li> </ul>"},{"location":"tags/#encryption","title":"encryption","text":"<ul> <li>CEN429 Secure Programming Week-10</li> <li>CEN429 Secure Programming Week-9</li> </ul>"},{"location":"tags/#fall-2024","title":"fall-2024","text":"<ul> <li>CEN429 Secure Programming</li> </ul>"},{"location":"tags/#final-report","title":"final-report","text":"<ul> <li>CEN429 Secure Programming Week-15</li> </ul>"},{"location":"tags/#java","title":"java","text":"<ul> <li>CEN429 Secure Programming Week-4</li> <li>CEN429 Secure Programming Week-6</li> </ul>"},{"location":"tags/#midterm-report","title":"midterm-report","text":"<ul> <li>CEN429 Secure Programming Week-8</li> </ul>"},{"location":"tags/#obfuscation","title":"obfuscation","text":"<ul> <li>CEN429 Secure Programming Week-4</li> <li>CEN429 Secure Programming Week-7</li> </ul>"},{"location":"tags/#penetration-testing","title":"penetration-testing","text":"<ul> <li>CEN429 Secure Programming Week-11</li> </ul>"},{"location":"tags/#project-presentation","title":"project-presentation","text":"<ul> <li>CEN429 Secure Programming Week-15</li> </ul>"},{"location":"tags/#project-review","title":"project-review","text":"<ul> <li>CEN429 Secure Programming Week-15</li> </ul>"},{"location":"tags/#protocol-monitoring","title":"protocol-monitoring","text":"<ul> <li>CEN429 Secure Programming Week-1</li> </ul>"},{"location":"tags/#quiz","title":"quiz","text":"<ul> <li>CEN429 Secure Programming Week-14</li> <li>CEN429 Secure Programming Week-8</li> </ul>"},{"location":"tags/#rasp","title":"rasp","text":"<ul> <li>CEN429 Secure Programming Week-5</li> <li>CEN429 Secure Programming Week-6</li> </ul>"},{"location":"tags/#runtime-application-self-protection","title":"runtime-application-self-protection","text":"<ul> <li>CEN429 Secure Programming Week-5</li> <li>CEN429 Secure Programming Week-6</li> </ul>"},{"location":"tags/#secure-programming","title":"secure-programming","text":"<ul> <li>CEN429 Secure Programming</li> <li>CEN429 Secure Programming Week-1</li> </ul>"},{"location":"tags/#security","title":"security","text":"<ul> <li>CEN429 Secure Programming Week-10</li> <li>CEN429 Secure Programming Week-11</li> <li>CEN429 Secure Programming Week-12</li> <li>CEN429 Secure Programming Week-13</li> <li>CEN429 Secure Programming Week-2</li> </ul>"},{"location":"tags/#security-certificates","title":"security-certificates","text":"<ul> <li>CEN429 Secure Programming Week-11</li> </ul>"},{"location":"tags/#security-requirements","title":"security-requirements","text":"<ul> <li>CEN429 Secure Programming Week-12</li> </ul>"},{"location":"tags/#software-development","title":"software-development","text":"<ul> <li>CEN429 Secure Programming Week-2</li> </ul>"},{"location":"tags/#standards","title":"standards","text":"<ul> <li>CEN429 Secure Programming Week-12</li> </ul>"},{"location":"tags/#symmetric-encryption","title":"symmetric-encryption","text":"<ul> <li>CEN429 Secure Programming Week-9</li> </ul>"},{"location":"tags/#tigress","title":"tigress","text":"<ul> <li>CEN429 Secure Programming Week-13</li> </ul>"},{"location":"tags/#version-control","title":"version-control","text":"<ul> <li>CEN429 Secure Programming Week-2</li> </ul>"},{"location":"tags/#virus-countermeasures","title":"virus-countermeasures","text":"<ul> <li>CEN429 Secure Programming Week-1</li> </ul>"},{"location":"tags/#whitebox-cryptography","title":"whitebox-cryptography","text":"<ul> <li>CEN429 Secure Programming Week-10</li> </ul>"},{"location":"tr/license/","title":"Lisans","text":""},{"location":"tr/license/#code-license","title":"Code License","text":"<p>MIT Lisans\u0131</p> <p>Telif hakk\u0131 \u00a9 2019-2024 U\u011fur CORUH</p> <p>Bu yaz\u0131l\u0131m\u0131n ve ili\u015fkili dok\u00fcmantasyon dosyalar\u0131n\u0131n (\"Yaz\u0131l\u0131m\") bir kopyas\u0131n\u0131 edinen her ki\u015fiye, a\u015fa\u011f\u0131daki ko\u015fullara tabi olmak kayd\u0131yla, Yaz\u0131l\u0131m\u0131 herhangi bir k\u0131s\u0131tlama olmaks\u0131z\u0131n kullanma, kopyalama, de\u011fi\u015ftirme, birle\u015ftirme, yay\u0131nlama, da\u011f\u0131tma, alt lisanslama ve/veya Yaz\u0131l\u0131m\u0131n kopyalar\u0131n\u0131 satma hakk\u0131 \u00fccretsiz olarak verilmektedir, ayr\u0131ca Yaz\u0131l\u0131m\u0131n sa\u011fland\u0131\u011f\u0131 ki\u015filere de bu haklar\u0131n verilmesine izin verilmektedir:</p> <p>Yukar\u0131daki telif hakk\u0131 bildirimi ve bu izin bildirimi, Yaz\u0131l\u0131m\u0131n t\u00fcm kopyalar\u0131na veya \u00f6nemli k\u0131s\u0131mlar\u0131na dahil edilecektir.</p> <p>YAZILIM, \"OLDU\u011eU G\u0130B\u0130\" SA\u011eLANMAKTADIR, T\u0130CAR\u0130 ELVER\u0130\u015eL\u0130L\u0130K, BEL\u0130RL\u0130 B\u0130R AMACA UYGUNLUK VE \u0130HLAL ETMEME DAH\u0130L ANCAK BUNLARLA SINIRLI OLMAMAK \u00dcZERE A\u00c7IK VEYA ZIMN\u0130 HERHANG\u0130 B\u0130R GARANT\u0130 OLMAKSIZIN SA\u011eLANMAKTADIR. H\u0130\u00c7B\u0130R DURUMDA YAZARLAR VEYA TEL\u0130F HAKKI SAH\u0130PLER\u0130, YAZILIMIN VEYA YAZILIMIN KULLANIMI VEYA BA\u015eKA B\u0130R \u015eEK\u0130LDE \u0130LG\u0130L\u0130 OLAN HERHANG\u0130 B\u0130R TALEP, ZARAR VEYA D\u0130\u011eER Y\u00dcK\u00dcML\u00dcL\u00dcKLERDEN SORUMLU TUTULAMAZ.</p>"},{"location":"tr/license/#content-license","title":"Content License","text":"<p>Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 Uluslararas\u0131 Lisans\u0131 (CC BY-NC-ND 4.0)</p> <p>Serbestsiniz:</p> <ul> <li>Payla\u015fmak: Materyali her ortamda veya formatta kopyalayabilir ve yeniden da\u011f\u0131tabilirsiniz.</li> </ul> <p>A\u015fa\u011f\u0131daki ko\u015fullar alt\u0131nda:</p> <ul> <li>At\u0131f: Uygun at\u0131f yapmal\u0131s\u0131n\u0131z, lisansa bir ba\u011flant\u0131 sa\u011flamal\u0131s\u0131n\u0131z ve de\u011fi\u015fiklik yap\u0131l\u0131p yap\u0131lmad\u0131\u011f\u0131n\u0131 belirtmelisiniz. Bunu makul bir \u015fekilde yapabilirsiniz, ancak lisans verenin sizi veya kullan\u0131m\u0131n\u0131z\u0131 onaylad\u0131\u011f\u0131n\u0131 ima edecek bir \u015fekilde de\u011fil.</li> <li>Ticari Olmayan: Materyali ticari ama\u00e7larla kullanamazs\u0131n\u0131z.</li> <li>T\u00fcrev Yaratamazs\u0131n\u0131z: Materyali yeniden kar\u0131\u015ft\u0131ramaz, d\u00f6n\u00fc\u015ft\u00fcremez veya \u00fczerine in\u015fa edemezsiniz.</li> </ul> <p>Ek k\u0131s\u0131tlama yoktur \u2014 Lisans\u0131n izin verdi\u011fi hi\u00e7bir \u015feyi ba\u015fkalar\u0131n\u0131n yapmas\u0131n\u0131 yasal olarak k\u0131s\u0131tlayan yasal terimler veya teknolojik \u00f6nlemler uygulayamazs\u0131n\u0131z.</p> <p>Daha fazla detay i\u00e7in: Creative Commons CC BY-NC-ND 4.0</p>"},{"location":"tr/changelog/","title":"Revizyonlar","text":""},{"location":"tr/resume/","title":"\u00d6zge\u00e7mi\u015f","text":""},{"location":"tr/resume/#ozgecmis","title":"\u00d6zge\u00e7mi\u015f","text":"<ul> <li>\u00d6zge\u00e7mi\u015fi \u0130ndir</li> </ul>"},{"location":"tr/syllabus/syllabus/","title":"CEN429 G\u00fcvenli Programlama","text":"","tags":["cen429-syllabus","g\u00fcvenli-programlama","fall-2024","cen429"]},{"location":"tr/syllabus/syllabus/#recep-tayyip-erdogan-universitesi","title":"Recep Tayyip Erdo\u011fan \u00dcniversitesi","text":"","tags":["cen429-syllabus","g\u00fcvenli-programlama","fall-2024","cen429"]},{"location":"tr/syllabus/syllabus/#muhendislik-ve-mimarlk-fakultesi-bilgisayar-muhendisligi","title":"M\u00fchendislik ve Mimarl\u0131k Fak\u00fcltesi, Bilgisayar M\u00fchendisli\u011fi","text":"","tags":["cen429-syllabus","g\u00fcvenli-programlama","fall-2024","cen429"]},{"location":"tr/syllabus/syllabus/#cen429-guvenli-programlama-ders-izlencesi","title":"CEN429 - G\u00fcvenli Programlama Ders \u0130zlencesi","text":"","tags":["cen429-syllabus","g\u00fcvenli-programlama","fall-2024","cen429"]},{"location":"tr/syllabus/syllabus/#guz-donemi-2024-2025","title":"G\u00fcz D\u00f6nemi, 2024-2025","text":"<p>Download </p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul> Dersin Sorumlusu: Dr. \u00d6\u011fr. \u00dcyesi U\u011fur CORUH \u0130leti\u015fim Bilgileri: ugur.coruh@erdogan.edu.tr Ofis No: F-301 Google Classroom Code Kullan\u0131lm\u0131yor Microsoft Teams Code zk6388k Lecture Hours and Days Per\u015fembe, 13:00 - 15:00\u00a0\u0130BBF 402, 4. Kat Derslik \u0130BBF 402 4. Kat veya Online Google Meet / Microsoft Teams Ofis Saatleri Toplant\u0131lar Google Meet veya Microsoft Teams \u00fczerinden \u00fcniversite hesab\u0131n\u0131z ve e-posta adresiniz kullan\u0131larak yap\u0131lacakt\u0131r. Talep do\u011frultusunda e-posta ile planlanacakt\u0131r. Daha h\u0131zl\u0131 yan\u0131t almak i\u00e7in e-posta konu ba\u015fl\u0131\u011f\u0131n\u0131n [CEN429] etiketiyle ba\u015flamas\u0131na \u00f6zen g\u00f6sterin ve resmi, net, k\u0131sa e-postalar yaz\u0131n. Lecture and Communication Language English Theory Course Hour Per Week 3 Hours Credit ????? Prerequisite CE103- Algorithms and Programming I Corequisite TBD Requirement TBD <p>*TBD: To Be Defined.</p>","tags":["cen429-syllabus","g\u00fcvenli-programlama","fall-2024","cen429"]},{"location":"tr/syllabus/syllabus/#a-ders-tanm","title":"A. Ders Tan\u0131m\u0131","text":"<p>Bu ders, g\u00fcvenli yaz\u0131l\u0131m geli\u015ftirme tekniklerini anlamaya y\u00f6nelik kapsaml\u0131 bir yakla\u015f\u0131m sunmaktad\u0131r. \u00d6\u011frenciler, tampon ta\u015fmalar\u0131, bellek s\u0131z\u0131nt\u0131lar\u0131 ve enjeksiyon sald\u0131r\u0131lar\u0131 gibi yayg\u0131n g\u00fcvenlik a\u00e7\u0131klar\u0131n\u0131 ele almak i\u00e7in yaz\u0131l\u0131m koruma y\u00f6ntemleri \u00f6\u011freneceklerdir. Ders, g\u00fcvenli yaz\u0131l\u0131m geli\u015ftirmede ger\u00e7ek d\u00fcnya uygulamalar\u0131na ve en iyi uygulamalara odaklanmaktad\u0131r.</p>","tags":["cen429-syllabus","g\u00fcvenli-programlama","fall-2024","cen429"]},{"location":"tr/syllabus/syllabus/#b-dersin-ogrenme-cktlar","title":"B. Dersin \u00d6\u011frenme \u00c7\u0131kt\u0131lar\u0131","text":"<p>Bu dersi ba\u015far\u0131yla tamamlayan bir \u00f6\u011frenci:</p> <ol> <li>Yayg\u0131n yaz\u0131l\u0131m g\u00fcvenlik a\u00e7\u0131klar\u0131n\u0131 tan\u0131mlar.</li> <li>\u015eifreleme y\u00f6ntemlerini uygulayarak hassas verileri g\u00fcvence alt\u0131na al\u0131r.</li> <li>Kod sertle\u015ftirme tekniklerini (RASP ve kod kar\u0131\u015ft\u0131rma gibi) uygular.</li> <li>G\u00fcvenli ileti\u015fim kanallar\u0131n\u0131 \u015fifreleme ve kimlik do\u011frulama mekanizmalar\u0131 ile kurar.</li> <li>G\u00fcvenli yaz\u0131l\u0131m tasar\u0131m\u0131n\u0131, savunma stratejilerini kullanarak planlar.</li> <li>G\u00fcvenlik incelemeleri ve zafiyet de\u011ferlendirmeleri ger\u00e7ekle\u015ftirir.</li> </ol>","tags":["cen429-syllabus","g\u00fcvenli-programlama","fall-2024","cen429"]},{"location":"tr/syllabus/syllabus/#cders-konular","title":"C.Ders Konular\u0131","text":"<ul> <li> <p>G\u00fcvenli Programlamaya Giri\u015f ve Uygulama Koruma Plan\u0131</p> </li> <li> <p>Uygulama koruma genel bak\u0131\u015f</p> </li> <li>Tampon ta\u015fmas\u0131 ve \u00f6nleme teknikleri</li> <li>Bellek y\u00f6netimi ve g\u00fcvenlik</li> <li>Korumal\u0131 kod b\u00f6lme ve \u015fifreleme ile i\u015flem g\u00fcvenli\u011fi</li> </ul> <ul> <li> <p>Bilgisayar Vir\u00fcsleri ve G\u00fcvenlik Modelleri</p> </li> <li> <p>Vir\u00fcs t\u00fcrleri (program, makro, boot sekt\u00f6r\u00fc)</p> </li> <li>Sald\u0131r\u0131 a\u011fa\u00e7lar\u0131 ve g\u00fcvenlik modelleri</li> <li>Vir\u00fcs kar\u015f\u0131 \u00f6nlemleri</li> </ul> <ul> <li> <p>Veri G\u00fcvenli\u011fi: Aktar\u0131mda, Depolamada ve Kullan\u0131mda</p> </li> <li> <p>SSL/TLS kullan\u0131m\u0131</p> </li> <li>Whitebox kriptografi uygulamalar\u0131</li> <li>Dinamik anahtar y\u00f6netimi</li> <li>Veri maskeleme teknikleri</li> </ul> <ul> <li> <p>Kod Sertle\u015ftirme Teknikleri (C/C++)</p> </li> <li> <p>Kontrol ak\u0131\u015f\u0131 d\u00fczle\u015ftirme</p> </li> <li>Fonksiyon ad\u0131 gizleme</li> <li>Bellek tahsisinin gizlenmesi</li> <li>Dinamik \u015fifreleme teknikleri</li> </ul> <ul> <li> <p>Kod Sertle\u015ftirme Teknikleri (Java/Yorumlanan Diller)</p> </li> <li> <p>ProGuard ile kod kar\u0131\u015ft\u0131rma</p> </li> <li>Dinamik metot kar\u0131\u015ft\u0131rma</li> <li>Statik dize kar\u0131\u015ft\u0131rma ve korunmas\u0131</li> <li>Geli\u015fmi\u015f ProGuard kurallar\u0131</li> </ul> <ul> <li> <p>\u00c7al\u0131\u015fma Zaman\u0131 Uygulama Kendini Koruma (RASP) Teknikleri (C/C++)</p> </li> <li> <p>Root tespiti ve APK imzalama kontrol\u00fc</p> </li> <li>Dinamik bellek korumas\u0131</li> <li>Debugger ve bellek izleme tespit etme</li> <li>Dinamik analiz ara\u00e7lar\u0131na kar\u015f\u0131 koruma</li> </ul> <ul> <li> <p>Geli\u015fmi\u015f Kod Kar\u0131\u015ft\u0131rma ve \u00c7e\u015fitlendirme Teknikleri</p> </li> <li> <p>Dinamik kontrol ak\u0131\u015f\u0131 kar\u0131\u015ft\u0131rma</p> </li> <li>Sahte kontrol ak\u0131\u015flar\u0131 ekleme</li> <li>Program kar\u0131\u015ft\u0131rma teknikleri</li> <li>Dinamik fonksiyon \u00e7a\u011fr\u0131lar\u0131 ve \u00e7al\u0131\u015fma zaman\u0131 optimizasyonlar\u0131</li> </ul> <ul> <li> <p>Quiz 1 + Ara Proje Rapor Teslimi</p> </li> <li> <p>\u0130lk 7 hafta konular\u0131n\u0131 kapsayan quiz</p> </li> <li>Ara proje rapor teslimi</li> </ul> <ul> <li> <p>Sertifikalar ve \u015eifreleme Y\u00f6ntemleri (AES, RSA, PKI)</p> </li> <li> <p>AES ve RSA \u015fifreleme</p> </li> <li>HMAC ile veri b\u00fct\u00fcnl\u00fc\u011f\u00fc sa\u011flama</li> <li>Dijital imza ve sertifika olu\u015fturma</li> </ul> <ul> <li> <p>Whitebox Kriptografi</p> </li> <li> <p>Whitebox AES ve DES uygulamalar\u0131</p> </li> <li>Whitebox kriptografi ile anahtar koruma</li> <li>Yaz\u0131l\u0131m tabanl\u0131 g\u00fcvenlik \u00e7\u00f6z\u00fcmleri</li> </ul> <ul> <li> <p>G\u00fcvenlik Sertifikalar\u0131 ve S\u0131zma Testi Planlamas\u0131</p> </li> <li> <p>ETSI ve EMV g\u00fcvenlik standartlar\u0131</p> </li> <li>S\u0131zma testi planlamas\u0131</li> <li>PCI DSS ve ISO 27001 g\u00fcvenlik testleri</li> </ul> <ul> <li> <p>G\u00fcvenlik Gereksinimleri</p> </li> <li> <p>ETSI, GSMA ve EMV G\u00fcvenlik Gereksinimleri</p> </li> <li>EAL Gereksinimleri</li> <li>FIPS Gereksinimleri</li> </ul> <ul> <li> <p>Tigress ve \u00c7e\u015fitlendirme</p> </li> <li> <p>Tigress ve \u00c7e\u015fitlendirme Teknikleri</p> </li> <li> <p>Bulan\u0131kla\u015ft\u0131rma (Obfuscation) Y\u00f6ntemleri</p> </li> <li> <p>Sald\u0131r\u0131lara Kar\u015f\u0131 Savunma</p> </li> </ul> <ul> <li> <p>Quiz 2</p> </li> <li> <p>\u0130kinci quiz, \u00f6nceki haftalardaki konular\u0131 kapsar</p> </li> </ul> <ul> <li> <p>Final Proje Teslimi ve Sunumu</p> </li> <li> <p>Final proje raporu ve sunumu</p> </li> </ul>","tags":["cen429-syllabus","g\u00fcvenli-programlama","fall-2024","cen429"]},{"location":"tr/syllabus/syllabus/#d-ders-kitaplar-ve-gerekli-ekipmanlar","title":"D. Ders Kitaplar\u0131 ve Gerekli Ekipmanlar","text":"<p>Bu ders i\u00e7in zorunlu bir ders kitab\u0131 bulunmamaktad\u0131r. Ancak, a\u015fa\u011f\u0131daki kaynaklar \u00f6nerilmektedir:</p> <ul> <li>C How to Program, 7/E. Deitel &amp; Deitel. 2013, Prentice-Hall.</li> <li>Introduction to Algorithms, Third Edition By Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, and Clifford Stein.</li> <li>Problem Solving and Program Design in C, J.R. Hanly, and E.B. Koffman.</li> </ul> <p>S\u0131n\u0131f i\u00e7i uygulamalar ve s\u0131navlar i\u00e7in ki\u015fisel bir diz\u00fcst\u00fc bilgisayara sahip olman\u0131z gerekmektedir.</p>","tags":["cen429-syllabus","g\u00fcvenli-programlama","fall-2024","cen429"]},{"location":"tr/syllabus/syllabus/#edegerlendirme","title":"E.De\u011ferlendirme","text":"<p>D\u00f6nem boyunca 1 adet Proje ve 2 adet yaz\u0131l\u0131 Quiz olacaks\u0131n\u0131z. Vize zaman\u0131 Proje Ara Raporu Teslim Etmeniz ve Projenizin \u0130lermesini \u0130spatlay\u0131c\u0131 \u015eekilde \u00c7\u0131kt\u0131lar Olu\u015fturman\u0131z ve Projenizin Proje Plan\u0131na Sad\u0131k Kalman\u0131z Gerekiyor. 15. Hafta Projenizin Sonu\u00e7 Raporunu ve Sunumunu Yapacaks\u0131n\u0131z. 8. Hafta 1 Adet Yaz\u0131l\u0131 Quiz Olacaks\u0131n\u0131z ve 14. Hafta da 1 adet Yaz\u0131l\u0131 Quiz Olacaks\u0131n\u0131z. </p> De\u011ferlendirme K\u0131saltma Oran Kapsam Proje Ara Raporu Teslimi RAP1 %60 Vize Quiz-1 QUIZ1 %40 Vize Proje Final Raporu RAP2 %70 Final Quiz-2 QUIZ2 %30 Final \\[ Not_{Vize} = 0.6RAP1 + 0.4QUIZ1 \\] \\[ Not_{Final}=0.7RAP2 + 0.3QUIZ2 \\] \\[ \\text{Ge\u00e7me Notu}=(40*Not{Vize}+60*Not_{Final})/100 \\]","tags":["cen429-syllabus","g\u00fcvenli-programlama","fall-2024","cen429"]},{"location":"tr/syllabus/syllabus/#f-dersin-yurutulmesi","title":"F. Dersin Y\u00fcr\u00fct\u00fclmesi","text":"<p>Dersler y\u00fcz y\u00fcze yap\u0131lacak olup, destekleyici materyaller ve duyurular Google Classroom veya Microsoft Teams \u00fczerinden payla\u015f\u0131lacakt\u0131r. Salg\u0131na ba\u011fl\u0131 bir uzaktan e\u011fitim gereksinimi olu\u015fmas\u0131 durumunda, ders senkron ve asenkron uzaktan e\u011fitim y\u00f6ntemleri ile y\u00fcr\u00fct\u00fclecektir.</p>","tags":["cen429-syllabus","g\u00fcvenli-programlama","fall-2024","cen429"]},{"location":"tr/syllabus/syllabus/#g-gec-teslim","title":"G. Ge\u00e7 Teslim","text":"<p>\u00d6dev ve projelerin belirlenen tarihlerde teslim edilmesi gerekmektedir. Ge\u00e7 teslimler kabul edilmeyecektir. Beklenmedik durumlar en k\u0131sa s\u00fcrede dersin sorumlusuna bildirilmelidir.</p>","tags":["cen429-syllabus","g\u00fcvenli-programlama","fall-2024","cen429"]},{"location":"tr/syllabus/syllabus/#h-iletisim-ve-ders-platformu","title":"H. \u0130leti\u015fim ve Ders Platformu","text":"<p>Google Classroom ve Teams bu dersin y\u00f6netim platformu olarak kullan\u0131lacakt\u0131r. T\u00fcm kaynaklar ve duyurular burada payla\u015f\u0131lacakt\u0131r. Sa\u011fl\u0131kl\u0131 bir ileti\u015fim i\u00e7in bu platformu d\u00fczenli olarak kontrol ediniz.</p>","tags":["cen429-syllabus","g\u00fcvenli-programlama","fall-2024","cen429"]},{"location":"tr/syllabus/syllabus/#i-akademik-durustluk-intihal-ve-kopya","title":"I. Akademik D\u00fcr\u00fcstl\u00fck, \u0130ntihal ve Kopya","text":"<p>Akademik d\u00fcr\u00fcstl\u00fck, RTE\u00dc \u00dcniversitesi'nin en \u00f6nemli ilkelerinden biridir. Akademik d\u00fcr\u00fcstl\u00fck ilkelerine ayk\u0131r\u0131 davrananlar ciddi \u015fekilde cezaland\u0131r\u0131lacakt\u0131r.</p> <p>S\u0131n\u0131f arkada\u015flar\u0131n\u0131zla veya ba\u015fkalar\u0131yla \"birlikte \u00e7al\u0131\u015fmak\" normaldir. Bir \u00f6\u011frenci, zor bir konuyu veya t\u00fcm dersi daha iyi anlamak i\u00e7in \u00fccretli ya da \u00fccretsiz birinden yard\u0131m istemi\u015f olabilir. Ancak, \"birlikte \u00e7al\u0131\u015fmak\" ile \"\u00f6zel ders almak\" ve \"akademik d\u00fcr\u00fcstl\u00fck ihlali\" aras\u0131ndaki s\u0131n\u0131r nedir? Ne zaman intihal, ne zaman kopya \u00e7ekme say\u0131l\u0131r?</p> <p>Bir ba\u015fka \u00f6\u011frencinin ka\u011f\u0131d\u0131na ya da s\u0131navda izin verilmeyen ba\u015fka bir kayna\u011fa bakman\u0131n kopya \u00e7ekme oldu\u011fu ve cezaland\u0131r\u0131laca\u011f\u0131 a\u00e7\u0131kt\u0131r. Ancak, bir\u00e7ok \u00f6\u011frenci, \u00fcniversiteye geldiklerinde \u00f6devlerde neyin kabul edilebilir oldu\u011funa ve \"kopyalama\"n\u0131n ne oldu\u011funa dair \u00e7ok az deneyime sahip olabiliyor. \u00d6zellikle \u00f6devlerde akademik d\u00fcr\u00fcstl\u00fc\u011f\u00fcn s\u0131n\u0131rlar\u0131n\u0131 anlamak her zaman kolay olmayabilir.</p> <p>A\u015fa\u011f\u0131da, M\u00fchendislik ve Mimarl\u0131k Fak\u00fcltesi \u00f6\u011frencilerine, notland\u0131r\u0131lacaklar\u0131 \u00f6devlerde akademik d\u00fcr\u00fcstl\u00fck felsefesini vurgulamak i\u00e7in rehber niteli\u011finde baz\u0131 a\u00e7\u0131klamalar yer almaktad\u0131r. A\u015fa\u011f\u0131da tan\u0131mlanmayan bir durumla kar\u015f\u0131la\u015f\u0131ld\u0131\u011f\u0131nda, \u00f6\u011frencinin, yapmay\u0131 d\u00fc\u015f\u00fcnd\u00fc\u011f\u00fc \u015feyin akademik d\u00fcr\u00fcstl\u00fck \u00e7er\u00e7evesinde olup olmad\u0131\u011f\u0131n\u0131 anlamak i\u00e7in dersin hocas\u0131na veya asistan\u0131na dan\u0131\u015fmas\u0131 \u00f6nerilir.</p>","tags":["cen429-syllabus","g\u00fcvenli-programlama","fall-2024","cen429"]},{"location":"tr/syllabus/syllabus/#a-bir-odev-hazrlanrken-kabul-edilebilir-olan-nedir","title":"a. Bir \u00f6dev haz\u0131rlan\u0131rken kabul edilebilir olan nedir?","text":"<ul> <li>\u00d6devi daha iyi anlamak i\u00e7in s\u0131n\u0131f arkada\u015flar\u0131n\u0131zla ileti\u015fim kurmak</li> </ul> <ul> <li> <p>\u0130nternette veya ba\u015fka yerlerde buldu\u011funuz fikirler, al\u0131nt\u0131lar, paragraflar, k\u00fc\u00e7\u00fck kod par\u00e7ac\u0131klar\u0131 (snippet) gibi i\u00e7erikleri \u00f6devinize dahil etmek, \u015fu \u015fartla:</p> </li> <li> <p>Bu i\u00e7erikler, \u00f6devin tamam\u0131n\u0131n \u00e7\u00f6z\u00fcm\u00fc olmamal\u0131d\u0131r.</p> </li> <li> <p>\u0130\u00e7eriklerin kayna\u011f\u0131n\u0131 mutlaka belirtmelisiniz.</p> </li> </ul> <ul> <li> <p>\u00d6devinizin \u0130ngilizce i\u00e7eri\u011fi konusunda size rehberlik etmesi i\u00e7in bir kaynaktan yard\u0131m istemek.</p> </li> <li> <p>\u00d6devin k\u00fc\u00e7\u00fck par\u00e7alar\u0131n\u0131 s\u0131n\u0131fta tart\u0131\u015fma ortam\u0131 olu\u015fturmak i\u00e7in payla\u015fmak.</p> </li> <li> <p>Teknik sorunlar\u0131 \u00e7\u00f6zmek i\u00e7in web ya da ba\u015fka kaynaklardan talimat, referans veya \u00e7\u00f6z\u00fcm aramak, ancak do\u011frudan \u00f6deve cevap aramamak.</p> </li> <li> <p>\u00d6devlerin \u00e7\u00f6z\u00fcmlerini ba\u015fkalar\u0131yla diyagramlar ya da \u00f6zet a\u00e7\u0131klamalar kullanarak tart\u0131\u015fmak, ancak do\u011frudan metin ya da kod payla\u015fmamak.</p> </li> <li> <p>Dersle ilgili bir e\u011fitmenden yard\u0131m almak (\u00fccretli ya da \u00fccretsiz), ancak e\u011fitmen \u00f6devinizi sizin yerinize yapmamal\u0131d\u0131r.</p> </li> </ul>","tags":["cen429-syllabus","g\u00fcvenli-programlama","fall-2024","cen429"]},{"location":"tr/syllabus/syllabus/#b-kabul-edilemez-olan-nedir","title":"b. Kabul edilemez olan nedir?","text":"<ul> <li> <p>\u00d6devi teslim etmeden \u00f6nce bir s\u0131n\u0131f arkada\u015f\u0131n\u0131zdan \u00e7\u00f6z\u00fcm\u00fcn\u00fc g\u00f6rmek istemek.</p> </li> <li> <p>\u00d6devde d\u0131\u015f kaynaklardan al\u0131nt\u0131 yapt\u0131\u011f\u0131n\u0131z her t\u00fcrl\u00fc metin ya da kodun kayna\u011f\u0131n\u0131 belirtmemek.</p> </li> <li> <p>\u00c7\u00f6zmekte zorlanan bir s\u0131n\u0131f arkada\u015f\u0131n\u0131za kendi \u00f6dev \u00e7\u00f6z\u00fcm\u00fcn\u00fcz\u00fc vermek veya g\u00f6stermek.</p> </li> </ul>","tags":["cen429-syllabus","g\u00fcvenli-programlama","fall-2024","cen429"]},{"location":"tr/syllabus/syllabus/#j-beklentiler","title":"J. Beklentiler","text":"<p>Derslere zaman\u0131nda kat\u0131lman\u0131z ve d\u00f6nem boyunca haftal\u0131k ders gereksinimlerini (okuma ve \u00f6devler) tamamlaman\u0131z beklenmektedir. E\u011fitmen ile \u00f6\u011frenciler aras\u0131ndaki ana ileti\u015fim kanal\u0131 e-posta olacakt\u0131r. Dersle ilgili sorular\u0131n\u0131z\u0131, \u00fcniversite taraf\u0131ndan size sa\u011flanan e-posta adresi \u00fczerinden e\u011fitmenin e-posta adresine g\u00f6ndermelisiniz. Mesaj\u0131n\u0131z\u0131n konu alan\u0131na dersin ad\u0131n\u0131, metin alan\u0131na ise ad\u0131n\u0131z\u0131 eklemeyi unutmay\u0131n. Ayr\u0131ca, e\u011fitmen gerekli oldu\u011funda sizinle e-posta yoluyla ileti\u015fime ge\u00e7ecektir. Bu nedenle, sa\u011fl\u0131kl\u0131 bir ileti\u015fim i\u00e7in e-posta adresinizi her g\u00fcn kontrol etmeniz \u00e7ok \u00f6nemlidir.</p>","tags":["cen429-syllabus","g\u00fcvenli-programlama","fall-2024","cen429"]},{"location":"tr/syllabus/syllabus/#k-ders-icerigi-ve-program-guncellemeleri","title":"K. Ders \u0130\u00e7eri\u011fi ve Program G\u00fcncellemeleri","text":"<p>Gerekti\u011finde ders i\u00e7eri\u011fi ve programda de\u011fi\u015fiklik yap\u0131labilir. Herhangi bir de\u011fi\u015fiklik durumunda dersin sorumlusu, \u00f6\u011frencileri bilgilendirecektir.</p>","tags":["cen429-syllabus","g\u00fcvenli-programlama","fall-2024","cen429"]},{"location":"tr/syllabus/syllabus/#c-haftalk-ders-plan","title":"C. Haftal\u0131k Ders Plan\u0131","text":"Hafta Tarih Konu Di\u011fer G\u00f6revler 1. Hafta 26 Eyl\u00fcl 2024 G\u00fcvenli Programlamaya Giri\u015f ve Uygulama Koruma Plan\u0131 2. Hafta 3 Ekim 2024 Bilgisayar Vir\u00fcsleri ve G\u00fcvenlik Modelleri 3. Hafta 10 Ekim 2024 Veri G\u00fcvenli\u011fi: Aktar\u0131mda, Depolamada ve Kullan\u0131mda","tags":["cen429-syllabus","g\u00fcvenli-programlama","fall-2024","cen429"]},{"location":"tr/syllabus/syllabus/#c-haftalk-ders-plan_1","title":"C. Haftal\u0131k Ders Plan\u0131","text":"Hafta Tarih Konu Di\u011fer G\u00f6revler 4. Hafta 17 Ekim 2024 Kod Sertle\u015ftirme Teknikleri (C/C++) 5. Hafta 24 Ekim 2024 Kod Sertle\u015ftirme Teknikleri (Java/Yorumlanan Diller) 6. Hafta 31 Ekim 2024 \u00c7al\u0131\u015fma Zaman\u0131 Uygulama Kendini Koruma (RASP) Teknikleri (C/C++) 7. Hafta 7 Kas\u0131m 2024 Geli\u015fmi\u015f Kod Kar\u0131\u015ft\u0131rma ve \u00c7e\u015fitlendirme Teknikleri","tags":["cen429-syllabus","g\u00fcvenli-programlama","fall-2024","cen429"]},{"location":"tr/syllabus/syllabus/#c-haftalk-ders-plan_2","title":"C. Haftal\u0131k Ders Plan\u0131","text":"Hafta Tarih Konu Di\u011fer G\u00f6revler 8. Hafta 14 Kas\u0131m 2024 Quiz 1 + Ara Proje Rapor Teslimi Quiz ve Ara Proje Raporu 9. Hafta 21 Kas\u0131m 2024 Sertifikalar ve \u015eifreleme Y\u00f6ntemleri (AES, RSA, PKI) 10. Hafta 28 Kas\u0131m 2024 Whitebox Kriptografi 11. Hafta 5 Aral\u0131k 2024 G\u00fcvenlik Sertifikasyonlar\u0131 ve Penetrasyon Testi Planlama","tags":["cen429-syllabus","g\u00fcvenli-programlama","fall-2024","cen429"]},{"location":"tr/syllabus/syllabus/#c-haftalk-ders-plan_3","title":"C. Haftal\u0131k Ders Plan\u0131","text":"Hafta Tarih Konu Di\u011fer G\u00f6revler 12. Hafta 12 Aral\u0131k 2024 G\u00fcvenlik Gereksinimleri 13. Hafta 19 Aral\u0131k 2024 Tigress ve \u00c7e\u015fitlendirme 14. Hafta 26 Aral\u0131k 2024 Quiz 2 Quiz 2 15. Hafta 2 Ocak 2025 Final Proje Teslimi ve Sunumu Final Proje ve Sunum","tags":["cen429-syllabus","g\u00fcvenli-programlama","fall-2024","cen429"]},{"location":"tr/syllabus/syllabus/#bologna-information","title":"Bologna Information","text":"<p>\\(Ders-\u0130zlence-Sonu\\)</p>","tags":["cen429-syllabus","g\u00fcvenli-programlama","fall-2024","cen429"]},{"location":"tr/week-1/cen429-week-1/","title":"CEN429 G\u00fcvenli Programlama Hafta-1","text":"","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#cen429-guvenli-programlama","title":"CEN429 G\u00fcvenli Programlama","text":"","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#hafta-1","title":"Hafta-1","text":"","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#ders-plan-ve-iletisim-guvenli-programlama-ve-bilgisayar-virusleri","title":"Ders Plan\u0131 ve \u0130leti\u015fim, G\u00fcvenli Programlama ve Bilgisayar Vir\u00fcsleri","text":"<p>Download </p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#outline","title":"Outline","text":"<ul> <li>G\u00fcvenli Programlama ve Bilgisayar Vir\u00fcsleri</li> <li>Uygulama Koruma Plan\u0131</li> <li>Kod B\u00f6lme    </li> <li>Kod Do\u011frulama</li> <li>Zamanlama    </li> <li>Protokol \u0130zleme</li> <li>Bilgisayar Vir\u00fcsleri</li> <li>Vir\u00fcslerin \u00d6zellikleri</li> <li>Vir\u00fcs T\u00fcrleri</li> <li>Vir\u00fcs Kar\u015f\u0131 \u00d6nlemleri</li> <li>Sald\u0131r\u0131 A\u011fa\u00e7lar\u0131 ve G\u00fcvenlik Modelleri</li> <li>Sald\u0131r\u0131 Y\u00f6ntemleri</li> <li>G\u00fcvenli \u0130leti\u015fim Hedefleri</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#uygulama-koruma-plan-application-protection-plan","title":"Uygulama Koruma Plan\u0131 (Application Protection Plan)","text":"","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#1-kod-bolme-split","title":"1. Kod B\u00f6lme (Split)","text":"","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#teorik-acklama","title":"Teorik A\u00e7\u0131klama:","text":"<p>Kod b\u00f6lme, g\u00fcvenilmeyen ortamda y\u00fcr\u00fct\u00fclen i\u015flemleri g\u00fcvenilir bir ortama ta\u015f\u0131ma y\u00f6ntemidir. Bu sayede g\u00fcvenlik a\u00e7\u0131klar\u0131 minimize edilir.</p>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#uygulama","title":"Uygulama:","text":"<ul> <li>Uygulama: Bir istemci-sunucu modelinde \u015fifreleme i\u015flemlerini istemci yerine sunucuda ger\u00e7ekle\u015ftiren bir sistem kurun. Bu, kritik i\u015flemleri g\u00fcvenli ortamda y\u00fcr\u00fctmek i\u00e7in kullan\u0131l\u0131r.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#2-kod-dogrulama-measure","title":"2. Kod Do\u011frulama (Measure)","text":"","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#teorik-acklama_1","title":"Teorik A\u00e7\u0131klama:","text":"<p>G\u00fcvenilmeyen bir siteye ya da cihaza \"Do\u011fru kodu mu \u00e7al\u0131\u015ft\u0131r\u0131yorsun?\" \u015feklinde sorular y\u00f6nelterek, sistemin beklenen davran\u0131\u015flar\u0131 sergiledi\u011fini kontrol ederiz.</p>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#uygulama_1","title":"Uygulama:","text":"<ul> <li>Uygulama: Bir uygulaman\u0131n \u00e7al\u0131\u015fma s\u0131ras\u0131nda belirli matematiksel problemlere do\u011fru ve h\u0131zl\u0131 yan\u0131t verip vermedi\u011fini kontrol eden bir sistem geli\u015ftirin. Bu sistem, do\u011frulu\u011fu kan\u0131tlayamazsa i\u015flem yapmaz.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#3-zamanlama-time","title":"3. Zamanlama (Time)","text":"","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#teorik-acklama_2","title":"Teorik A\u00e7\u0131klama:","text":"<p>G\u00fcvenilmeyen bir sistemde, i\u015flem yap\u0131lmas\u0131 gereken bir zorluk hesaplat\u0131l\u0131r ve belirli bir zaman dilimi i\u00e7erisinde cevap beklenir. Bu teknik, sald\u0131rganlar\u0131n analiz i\u00e7in yeterli zaman\u0131 bulmas\u0131n\u0131 engeller.</p>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#uygulama_2","title":"Uygulama:","text":"<ul> <li>Uygulama: Bir \"Zaman Temelli Soru-Cevap\" uygulamas\u0131 olu\u015fturun. Belirli bir s\u00fcre i\u00e7inde cevap al\u0131nmazsa oturum sonland\u0131r\u0131ls\u0131n.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#4-protokol-izleme-monitor","title":"4. Protokol \u0130zleme (Monitor)","text":"","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#teorik-acklama_3","title":"Teorik A\u00e7\u0131klama:","text":"<p>Veri transferi s\u0131ras\u0131nda protokol ak\u0131\u015f\u0131n\u0131 izleyerek, olas\u0131 g\u00fcvenlik a\u00e7\u0131klar\u0131n\u0131 veya k\u00f6t\u00fc niyetli i\u015flemleri tespit ederiz.</p>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#uygulama_3","title":"Uygulama:","text":"<ul> <li>Uygulama: Bir web sunucusunda yap\u0131lan HTTP isteklerini izleyen bir log sistemi olu\u015fturun. \u015e\u00fcpheli istekler alg\u0131land\u0131\u011f\u0131nda kullan\u0131c\u0131y\u0131 engelleyin.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#bilgisayar-virusleri","title":"Bilgisayar Vir\u00fcsleri","text":"","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#1-viruslerin-ozellikleri","title":"1. Vir\u00fcslerin \u00d6zellikleri","text":"<ul> <li>Uyuma Durumu (Dormant): Vir\u00fcs bir s\u00fcre sessiz kalabilir, alg\u0131lanmaktan ka\u00e7\u0131n\u0131r.</li> <li>Yay\u0131lma (Propagation): Yeni dosyalara veya sistemlere bula\u015f\u0131r.</li> <li>Tetikleme (Triggering): Vir\u00fcs\u00fcn harekete ge\u00e7ece\u011fi zaman\u0131 belirleyen olay.</li> <li>Eylem (Action): Zararl\u0131 i\u015flem yap\u0131l\u0131r, bu genellikle \"payload\" denir.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#uygulama_4","title":"Uygulama:","text":"<ul> <li>Uygulama: Bir sim\u00fclasyon olu\u015fturun. Vir\u00fcs uyuma durumunda beklesin, belirli bir tarihte etkinle\u015fip bir dosya silme i\u015flemi yaps\u0131n.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#2-virus-turleri","title":"2. Vir\u00fcs T\u00fcrleri","text":"<ul> <li>Program/Dosya Vir\u00fcs\u00fc: Program dosyalar\u0131na bula\u015f\u0131r.</li> <li>Makro Vir\u00fcs\u00fc: Word/Excel belgelerine bula\u015f\u0131r ve belge a\u00e7\u0131ld\u0131\u011f\u0131nda \u00e7al\u0131\u015f\u0131r.</li> <li>Boot Sekt\u00f6r\u00fc Vir\u00fcs\u00fc: Sabit diskin \u00f6ny\u00fckleme sekt\u00f6r\u00fcne bula\u015f\u0131r, bilgisayar ba\u015flat\u0131ld\u0131\u011f\u0131nda \u00e7al\u0131\u015f\u0131r.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#uygulama_5","title":"Uygulama:","text":"<ul> <li>Uygulama: Farkl\u0131 vir\u00fcs t\u00fcrlerinin nas\u0131l \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131 g\u00f6steren bir sim\u00fclasyon olu\u015fturun. Her vir\u00fcs t\u00fcr\u00fc farkl\u0131 tetikleyicilerle harekete ge\u00e7sin.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#3-virus-kars-onlemleri","title":"3. Vir\u00fcs Kar\u015f\u0131 \u00d6nlemleri","text":"<ul> <li>\u0130mza Tabanl\u0131 Tespit (Signatures): Vir\u00fcs\u00fcn bilinen kod par\u00e7alar\u0131na dayal\u0131 tespit y\u00f6ntemidir.</li> <li>\u015eifreleme: Vir\u00fcslerin kodlar\u0131n\u0131n \u015fifrelenmesi, imza tespitine kar\u015f\u0131 koruma sa\u011flar.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#uygulama_6","title":"Uygulama:","text":"<ul> <li>Uygulama: \u015eifrelenmi\u015f bir vir\u00fcs sim\u00fclasyonu olu\u015fturun. Vir\u00fcs kodu her \u00e7al\u0131\u015ft\u0131r\u0131ld\u0131\u011f\u0131nda farkl\u0131 bir anahtar ile \u015fifrelenmi\u015f olsun.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#guvenlik-modelleri-ve-saldr-agaclar-attack-trees","title":"G\u00fcvenlik Modelleri ve Sald\u0131r\u0131 A\u011fa\u00e7lar\u0131 (Attack Trees)","text":"","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#1-saldr-agac-nedir","title":"1. Sald\u0131r\u0131 A\u011fac\u0131 Nedir?","text":"<p>Sald\u0131r\u0131 a\u011fac\u0131, bir sald\u0131rgan\u0131n bir hedefe ula\u015fma stratejilerini anlamam\u0131z\u0131 sa\u011flayan bir yap\u0131d\u0131r. Bu model, g\u00fcvenlik a\u00e7\u0131klar\u0131n\u0131 g\u00f6rselle\u015ftirerek sald\u0131r\u0131lara kar\u015f\u0131 etkili savunmalar geli\u015ftirilmesine yard\u0131mc\u0131 olur.</p>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#uygulama_7","title":"Uygulama:","text":"<ul> <li>Uygulama: Basit bir sald\u0131r\u0131 a\u011fac\u0131 olu\u015fturun. \u00d6rne\u011fin, bir web uygulamas\u0131nda SQL enjeksiyonundan ba\u015flayarak, veritaban\u0131na eri\u015fime kadar olan ad\u0131mlar\u0131 modelleyin.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#2-maliyet-modelleme","title":"2. Maliyet Modelleme","text":"<p>Her sald\u0131r\u0131 ad\u0131m\u0131n\u0131n bir maliyeti vard\u0131r. Bu maliyetler sald\u0131rgan\u0131n hedefe ula\u015fmas\u0131n\u0131 zorla\u015ft\u0131rmak i\u00e7in hesaplanabilir. Bir sald\u0131r\u0131 a\u011fac\u0131nda, maliyetler her bir d\u00fc\u011f\u00fcme atan\u0131r ve en az maliyetli yol hesaplan\u0131r.</p>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#uygulama_8","title":"Uygulama:","text":"<ul> <li>Uygulama: Bir sald\u0131r\u0131 a\u011fac\u0131nda her ad\u0131m\u0131n maliyetini hesaplayan bir sim\u00fclasyon geli\u015ftirin. En d\u00fc\u015f\u00fck maliyetle hedefe ula\u015fmay\u0131 sim\u00fcle edin.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#saldr-yontemleri-attack-methods","title":"Sald\u0131r\u0131 Y\u00f6ntemleri (Attack Methods)","text":"","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#1-dinamik-analiz-dynamic-analysis","title":"1. Dinamik Analiz (Dynamic Analysis)","text":"<p>Bir program\u0131n \u00e7al\u0131\u015f\u0131rken hangi b\u00f6l\u00fcmlerinin tetiklendi\u011fini ve hangi girdilerle nas\u0131l davran\u0131\u015flar sergiledi\u011fini anlamaya yarar.</p>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#uygulama_9","title":"Uygulama:","text":"<ul> <li>Uygulama: Bir yaz\u0131l\u0131m\u0131n \u00e7al\u0131\u015fma zaman\u0131nda hangi i\u015flevlerin \u00e7a\u011fr\u0131ld\u0131\u011f\u0131n\u0131 izleyen ve bu i\u015flevlerin hangi girdilerle tetiklendi\u011fini g\u00f6steren bir izleyici olu\u015fturun.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#2-statik-analiz-static-analysis","title":"2. Statik Analiz (Static Analysis)","text":"<p>Bir program\u0131n kaynak kodu veya derlenmi\u015f halinin analiz edilmesi i\u015flemidir. Bu analiz ile potansiyel g\u00fcvenlik a\u00e7\u0131klar\u0131 belirlenir.</p>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#uygulama_10","title":"Uygulama:","text":"<ul> <li>Uygulama: Bir disassembler kullanarak, basit bir program\u0131n derlenmi\u015f kodunu analiz edin ve zay\u0131f noktalar\u0131 tespit edin.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#3-program-duzenleme-editing-phase","title":"3. Program D\u00fczenleme (Editing Phase)","text":"<p>Bir sald\u0131rgan, yaz\u0131l\u0131m\u0131n i\u00e7 i\u015fleyi\u015fini anlad\u0131ktan sonra, lisans denetimlerini devre d\u0131\u015f\u0131 b\u0131rakmak veya k\u0131s\u0131tlamalar\u0131 kald\u0131rmak i\u00e7in program\u0131 d\u00fczenleyebilir.</p>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#uygulama_11","title":"Uygulama:","text":"<ul> <li>Uygulama: Lisans denetimini atlamak i\u00e7in bir program\u0131n ikili dosyas\u0131n\u0131 d\u00fczenleyin. Hangi k\u0131s\u0131tlamalar\u0131n kald\u0131r\u0131ld\u0131\u011f\u0131n\u0131 izleyin.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#guvenli-iletisim-hedefleri","title":"G\u00fcvenli \u0130leti\u015fim Hedefleri","text":"<ul> <li>Kar\u015f\u0131l\u0131kl\u0131 Kimlik Do\u011frulama: \u0130leti\u015fime giren iki taraf\u0131n birbirini do\u011frulamas\u0131.</li> <li>Anahtar \u0130ptali: Ge\u00e7ersiz anahtarlar\u0131n iptal edilmesi.</li> <li>Y\u00fcksek Performans: G\u00fcvenli ileti\u015fimde h\u0131z ve d\u00fc\u015f\u00fck gecikme s\u00fcresi esast\u0131r.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#uygulama_12","title":"Uygulama:","text":"<ul> <li>Uygulama: \u0130ki taraf\u0131n kar\u015f\u0131l\u0131kl\u0131 olarak birbirini do\u011frulamas\u0131n\u0131 sa\u011flayan basit bir kimlik do\u011frulama protokol\u00fc olu\u015fturun.</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#haftann-ozeti-ve-gelecek-hafta","title":"Haftan\u0131n \u00d6zeti ve Gelecek Hafta","text":"","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#bu-hafta","title":"Bu Hafta:","text":"<ul> <li>Uygulama Koruma Plan\u0131</li> <li>Bilgisayar Vir\u00fcsleri ve T\u00fcrleri</li> <li>Sald\u0131r\u0131 A\u011fa\u00e7lar\u0131 ve G\u00fcvenlik Modelleri</li> <li>Sald\u0131r\u0131 Y\u00f6ntemleri ve G\u00fcvenli \u0130leti\u015fim Hedefleri</li> </ul>","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-1/cen429-week-1/#gelecek-hafta","title":"Gelecek Hafta:","text":"<ul> <li>Veri G\u00fcvenli\u011fi</li> <li>Kriptografik Teknikler</li> <li>Uygulamal\u0131 \u015eifreleme</li> </ul> \\[ 1.Hafta-Sonu \\]","tags":["cen429-week-1","secure-programming","computer-viruses","code-splitting","code-verification","protocol-monitoring","virus-countermeasures","application-protection-plan"]},{"location":"tr/week-10/cen429-week-10/","title":"CEN429 G\u00fcvenli Programlama Hafta-10","text":"","tags":["cen429-hafta-10","beyaz-kutu-kriptografi","\u015fifreleme","g\u00fcvenlik"]},{"location":"tr/week-10/cen429-week-10/#cen429-guvenli-programlama","title":"CEN429 G\u00fcvenli Programlama","text":"","tags":["cen429-hafta-10","beyaz-kutu-kriptografi","\u015fifreleme","g\u00fcvenlik"]},{"location":"tr/week-10/cen429-week-10/#hafta-10","title":"Hafta-10","text":"","tags":["cen429-hafta-10","beyaz-kutu-kriptografi","\u015fifreleme","g\u00fcvenlik"]},{"location":"tr/week-10/cen429-week-10/#beyaz-kutu-kriptografisi","title":"Beyaz Kutu Kriptografisi","text":"<p>\u0130ndir</p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-hafta-10","beyaz-kutu-kriptografi","\u015fifreleme","g\u00fcvenlik"]},{"location":"tr/week-10/cen429-week-10/#outline","title":"Outline","text":"<ul> <li>Beyaz Kutu Kriptografisi Nedir?</li> <li>Beyaz Kutu \u015eifreleme Y\u00f6ntemleri</li> <li>Uygulama Alanlar\u0131 ve Tehditler</li> </ul>","tags":["cen429-hafta-10","beyaz-kutu-kriptografi","\u015fifreleme","g\u00fcvenlik"]},{"location":"tr/week-10/cen429-week-10/#hafta-10-beyaz-kutu-kriptografisi","title":"Hafta-10: Beyaz Kutu Kriptografisi","text":"<p>Bu hafta, \u015fifreleme i\u015flemlerinin a\u00e7\u0131k sistemlerde g\u00fcvenli bir \u015fekilde nas\u0131l uyguland\u0131\u011f\u0131n\u0131 inceleyen Beyaz Kutu Kriptografisi'ni ele alaca\u011f\u0131z. Beyaz kutu kriptografisi, \u00f6zellikle dijital hak y\u00f6netimi (DRM) ve mobil uygulamalarda veri g\u00fcvenli\u011fini sa\u011flamak i\u00e7in \u00f6nemli bir tekniktir.</p>","tags":["cen429-hafta-10","beyaz-kutu-kriptografi","\u015fifreleme","g\u00fcvenlik"]},{"location":"tr/week-10/cen429-week-10/#1-beyaz-kutu-kriptografisinin-temelleri","title":"1. Beyaz Kutu Kriptografisinin Temelleri","text":"<p>Teorik A\u00e7\u0131klama: Beyaz kutu kriptografisi, \u00f6zellikle sald\u0131rgan\u0131n sistemin t\u00fcm kaynaklar\u0131na eri\u015fimi oldu\u011fu durumlarda g\u00fcvenli\u011fi sa\u011flamak amac\u0131yla geli\u015ftirilmi\u015ftir. Buradaki temel ama\u00e7, \u015fifreleme anahtarlar\u0131n\u0131 ve i\u015flemlerini d\u0131\u015far\u0131dan gelebilecek sald\u0131r\u0131lara kar\u015f\u0131 gizli tutmakt\u0131r. Sald\u0131rgan, sistem \u00fczerinde kodu analiz edebilir, belle\u011fi okuyabilir ve \u015fifreleme i\u015flemlerini takip edebilir. Beyaz kutu kriptografi, bu durumlarda bile g\u00fcvenli\u011fi sa\u011flayacak teknikler sunar.</p> <ul> <li>Kara Kutu Modeli (Blackbox): Anahtar ve veri, \u015fifreleme i\u015flemi s\u0131ras\u0131nda sistemde gizli kal\u0131r. Sald\u0131rgan\u0131n \u015fifreleme algoritmas\u0131na eri\u015fimi yoktur.</li> <li>Beyaz Kutu Modeli (Whitebox): Sald\u0131rgan sistemde tam eri\u015fime sahiptir. \u015eifreleme algoritmas\u0131 ve anahtarlar sald\u0131rgan taraf\u0131ndan g\u00f6r\u00fcn\u00fcr.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Beyaz kutu ortam\u0131nda bir \u015fifreleme algoritmas\u0131n\u0131n nas\u0131l gizlenebilece\u011fini analiz etmek.</li> <li>Kara kutu ve beyaz kutu modelleri aras\u0131ndaki farklar\u0131 kar\u015f\u0131la\u015ft\u0131rarak a\u00e7\u0131klamak.</li> </ol>","tags":["cen429-hafta-10","beyaz-kutu-kriptografi","\u015fifreleme","g\u00fcvenlik"]},{"location":"tr/week-10/cen429-week-10/#2-beyaz-kutu-sifreleme-yontemleri","title":"2. Beyaz Kutu \u015eifreleme Y\u00f6ntemleri","text":"<p>Teorik A\u00e7\u0131klama: Beyaz kutu \u015fifreleme, \u00f6zellikle simetrik \u015fifreleme algoritmalar\u0131 i\u00e7in kullan\u0131l\u0131r. Beyaz kutu ortam\u0131nda \u015fifreleme yap\u0131l\u0131rken, \u015fifreleme anahtar\u0131n\u0131n bellekten \u00e7\u0131kar\u0131lmas\u0131 veya tahmin edilmesi zorla\u015ft\u0131r\u0131l\u0131r.</p> <ul> <li>Whitebox AES: AES \u015fifreleme algoritmas\u0131n\u0131n, beyaz kutu ortamlar\u0131nda g\u00fcvenli bir \u015fekilde uygulanmas\u0131n\u0131 sa\u011flar.</li> <li>Whitebox DES: DES algoritmas\u0131n\u0131n benzer \u015fekilde beyaz kutu g\u00fcvenli\u011fi sa\u011flanm\u0131\u015f hali.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Whitebox AES ile bir metni \u015fifreleme ve \u00e7\u00f6zme i\u015flemi.</li> <li>Whitebox DES kullanarak verilerin \u015fifrelenmesi ve \u015fifre \u00e7\u00f6z\u00fclmesi.</li> </ol>","tags":["cen429-hafta-10","beyaz-kutu-kriptografi","\u015fifreleme","g\u00fcvenlik"]},{"location":"tr/week-10/cen429-week-10/#3-whitebox-aes-ve-des","title":"3. Whitebox AES ve DES","text":"<p>Teorik A\u00e7\u0131klama: AES ve DES, simetrik \u015fifreleme algoritmalar\u0131d\u0131r. Beyaz kutu uygulamalar\u0131nda, bu algoritmalar\u0131n i\u00e7 yap\u0131lar\u0131n\u0131 gizlemek i\u00e7in \u00e7e\u015fitli teknikler kullan\u0131l\u0131r.</p> <ul> <li>Whitebox AES: Normalde g\u00fcvenli bir ortamda \u00e7al\u0131\u015fan AES algoritmas\u0131, sald\u0131rgan\u0131n t\u00fcm belle\u011fe ve koda eri\u015febildi\u011fi durumlarda dahi anahtarlar\u0131 gizli tutacak \u015fekilde d\u00f6n\u00fc\u015ft\u00fcr\u00fcl\u00fcr. Bu, d\u00f6n\u00fc\u015f\u00fcm tablosu kullan\u0131larak yap\u0131l\u0131r.</li> <li>Whitebox DES: DES algoritmas\u0131nda da benzer bir yakla\u015f\u0131m izlenir, ancak AES'e g\u00f6re daha d\u00fc\u015f\u00fck g\u00fcvenlik seviyelerine sahiptir.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Whitebox AES algoritmas\u0131n\u0131n nas\u0131l \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131 ad\u0131m ad\u0131m analiz etme.</li> <li>Whitebox DES'in zay\u0131f y\u00f6nlerini ve g\u00fcvenlik a\u00e7\u0131klar\u0131n\u0131 tart\u0131\u015fma.</li> </ol>","tags":["cen429-hafta-10","beyaz-kutu-kriptografi","\u015fifreleme","g\u00fcvenlik"]},{"location":"tr/week-10/cen429-week-10/#4-beyaz-kutu-kriptografisinde-kullanlan-teknikler","title":"4. Beyaz Kutu Kriptografisinde Kullan\u0131lan Teknikler","text":"<p>Teorik A\u00e7\u0131klama: Beyaz kutu kriptografisi, sald\u0131rgan\u0131n anahtarlar\u0131 elde etmesini zorla\u015ft\u0131ran \u00e7e\u015fitli teknikler kullan\u0131r.</p> <ul> <li>Tablo D\u00f6n\u00fc\u015f\u00fcm\u00fc (Table Lookups): Anahtar i\u015flemleri, tabloya dayal\u0131 d\u00f6n\u00fc\u015f\u00fcmlerle ger\u00e7ekle\u015ftirilir ve b\u00f6ylece anahtarlar kod i\u00e7inde a\u00e7\u0131k\u00e7a g\u00f6r\u00fcnmez.</li> <li>Obfuscation: Kodun karma\u015f\u0131kla\u015ft\u0131r\u0131lmas\u0131, \u015fifreleme i\u015flemlerinin izlenmesini zorla\u015ft\u0131r\u0131r.</li> <li>\u00c7oklu Maskeler (Multiple Masking): Anahtarlar, birden fazla maskeleme katman\u0131yla korunur, b\u00f6ylece sald\u0131rgan\u0131n tek bir anahtar\u0131 ele ge\u00e7irmesi yeterli olmaz.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Tablo D\u00f6n\u00fc\u015f\u00fcm y\u00f6ntemi ile \u015fifreleme i\u015flemini beyaz kutuda nas\u0131l g\u00fcvenli hale getirebiliriz?</li> <li>Obfuscation teknikleri kullanarak \u015fifreleme algoritmas\u0131n\u0131 karma\u015f\u0131kla\u015ft\u0131rma.</li> </ol>","tags":["cen429-hafta-10","beyaz-kutu-kriptografi","\u015fifreleme","g\u00fcvenlik"]},{"location":"tr/week-10/cen429-week-10/#5-beyaz-kutu-kriptografisinde-guvenlik-tehditleri","title":"5. Beyaz Kutu Kriptografisinde G\u00fcvenlik Tehditleri","text":"<p>Teorik A\u00e7\u0131klama: Beyaz kutu kriptografisi, tam g\u00fcvenlik sunamayabilir ve \u00e7e\u015fitli sald\u0131r\u0131 t\u00fcrlerine kar\u015f\u0131 savunmas\u0131z kalabilir.</p> <ul> <li>Yan Kanal Sald\u0131r\u0131lar\u0131 (Side-Channel Attacks): Sald\u0131rgan, \u015fifreleme i\u015flemi s\u0131ras\u0131nda enerji t\u00fcketimi, elektromanyetik yay\u0131l\u0131m veya zamanlama bilgilerini analiz ederek \u015fifreleme anahtarlar\u0131n\u0131 elde etmeye \u00e7al\u0131\u015fabilir.</li> <li>Kapsaml\u0131 Sald\u0131r\u0131lar (Brute Force): T\u00fcm olas\u0131 anahtar kombinasyonlar\u0131n\u0131 deneyerek do\u011fru anahtar\u0131 bulmaya \u00e7al\u0131\u015fan sald\u0131r\u0131lard\u0131r.</li> <li>Differential Fault Analysis (DFA): Sald\u0131rgan, \u015fifreleme i\u015flemi s\u0131ras\u0131nda bellek veya i\u015flemcide k\u00fc\u00e7\u00fck hatalar olu\u015fturarak, \u015fifre \u00e7\u00f6zme s\u00fcrecini manip\u00fcle eder ve anahtar bilgilerini elde edebilir.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Yan kanal sald\u0131r\u0131lar\u0131na kar\u015f\u0131 beyaz kutu ortam\u0131nda nas\u0131l koruma sa\u011flanabilir?</li> <li>Brute force sald\u0131r\u0131lar\u0131n\u0131n etkilerini ve korunma y\u00f6ntemlerini analiz etme.</li> </ol>","tags":["cen429-hafta-10","beyaz-kutu-kriptografi","\u015fifreleme","g\u00fcvenlik"]},{"location":"tr/week-10/cen429-week-10/#6-guvenlik-kapsamnda-beyaz-kutu-kriptografisinin-avantaj-ve-dezavantajlar","title":"6. G\u00fcvenlik Kapsam\u0131nda Beyaz Kutu Kriptografisinin Avantaj ve Dezavantajlar\u0131","text":"<p>Teorik A\u00e7\u0131klama: Beyaz kutu kriptografisi, dijital hak y\u00f6netimi ve mobil uygulamalarda s\u0131k\u00e7a kullan\u0131lsa da, her durumda m\u00fckemmel bir \u00e7\u00f6z\u00fcm sunmaz. Avantajlar ve dezavantajlar \u015funlard\u0131r:</p> <ul> <li>Avantajlar:</li> <li>Sald\u0131rgan\u0131n t\u00fcm sisteme eri\u015fimi oldu\u011fu durumlarda dahi g\u00fcvenlik sa\u011flar.</li> <li>Dijital hak y\u00f6netimi (DRM) gibi uygulamalarda yayg\u0131n olarak kullan\u0131l\u0131r.</li> <li>Dezavantajlar:</li> <li>Yan kanal sald\u0131r\u0131lar\u0131 gibi \u00e7e\u015fitli sald\u0131r\u0131 t\u00fcrlerine kar\u015f\u0131 hala savunmas\u0131z olabilir.</li> <li>Performans a\u00e7\u0131s\u0131ndan maliyetli olabilir, \u00e7\u00fcnk\u00fc ek maskeler ve d\u00f6n\u00fc\u015f\u00fcmlerle i\u015flem yap\u0131l\u0131r.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Beyaz kutu kriptografisinin avantajlar\u0131n\u0131 ve dezavantajlar\u0131n\u0131 tart\u0131\u015fma.</li> <li>Beyaz kutu ve kara kutu g\u00fcvenlik modellerinin kar\u015f\u0131la\u015ft\u0131r\u0131lmas\u0131.</li> </ol>","tags":["cen429-hafta-10","beyaz-kutu-kriptografi","\u015fifreleme","g\u00fcvenlik"]},{"location":"tr/week-10/cen429-week-10/#7-beyaz-kutu-kriptografisinin-uygulama-alanlar","title":"7. Beyaz Kutu Kriptografisinin Uygulama Alanlar\u0131","text":"<p>Teorik A\u00e7\u0131klama: Beyaz kutu kriptografisi, \u00e7e\u015fitli uygulama alanlar\u0131nda kullan\u0131l\u0131r:</p> <ul> <li>Dijital Hak Y\u00f6netimi (DRM): M\u00fczik, film ve yaz\u0131l\u0131m gibi dijital i\u00e7eriklerin korsan kullan\u0131m\u0131n\u0131 \u00f6nlemek i\u00e7in kullan\u0131l\u0131r.</li> <li>Mobil Uygulama G\u00fcvenli\u011fi: Mobil cihazlarda \u00e7al\u0131\u015fan uygulamalarda, \u00f6zellikle finansal uygulamalarda hassas bilgilerin korunmas\u0131n\u0131 sa\u011flar.</li> <li>IoT G\u00fcvenli\u011fi: Nesnelerin interneti (IoT) cihazlar\u0131nda veri g\u00fcvenli\u011fini sa\u011flamak i\u00e7in kullan\u0131l\u0131r.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>DRM sistemlerinde beyaz kutu kriptografinin nas\u0131l kullan\u0131ld\u0131\u011f\u0131n\u0131 inceleme.</li> <li>Mobil uygulamalarda beyaz kutu kriptografinin uygulanmas\u0131 ve test edilmesi.</li> </ol>","tags":["cen429-hafta-10","beyaz-kutu-kriptografi","\u015fifreleme","g\u00fcvenlik"]},{"location":"tr/week-10/cen429-week-10/#8-beyaz-kutu-kriptografi-araclar","title":"8. Beyaz Kutu Kriptografi Ara\u00e7lar\u0131","text":"<p>Teorik A\u00e7\u0131klama: Beyaz kutu kriptografisini uygulamak i\u00e7in \u00e7e\u015fitli ara\u00e7lar ve k\u00fct\u00fcphaneler kullan\u0131labilir. Bu ara\u00e7lar, \u015fifreleme i\u015flemlerini karma\u015f\u0131kla\u015ft\u0131rarak g\u00fcvenli\u011fi art\u0131r\u0131r.</p> <ul> <li>Tigress: C/C++ programlar\u0131 i\u00e7in obfuscation (kod karma\u015f\u0131kla\u015ft\u0131rma) ve beyaz kutu kriptografi teknikleri sa\u011flayan bir ara\u00e7.</li> <li>Whitebox Toolkits: Beyaz kutu AES ve di\u011fer \u015fifreleme algoritmalar\u0131n\u0131 uygulayan \u00e7e\u015fitli a\u00e7\u0131k kaynak ve ticari k\u00fct\u00fcphaneler.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Tigress kullanarak bir \u015fifreleme algoritmas\u0131n\u0131 karma\u015f\u0131kla\u015ft\u0131rma.</li> <li>Beyaz kutu kriptografi ara\u00e7lar\u0131yla basit bir uygulama geli\u015ftirme.</li> </ol>","tags":["cen429-hafta-10","beyaz-kutu-kriptografi","\u015fifreleme","g\u00fcvenlik"]},{"location":"tr/week-10/cen429-week-10/#9-beyaz-kutu-kriptografisinde-gelecek-yonelimleri","title":"9. Beyaz Kutu Kriptografisinde Gelecek Y\u00f6nelimleri","text":"<p>Teorik A\u00e7\u0131klama: Beyaz kutu kriptografisi, dijital hak y\u00f6netimi ve g\u00fcvenli mobil uygulamalar i\u00e7in kritik bir rol oynamaya devam ediyor. Gelecekte, beyaz kutu g\u00fcvenlik tekniklerinin daha da geli\u015ftirilmesi ve yeni sald\u0131r\u0131 t\u00fcrlerine kar\u015f\u0131 daha diren\u00e7li hale getirilmesi bekleniyor.</p> <ul> <li>Post-Kuantum Kriptografi: Kuantum bilgisayarlar\u0131n ortaya \u00e7\u0131kmas\u0131yla birlikte, mevcut \u015fifreleme algoritmalar\u0131n\u0131n g\u00fcvenli\u011fi sorgulanmaktad\u0131r. Beyaz kutu kriptografisi, bu yeni tehditlere kar\u015f\u0131 daha g\u00fcvenli hale getirilmeye \u00e7al\u0131\u015f\u0131l\u0131yor.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Beyaz kutu kriptografisinin gelecekteki g\u00fcvenlik tehditlerine kar\u015f\u0131 nas\u0131l geli\u015ftirilebilece\u011fini analiz etme.</li> </ol>","tags":["cen429-hafta-10","beyaz-kutu-kriptografi","\u015fifreleme","g\u00fcvenlik"]},{"location":"tr/week-10/cen429-week-10/#sonuc","title":"Sonu\u00e7","text":"<p>Bu hafta, beyaz kutu kriptografisinin temellerini, uygulama alanlar\u0131n\u0131 ve g\u00fcvenlik tehditlerine kar\u015f\u0131 nas\u0131l koruma sa\u011fland\u0131\u011f\u0131n\u0131 \u00f6\u011frendik. Beyaz kutu kriptografisi, dijital i\u00e7eriklerin ve hassas bilgilerin g\u00fcvenli\u011fini sa\u011flamak i\u00e7in \u00f6nemli bir ara\u00e7t\u0131r.</p> \\[ 10.Hafta-Sonu \\]","tags":["cen429-hafta-10","beyaz-kutu-kriptografi","\u015fifreleme","g\u00fcvenlik"]},{"location":"tr/week-11/cen429-week-11/","title":"CEN429 G\u00fcvenli Programlama Hafta-11","text":"","tags":["cen429-hafta-11","g\u00fcvenlik-sertifikalar\u0131","penetrasyon-testi","g\u00fcvenlik"]},{"location":"tr/week-11/cen429-week-11/#cen429-guvenli-programlama","title":"CEN429 G\u00fcvenli Programlama","text":"","tags":["cen429-hafta-11","g\u00fcvenlik-sertifikalar\u0131","penetrasyon-testi","g\u00fcvenlik"]},{"location":"tr/week-11/cen429-week-11/#hafta-11","title":"Hafta-11","text":"","tags":["cen429-hafta-11","g\u00fcvenlik-sertifikalar\u0131","penetrasyon-testi","g\u00fcvenlik"]},{"location":"tr/week-11/cen429-week-11/#guvenlik-sertifikalar-ve-penetrasyon-testi-planlar","title":"G\u00fcvenlik Sertifikalar\u0131 ve Penetrasyon Testi Planlar\u0131","text":"<p>\u0130ndir</p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-hafta-11","g\u00fcvenlik-sertifikalar\u0131","penetrasyon-testi","g\u00fcvenlik"]},{"location":"tr/week-11/cen429-week-11/#outline","title":"Outline","text":"<ul> <li>G\u00fcvenlik Sertifikalar\u0131n\u0131n \u00d6nemi</li> <li>Penetrasyon Testi Planlar\u0131 ve Ara\u00e7lar\u0131</li> <li>Sertifikasyon S\u00fcre\u00e7leri ve \u0130li\u015fkiler</li> </ul>","tags":["cen429-hafta-11","g\u00fcvenlik-sertifikalar\u0131","penetrasyon-testi","g\u00fcvenlik"]},{"location":"tr/week-11/cen429-week-11/#hafta-11-guvenlik-sertifikalar-ve-penetrasyon-testi-planlar","title":"Hafta-11: G\u00fcvenlik Sertifikalar\u0131 ve Penetrasyon Testi Planlar\u0131","text":"<p>Bu haftan\u0131n amac\u0131, g\u00fcvenlik sertifikasyonlar\u0131n\u0131n \u00f6nemini, kullan\u0131lan standartlar\u0131 ve s\u0131zma testi (Penetrasyon Testi) s\u00fcre\u00e7lerinin nas\u0131l planland\u0131\u011f\u0131n\u0131 \u00f6\u011frenmektir. G\u00fcvenlik sertifikalar\u0131, yaz\u0131l\u0131m ve donan\u0131m\u0131n g\u00fcvenli\u011finin uluslararas\u0131 standartlara uygunlu\u011funu g\u00f6sterirken, penetrasyon testleri sistemin g\u00fcvenlik a\u00e7\u0131klar\u0131n\u0131 belirleyip olas\u0131 tehditleri analiz etmemizi sa\u011flar.</p>","tags":["cen429-hafta-11","g\u00fcvenlik-sertifikalar\u0131","penetrasyon-testi","g\u00fcvenlik"]},{"location":"tr/week-11/cen429-week-11/#1-guvenlik-sertifikalarnn-onemi","title":"1. G\u00fcvenlik Sertifikalar\u0131n\u0131n \u00d6nemi","text":"<p>Teorik A\u00e7\u0131klama: G\u00fcvenlik sertifikalar\u0131, bir sistemin veya \u00fcr\u00fcn\u00fcn belirli g\u00fcvenlik standartlar\u0131na uydu\u011funu g\u00f6sterir. Sertifikalar, genellikle bir \u00fcr\u00fcn\u00fcn kullan\u0131c\u0131lara g\u00fcven verdi\u011fini ve g\u00fcvenlik a\u00e7\u0131s\u0131ndan belirli testlerden ge\u00e7ti\u011fini belirtir.</p> <ul> <li>Neden \u00d6nemli?</li> <li>G\u00fcvenilirlik sa\u011flar.</li> <li>Uluslararas\u0131 standartlara uygunlu\u011fu g\u00f6sterir.</li> <li>Reg\u00fclasyon ve yasal uyum gereksinimlerini kar\u015f\u0131lar.</li> <li>\u00dcr\u00fcnlerin g\u00fcvenlik seviyesini art\u0131r\u0131r.</li> <li>Kullan\u0131c\u0131lar ve m\u00fc\u015fterilere g\u00fcven verir.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Bir sistemin neden g\u00fcvenlik sertifikas\u0131na ihtiya\u00e7 duydu\u011funa dair bir analiz yapma.</li> <li>G\u00fcvenlik sertifikalar\u0131n\u0131n ticari \u00fcr\u00fcnler \u00fczerindeki etkilerini inceleme.</li> </ol>","tags":["cen429-hafta-11","g\u00fcvenlik-sertifikalar\u0131","penetrasyon-testi","g\u00fcvenlik"]},{"location":"tr/week-11/cen429-week-11/#2-yaygn-guvenlik-sertifikalar-ve-standartlar","title":"2. Yayg\u0131n G\u00fcvenlik Sertifikalar\u0131 ve Standartlar","text":"<p>Teorik A\u00e7\u0131klama: Bir\u00e7ok g\u00fcvenlik standard\u0131 ve sertifikasyon, donan\u0131m ve yaz\u0131l\u0131m \u00fcr\u00fcnlerinin g\u00fcvenli\u011fini sa\u011flamak i\u00e7in kullan\u0131l\u0131r. Bu standartlar, \u00fcr\u00fcnlerin nas\u0131l test edilmesi ve sertifikaland\u0131r\u0131lmas\u0131 gerekti\u011fine dair rehberlik eder.</p> <ul> <li>ETSI (European Telecommunications Standards Institute): Telekom\u00fcnikasyon ve a\u011f g\u00fcvenli\u011fi standartlar\u0131n\u0131 belirler.</li> <li>EMV (Europay, MasterCard, Visa): Kart tabanl\u0131 \u00f6deme sistemlerinin g\u00fcvenli\u011fini sa\u011flamak i\u00e7in kullan\u0131lan standart.</li> <li>GSMA: Mobil cihazlar ve a\u011flar i\u00e7in g\u00fcvenlik standartlar\u0131.</li> <li>ISO/IEC 27001: Bilgi g\u00fcvenli\u011fi y\u00f6netim sistemleri standard\u0131.</li> <li>PCI DSS (Payment Card Industry Data Security Standard): \u00d6deme kart\u0131 bilgilerinin g\u00fcvenli\u011fini sa\u011flamak i\u00e7in kullan\u0131lan standart.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>ETSI standartlar\u0131na g\u00f6re bir a\u011f g\u00fcvenli\u011fi plan\u0131 olu\u015fturma.</li> <li>PCI DSS uyumlulu\u011funun bir \u00f6deme sistemi i\u00e7in nas\u0131l sa\u011flanaca\u011f\u0131n\u0131 inceleme.</li> </ol>","tags":["cen429-hafta-11","g\u00fcvenlik-sertifikalar\u0131","penetrasyon-testi","g\u00fcvenlik"]},{"location":"tr/week-11/cen429-week-11/#3-eal-evaluation-assurance-level-sertifikasyonu","title":"3. EAL (Evaluation Assurance Level) Sertifikasyonu","text":"<p>Teorik A\u00e7\u0131klama: EAL (De\u011ferlendirme G\u00fcvencesi Seviyesi), bir \u00fcr\u00fcn\u00fcn belirli g\u00fcvenlik gereksinimlerini kar\u015f\u0131lama d\u00fczeyini g\u00f6sterir. Farkl\u0131 seviyelerde (EAL1'den EAL7'ye kadar) g\u00fcvenlik g\u00fcvencesi sa\u011flar.</p> <ul> <li>EAL Seviyeleri:</li> <li>EAL1: Fonksiyonel olarak test edilmi\u015f.</li> <li>EAL2: Yap\u0131sal olarak test edilmi\u015f.</li> <li>EAL3: Metodolojik olarak test edilmi\u015f ve denetlenmi\u015f.</li> <li>EAL4: Tasar\u0131m baz\u0131nda g\u00f6zden ge\u00e7irilmi\u015f, metodolojik olarak test edilmi\u015f.</li> <li>EAL5: Y\u00fcksek g\u00fcvence sa\u011flayan, semantik olarak analiz edilmi\u015f.</li> <li>EAL6 ve EAL7: Son derece y\u00fcksek g\u00fcvenlik seviyesi, matematiksel olarak kan\u0131tlanm\u0131\u015f.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>EAL sertifikasyon s\u00fcrecinin nas\u0131l i\u015fledi\u011fini ara\u015ft\u0131rma.</li> <li>EAL seviyelerine g\u00f6re bir sistemin g\u00fcvenli\u011fini de\u011ferlendirme.</li> </ol>","tags":["cen429-hafta-11","g\u00fcvenlik-sertifikalar\u0131","penetrasyon-testi","g\u00fcvenlik"]},{"location":"tr/week-11/cen429-week-11/#4-penetrasyon-testi-pentest-planlar","title":"4. Penetrasyon Testi (PenTest) Planlar\u0131","text":"<p>Teorik A\u00e7\u0131klama: Penetrasyon testi, bir sistemin zay\u0131f noktalar\u0131n\u0131 ve g\u00fcvenlik a\u00e7\u0131klar\u0131n\u0131 belirlemek i\u00e7in ger\u00e7ekle\u015ftirilen sald\u0131r\u0131 sim\u00fclasyonlar\u0131d\u0131r. Penetrasyon testi planlar\u0131, test edilecek alanlar\u0131, metodolojiyi, hedefleri ve s\u00fcreci i\u00e7erir.</p> <ul> <li>Neden Penetrasyon Testi Yap\u0131l\u0131r?</li> <li>G\u00fcvenlik a\u00e7\u0131klar\u0131n\u0131 tespit etmek.</li> <li>Ger\u00e7ek d\u00fcnya sald\u0131r\u0131lar\u0131na kar\u015f\u0131 sistemi test etmek.</li> <li>Zay\u0131f noktalar\u0131 belirleyerek savunma mekanizmalar\u0131n\u0131 g\u00fc\u00e7lendirmek.</li> <li>Sistem g\u00fcvenli\u011fini proaktif bir \u015fekilde art\u0131rmak.</li> </ul> <p>PenTest S\u00fcre\u00e7 Ad\u0131mlar\u0131:</p> <ol> <li>Ke\u015fif (Reconnaissance): Sistem hakk\u0131nda bilgi toplama.</li> <li>Tarama (Scanning): A\u00e7\u0131k portlar, hizmetler ve zay\u0131fl\u0131klar tespit edilir.</li> <li>Sistem \u0130stismar\u0131 (Exploitation): Tespit edilen zay\u0131fl\u0131klardan yararlanarak sisteme s\u0131zma.</li> <li>Avantaj Sa\u011flama (Privilege Escalation): Sistemde y\u00f6netici haklar\u0131na eri\u015fim sa\u011flama.</li> <li>Eri\u015fimi Koruma (Maintaining Access): S\u0131zman\u0131n kal\u0131c\u0131 hale getirilmesi.</li> <li>Kan\u0131t Toplama (Evidence Collection): Bulunan g\u00fcvenlik a\u00e7\u0131klar\u0131n\u0131n belgelenmesi.</li> </ol> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Bir web uygulamas\u0131 i\u00e7in penetrasyon testi plan\u0131 olu\u015fturma.</li> <li>Ger\u00e7ek d\u00fcnya sald\u0131r\u0131lar\u0131n\u0131 sim\u00fcle ederek bir sistemin g\u00fcvenlik a\u00e7\u0131klar\u0131n\u0131 analiz etme.</li> </ol>","tags":["cen429-hafta-11","g\u00fcvenlik-sertifikalar\u0131","penetrasyon-testi","g\u00fcvenlik"]},{"location":"tr/week-11/cen429-week-11/#5-penetrasyon-testi-yontemleri","title":"5. Penetrasyon Testi Y\u00f6ntemleri","text":"<p>Teorik A\u00e7\u0131klama: Penetrasyon testi y\u00f6ntemleri, test edilecek sistemin t\u00fcr\u00fcne ve sald\u0131r\u0131 hedeflerine g\u00f6re de\u011fi\u015fiklik g\u00f6sterir. Baz\u0131 yayg\u0131n test y\u00f6ntemleri \u015funlard\u0131r:</p> <ul> <li>Beyaz Kutu (Whitebox) Testi: Test eden ki\u015fi, sistemin i\u00e7 yap\u0131s\u0131n\u0131 ve kaynak kodunu bilir.</li> <li>Kara Kutu (Blackbox) Testi: Test eden ki\u015fi, sistem hakk\u0131nda hi\u00e7bir bilgiye sahip de\u011fildir. Sald\u0131r\u0131lar d\u0131\u015far\u0131dan ger\u00e7ekle\u015ftirilir.</li> <li>Gri Kutu (Graybox) Testi: Test eden ki\u015fi, sistemin baz\u0131 b\u00f6l\u00fcmleri hakk\u0131nda bilgi sahibidir. \u00d6rne\u011fin, uygulama yap\u0131s\u0131na veya kullan\u0131c\u0131 rollerine dair bilgiye sahiptir.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Beyaz kutu ve kara kutu testi aras\u0131ndaki farklar\u0131 analiz etme.</li> <li>Bir sistem \u00fczerinde gri kutu testi ger\u00e7ekle\u015ftirerek sonu\u00e7lar\u0131 raporlama.</li> </ol>","tags":["cen429-hafta-11","g\u00fcvenlik-sertifikalar\u0131","penetrasyon-testi","g\u00fcvenlik"]},{"location":"tr/week-11/cen429-week-11/#6-penetrasyon-testi-araclar","title":"6. Penetrasyon Testi Ara\u00e7lar\u0131","text":"<p>Teorik A\u00e7\u0131klama: Penetrasyon testleri s\u0131ras\u0131nda \u00e7e\u015fitli ara\u00e7lar kullan\u0131larak sistemin zay\u0131f noktalar\u0131 analiz edilir. Bu ara\u00e7lar, testin kapsam\u0131na ve hedeflerine g\u00f6re se\u00e7ilir.</p> <ul> <li>Nessus: Zay\u0131f nokta taramas\u0131 i\u00e7in kullan\u0131lan pop\u00fcler bir ara\u00e7t\u0131r.</li> <li>Metasploit: G\u00fcvenlik a\u00e7\u0131klar\u0131n\u0131n istismar edilmesi ve zay\u0131fl\u0131klar\u0131n test edilmesi i\u00e7in kullan\u0131lan bir \u00e7er\u00e7eve.</li> <li>Wireshark: A\u011f trafi\u011fini izlemek ve analiz etmek i\u00e7in kullan\u0131l\u0131r.</li> <li>Burp Suite: Web uygulamalar\u0131nda g\u00fcvenlik testi yapmak i\u00e7in kullan\u0131lan bir ara\u00e7t\u0131r.</li> <li>OWASP ZAP: Web uygulamalar\u0131nda g\u00fcvenlik a\u00e7\u0131klar\u0131n\u0131 tespit etmek i\u00e7in kullan\u0131lan a\u00e7\u0131k kaynak bir ara\u00e7.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Nessus kullanarak bir sistemin g\u00fcvenlik a\u00e7\u0131klar\u0131n\u0131 tarama.</li> <li>Metasploit kullanarak bir g\u00fcvenlik a\u00e7\u0131\u011f\u0131ndan yararlanma ve sonu\u00e7lar\u0131n\u0131 analiz etme.</li> </ol>","tags":["cen429-hafta-11","g\u00fcvenlik-sertifikalar\u0131","penetrasyon-testi","g\u00fcvenlik"]},{"location":"tr/week-11/cen429-week-11/#7-penetrasyon-testi-ve-sertifikasyon-iliskisi","title":"7. Penetrasyon Testi ve Sertifikasyon \u0130li\u015fkisi","text":"<p>Teorik A\u00e7\u0131klama: Penetrasyon testi sonu\u00e7lar\u0131, bir sistemin g\u00fcvenlik sertifikasyonu s\u00fcrecinde \u00f6nemli bir rol oynar. Sertifikasyon sa\u011flay\u0131c\u0131lar\u0131, bir sistemin g\u00fcvenli\u011fini do\u011frulamak i\u00e7in genellikle penetrasyon testi sonu\u00e7lar\u0131n\u0131 g\u00f6z \u00f6n\u00fcnde bulundurur.</p> <ul> <li>Nas\u0131l \u0130li\u015fkilidir?</li> <li>PenTest sonu\u00e7lar\u0131, sertifikasyon s\u00fcrecine eklenir ve g\u00fcvenlik seviyesi kan\u0131tlan\u0131r.</li> <li>G\u00fcvenlik sertifikas\u0131 almak i\u00e7in belirli testlerin ba\u015far\u0131yla ge\u00e7ilmesi gerekir.</li> <li>Penetrasyon testleri, sertifika uyumlulu\u011funu sa\u011flamak i\u00e7in d\u00fczenli olarak yap\u0131l\u0131r.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Penetrasyon testi sonu\u00e7lar\u0131n\u0131 sertifikasyon s\u00fcrecine nas\u0131l entegre edebilece\u011fimizi analiz etme.</li> <li>Sertifikasyon gereksinimlerine uygun bir g\u00fcvenlik testi plan\u0131 haz\u0131rlama.</li> </ol>","tags":["cen429-hafta-11","g\u00fcvenlik-sertifikalar\u0131","penetrasyon-testi","g\u00fcvenlik"]},{"location":"tr/week-11/cen429-week-11/#sonuc","title":"Sonu\u00e7","text":"<p>Bu hafta, g\u00fcvenlik sertifikasyonlar\u0131n\u0131n ve penetrasyon testlerinin sistem g\u00fcvenli\u011fi \u00fczerindeki etkilerini inceledik. G\u00fcvenlik sertifikalar\u0131, uluslararas\u0131 standartlara uyumlulu\u011fu g\u00f6sterirken, penetrasyon testleri bir sistemin zay\u0131f noktalar\u0131n\u0131 ortaya \u00e7\u0131kararak g\u00fcvenli\u011fini art\u0131r\u0131r. Bu iki s\u00fcre\u00e7, yaz\u0131l\u0131m ve donan\u0131m \u00fcr\u00fcnlerinin g\u00fcvenlik seviyesini art\u0131rmak i\u00e7in birlikte \u00e7al\u0131\u015f\u0131r.</p> \\[ 11.Hafta-Sonu \\]","tags":["cen429-hafta-11","g\u00fcvenlik-sertifikalar\u0131","penetrasyon-testi","g\u00fcvenlik"]},{"location":"tr/week-12/cen429-week-12/","title":"CEN429 G\u00fcvenli Programlama Hafta-12","text":"","tags":["cen429-hafta-12","g\u00fcvenlik-gereksinimleri","standartlar","g\u00fcvenlik"]},{"location":"tr/week-12/cen429-week-12/#cen429-guvenli-programlama","title":"CEN429 G\u00fcvenli Programlama","text":"","tags":["cen429-hafta-12","g\u00fcvenlik-gereksinimleri","standartlar","g\u00fcvenlik"]},{"location":"tr/week-12/cen429-week-12/#hafta-12","title":"Hafta-12","text":"","tags":["cen429-hafta-12","g\u00fcvenlik-gereksinimleri","standartlar","g\u00fcvenlik"]},{"location":"tr/week-12/cen429-week-12/#guvenlik-gereksinimleri-ve-standartlar","title":"G\u00fcvenlik Gereksinimleri ve Standartlar","text":"<p>\u0130ndir</p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-hafta-12","g\u00fcvenlik-gereksinimleri","standartlar","g\u00fcvenlik"]},{"location":"tr/week-12/cen429-week-12/#outline","title":"Outline","text":"<ul> <li>G\u00fcvenlik Gereksinimlerinin \u00d6nemi</li> <li>Uluslararas\u0131 G\u00fcvenlik Standartlar\u0131</li> <li>Yayg\u0131n G\u00fcvenlik Sertifikalar\u0131</li> </ul>","tags":["cen429-hafta-12","g\u00fcvenlik-gereksinimleri","standartlar","g\u00fcvenlik"]},{"location":"tr/week-12/cen429-week-12/#hafta-12-guvenlik-gereksinimleri-ve-standartlar","title":"Hafta-12: G\u00fcvenlik Gereksinimleri ve Standartlar","text":"<p>Bu hafta, g\u00fcvenlik gereksinimlerinin nas\u0131l tan\u0131mland\u0131\u011f\u0131n\u0131, uluslararas\u0131 g\u00fcvenlik standartlar\u0131n\u0131n nas\u0131l olu\u015fturuldu\u011funu ve yayg\u0131n kullan\u0131lan g\u00fcvenlik sertifikalar\u0131 ile uyumlu olman\u0131n neden \u00f6nemli oldu\u011funu \u00f6\u011frenece\u011fiz. G\u00fcvenlik gereksinimleri, bir sistemin sald\u0131r\u0131lara kar\u015f\u0131 ne kadar dayan\u0131kl\u0131 oldu\u011funu belirlemek i\u00e7in tasarlanm\u0131\u015ft\u0131r. Bu standartlar, bir\u00e7ok sekt\u00f6rde g\u00fcvenli\u011fi sa\u011flamak i\u00e7in kullan\u0131l\u0131r.</p>","tags":["cen429-hafta-12","g\u00fcvenlik-gereksinimleri","standartlar","g\u00fcvenlik"]},{"location":"tr/week-12/cen429-week-12/#1-guvenlik-gereksinimlerinin-onemi","title":"1. G\u00fcvenlik Gereksinimlerinin \u00d6nemi","text":"<p>Teorik A\u00e7\u0131klama: Bir sistemin g\u00fcvenli olabilmesi i\u00e7in, belirli g\u00fcvenlik gereksinimlerini kar\u015f\u0131lamas\u0131 gereklidir. Bu gereksinimler, sistemin hangi tehditlere kar\u015f\u0131 korunmas\u0131 gerekti\u011fini ve hangi g\u00fcvenlik \u00f6nlemlerinin al\u0131naca\u011f\u0131n\u0131 belirler.</p> <ul> <li>G\u00fcvenlik Gereksinimlerinin Ba\u015fl\u0131ca Kategorileri:</li> <li>Gizlilik (Confidentiality): Yetkisiz ki\u015filerin bilgilere eri\u015fiminin engellenmesi.</li> <li>B\u00fct\u00fcnl\u00fck (Integrity): Verilerin yetkisiz ki\u015filer taraf\u0131ndan de\u011fi\u015ftirilmesinin engellenmesi.</li> <li>Kimlik Do\u011frulama (Authentication): Sisteme eri\u015fen ki\u015filerin kimli\u011finin do\u011frulanmas\u0131.</li> <li>Yetkilendirme (Authorization): Sadece belirli ki\u015filerin belirli kaynaklara eri\u015febilmesi.</li> <li>Kay\u0131t Tutma (Auditing): Olaylar\u0131n kaydedilmesi ve izlenebilmesi.</li> <li>S\u00fcreklilik (Availability): Sistemin kesintisiz \u00e7al\u0131\u015fmas\u0131n\u0131 sa\u011flama.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Bir uygulama i\u00e7in g\u00fcvenlik gereksinimlerini belirleme.</li> <li>Veritaban\u0131 g\u00fcvenli\u011finin nas\u0131l sa\u011flanabilece\u011fini analiz etme.</li> </ol>","tags":["cen429-hafta-12","g\u00fcvenlik-gereksinimleri","standartlar","g\u00fcvenlik"]},{"location":"tr/week-12/cen429-week-12/#2-etsi-european-telecommunications-standards-institute","title":"2. ETSI (European Telecommunications Standards Institute)","text":"<p>Teorik A\u00e7\u0131klama: ETSI, Avrupa Telekom\u00fcnikasyon Standartlar\u0131 Enstit\u00fcs\u00fc taraf\u0131ndan belirlenen standartlar, \u00f6zellikle a\u011f g\u00fcvenli\u011fi, mobil ileti\u015fim ve IoT cihazlar\u0131 gibi alanlarda kullan\u0131l\u0131r.</p> <ul> <li>ETSI\u2019nin G\u00f6revleri:</li> <li>Telekom\u00fcnikasyon teknolojilerinde uluslararas\u0131 standartlar geli\u015ftirmek.</li> <li>Mobil a\u011flar i\u00e7in g\u00fcvenlik \u00e7\u00f6z\u00fcmleri sa\u011flamak.</li> <li>5G g\u00fcvenlik standartlar\u0131n\u0131 olu\u015fturmak.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>ETSI standartlar\u0131na g\u00f6re bir IoT cihaz\u0131n\u0131n g\u00fcvenli\u011fini inceleme.</li> <li>ETSI taraf\u0131ndan belirlenen g\u00fcvenlik gereksinimlerine g\u00f6re bir a\u011f yap\u0131land\u0131rmas\u0131 olu\u015fturma.</li> </ol>","tags":["cen429-hafta-12","g\u00fcvenlik-gereksinimleri","standartlar","g\u00fcvenlik"]},{"location":"tr/week-12/cen429-week-12/#3-gsma-gsm-association","title":"3. GSMA (GSM Association)","text":"<p>Teorik A\u00e7\u0131klama: GSMA, mobil cihazlar ve a\u011flar i\u00e7in g\u00fcvenlik standartlar\u0131n\u0131 belirler. GSMA, \u00f6zellikle SIM kart g\u00fcvenli\u011fi, a\u011f g\u00fcvenli\u011fi ve mobil operat\u00f6rler i\u00e7in protokoller sa\u011flar.</p> <ul> <li>GSMA\u2019n\u0131n Rol\u00fc:</li> <li>Mobil a\u011flarda kullan\u0131lan protokoller i\u00e7in g\u00fcvenlik standartlar\u0131 olu\u015fturmak.</li> <li>SIM kart ve eSIM g\u00fcvenlik standartlar\u0131n\u0131 y\u00f6netmek.</li> <li>Mobil operat\u00f6rler aras\u0131nda g\u00fcvenli veri al\u0131\u015fveri\u015fini sa\u011flamak.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>GSMA standartlar\u0131na g\u00f6re bir mobil cihaz\u0131n g\u00fcvenlik gereksinimlerini belirleme.</li> <li>GSMA taraf\u0131ndan \u00f6nerilen g\u00fcvenlik protokollerini mobil uygulama geli\u015ftirme s\u00fcre\u00e7lerine entegre etme.</li> </ol>","tags":["cen429-hafta-12","g\u00fcvenlik-gereksinimleri","standartlar","g\u00fcvenlik"]},{"location":"tr/week-12/cen429-week-12/#4-emv-europay-mastercard-visa","title":"4. EMV (Europay, MasterCard, Visa)","text":"<p>Teorik A\u00e7\u0131klama: EMV, \u00f6deme kart\u0131 g\u00fcvenli\u011fini sa\u011flamak amac\u0131yla olu\u015fturulmu\u015f bir standartt\u0131r. \u00d6zellikle kredi kartlar\u0131 ve POS cihazlar\u0131n\u0131n g\u00fcvenli\u011fini art\u0131rmak i\u00e7in kullan\u0131l\u0131r.</p> <ul> <li>EMV Standartlar\u0131:</li> <li>MasterCard: Kart g\u00fcvenli\u011fi ve \u00f6deme sistemlerinin korunmas\u0131.</li> <li>Visa: Kart sahiplerinin ve POS cihazlar\u0131n\u0131n g\u00fcvenli\u011fini sa\u011flayan protokoller.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>EMV standartlar\u0131na uygun bir \u00f6deme sisteminin g\u00fcvenlik gereksinimlerini olu\u015fturma.</li> <li>MasterCard ve Visa taraf\u0131ndan sa\u011flanan g\u00fcvenlik protokollerini bir POS cihaz\u0131na entegre etme.</li> </ol>","tags":["cen429-hafta-12","g\u00fcvenlik-gereksinimleri","standartlar","g\u00fcvenlik"]},{"location":"tr/week-12/cen429-week-12/#5-eal-evaluation-assurance-level","title":"5. EAL (Evaluation Assurance Level)","text":"<p>Teorik A\u00e7\u0131klama: EAL (De\u011ferlendirme G\u00fcvencesi Seviyesi), bir \u00fcr\u00fcn\u00fcn g\u00fcvenlik gereksinimlerini kar\u015f\u0131lama d\u00fczeyini g\u00f6sterir. EAL seviyeleri, sistemin g\u00fcvenli\u011fini ne \u00f6l\u00e7\u00fcde test etti\u011fimizi belirler.</p> <ul> <li>EAL Seviyeleri:</li> <li>EAL1: Fonksiyonel olarak test edilmi\u015f.</li> <li>EAL2: Yap\u0131sal olarak test edilmi\u015f.</li> <li>EAL3: Metodolojik olarak test edilmi\u015f ve denetlenmi\u015f.</li> <li>EAL4: Tasar\u0131m baz\u0131nda g\u00f6zden ge\u00e7irilmi\u015f, metodolojik olarak test edilmi\u015f.</li> <li>EAL5 ve \u00fczeri: Y\u00fcksek g\u00fcvenlik gereksinimleri sa\u011flayan sistemler.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>EAL seviyelerine g\u00f6re bir sistemin g\u00fcvenlik derecesini belirleme.</li> <li>EAL4 seviyesinde bir sistem i\u00e7in test senaryolar\u0131 geli\u015ftirme.</li> </ol>","tags":["cen429-hafta-12","g\u00fcvenlik-gereksinimleri","standartlar","g\u00fcvenlik"]},{"location":"tr/week-12/cen429-week-12/#6-common-criteria-ortak-kriterler","title":"6. Common Criteria (Ortak Kriterler)","text":"<p>Teorik A\u00e7\u0131klama: Common Criteria (Ortak Kriterler), uluslararas\u0131 bir g\u00fcvenlik sertifikasyon standard\u0131d\u0131r. Bu standart, \u00fcr\u00fcnlerin g\u00fcvenlik seviyesini de\u011ferlendirmek i\u00e7in kullan\u0131l\u0131r ve d\u00fcnya \u00e7ap\u0131nda kabul g\u00f6rm\u00fc\u015ft\u00fcr.</p> <ul> <li>Common Criteria\u2019nin Avantajlar\u0131:</li> <li>\u00dcr\u00fcn g\u00fcvenli\u011finin k\u00fcresel \u00e7apta onaylanmas\u0131n\u0131 sa\u011flar.</li> <li>G\u00fcvenlik \u00f6zelliklerinin do\u011frulanmas\u0131 i\u00e7in ortak bir dil sunar.</li> <li>EAL sertifikasyon s\u00fcre\u00e7lerine uyumludur.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Common Criteria kapsam\u0131nda bir g\u00fcvenlik sertifikasyonu s\u00fcreci ba\u015flatma.</li> <li>Common Criteria uyumlu bir yaz\u0131l\u0131m geli\u015ftirme plan\u0131 haz\u0131rlama.</li> </ol>","tags":["cen429-hafta-12","g\u00fcvenlik-gereksinimleri","standartlar","g\u00fcvenlik"]},{"location":"tr/week-12/cen429-week-12/#7-fips-federal-information-processing-standards","title":"7. FIPS (Federal Information Processing Standards)","text":"<p>Teorik A\u00e7\u0131klama: FIPS, Amerika Birle\u015fik Devletleri h\u00fck\u00fcmeti taraf\u0131ndan kullan\u0131lan bilgi i\u015flem standartlar\u0131n\u0131 tan\u0131mlar. FIPS, \u00f6zellikle kriptografik mod\u00fcllerin g\u00fcvenli\u011fi i\u00e7in kullan\u0131lan bir standartt\u0131r.</p> <ul> <li>FIPS\u2019in \u00d6nemi:</li> <li>ABD h\u00fck\u00fcmetine ait sistemlerde kullan\u0131lan g\u00fcvenlik protokollerini tan\u0131mlar.</li> <li>Kriptografik algoritmalar ve mod\u00fcllerin sertifikaland\u0131r\u0131lmas\u0131n\u0131 sa\u011flar.</li> <li>Hassas bilgilerin g\u00fcvenli\u011fini sa\u011flamak i\u00e7in geli\u015ftirilmi\u015f g\u00fcvenlik standartlar\u0131 sunar.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>FIPS standard\u0131na uygun bir kriptografik mod\u00fcl geli\u015ftirme.</li> <li>FIPS sertifikal\u0131 g\u00fcvenlik algoritmalar\u0131n\u0131 bir uygulamaya entegre etme.</li> </ol>","tags":["cen429-hafta-12","g\u00fcvenlik-gereksinimleri","standartlar","g\u00fcvenlik"]},{"location":"tr/week-12/cen429-week-12/#sonuc","title":"Sonu\u00e7","text":"<p>Bu hafta, ETSI, GSMA, EMV, EAL, Common Criteria ve FIPS gibi g\u00fcvenlik gereksinimleri ve standartlar\u0131n\u0131 inceledik. Bu standartlar, uluslararas\u0131 d\u00fczeyde kabul g\u00f6rm\u00fc\u015f g\u00fcvenlik protokollerini tan\u0131mlayarak sistemlerin ve \u00fcr\u00fcnlerin g\u00fcvenli\u011fini sa\u011flamaya yard\u0131mc\u0131 olur. G\u00fcvenlik sertifikalar\u0131, \u00fcr\u00fcnlerin ve sistemlerin g\u00fcvenlik a\u00e7\u0131s\u0131ndan de\u011ferlendirildi\u011fini ve onayland\u0131\u011f\u0131n\u0131 g\u00f6sterir.</p> \\[ 12.Hafta-Sonu \\]","tags":["cen429-hafta-12","g\u00fcvenlik-gereksinimleri","standartlar","g\u00fcvenlik"]},{"location":"tr/week-13/cen429-week-13/","title":"CEN429 G\u00fcvenli Programlama Hafta-13","text":"","tags":["cen429-hafta-13","tigress","\u00e7e\u015fitlilik-teknikleri","g\u00fcvenlik"]},{"location":"tr/week-13/cen429-week-13/#cen429-guvenli-programlama","title":"CEN429 G\u00fcvenli Programlama","text":"","tags":["cen429-hafta-13","tigress","\u00e7e\u015fitlilik-teknikleri","g\u00fcvenlik"]},{"location":"tr/week-13/cen429-week-13/#hafta-13","title":"Hafta-13","text":"","tags":["cen429-hafta-13","tigress","\u00e7e\u015fitlilik-teknikleri","g\u00fcvenlik"]},{"location":"tr/week-13/cen429-week-13/#tigress-ve-cesitlilik-teknikleri","title":"Tigress ve \u00c7e\u015fitlilik Teknikleri","text":"<p>\u0130ndir</p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-hafta-13","tigress","\u00e7e\u015fitlilik-teknikleri","g\u00fcvenlik"]},{"location":"tr/week-13/cen429-week-13/#outline","title":"Outline","text":"<ul> <li>Tigress ve \u00c7e\u015fitlilik Teknikleri</li> <li>Obfuscation Y\u00f6ntemleri</li> <li>Sald\u0131r\u0131lara Kar\u015f\u0131 Savunma</li> </ul>","tags":["cen429-hafta-13","tigress","\u00e7e\u015fitlilik-teknikleri","g\u00fcvenlik"]},{"location":"tr/week-13/cen429-week-13/#hafta-13-tigress-ve-cesitlilik-teknikleri","title":"Hafta-13: Tigress ve \u00c7e\u015fitlilik Teknikleri","text":"<p>Bu hafta, kodun analiz edilmesini zorla\u015ft\u0131ran ve program\u0131 sald\u0131r\u0131lara kar\u015f\u0131 daha diren\u00e7li hale getiren \u00e7e\u015fitlilik (diversification) tekniklerini ve Tigress gibi obfuscation ara\u00e7lar\u0131n\u0131 inceleyece\u011fiz. Bu teknikler, program\u0131n \u00e7al\u0131\u015ft\u0131\u011f\u0131 her seferinde farkl\u0131la\u015fmas\u0131n\u0131 sa\u011flar, b\u00f6ylece sald\u0131rganlar\u0131n ayn\u0131 y\u00f6ntemlerle program\u0131 analiz etmelerini zorla\u015ft\u0131r\u0131r.</p>","tags":["cen429-hafta-13","tigress","\u00e7e\u015fitlilik-teknikleri","g\u00fcvenlik"]},{"location":"tr/week-13/cen429-week-13/#1-tigress-cesitlilik-diversity","title":"1. Tigress \u00c7e\u015fitlilik (Diversity)","text":"<p>Teorik A\u00e7\u0131klama: Tigress, bir program\u0131 farkl\u0131 \u015fekillerde d\u00f6n\u00fc\u015ft\u00fcrerek, sald\u0131r\u0131lara kar\u015f\u0131 diren\u00e7li hale getiren g\u00fc\u00e7l\u00fc bir obfuscation arac\u0131d\u0131r. Bir program\u0131n her \u00e7\u0131kt\u0131s\u0131 benzersiz bir yorumlay\u0131c\u0131 (interpreter) olu\u015fturur. Bu, program\u0131n davran\u0131\u015f\u0131n\u0131 rastgelele\u015ftirir ve analiz edilmesini zorla\u015ft\u0131r\u0131r.</p> <ul> <li>Tigress\u2019te Kullan\u0131lan Y\u00f6ntemler:</li> <li>Instruction Dispatch T\u00fcrleri:<ul> <li>Switch, direkt, endirekt, \u00e7a\u011fr\u0131 (call), if-else, lineer, binary, interpolasyon.</li> </ul> </li> <li>Operand T\u00fcrleri:<ul> <li>Y\u0131\u011f\u0131n (stack), registerlar.</li> </ul> </li> <li>Rastgelele\u015ftirilen Operat\u00f6rler:<ul> <li>Farkl\u0131 operandlar ve operator kombinasyonlar\u0131 kullanarak kodun karma\u015f\u0131kla\u015ft\u0131r\u0131lmas\u0131.</li> </ul> </li> <li>\u00c7e\u015fitli D\u00f6n\u00fc\u015f\u00fcmler:<ul> <li>Code Flattening: Program\u0131n ak\u0131\u015f kontrol\u00fcn\u00fcn d\u00fczle\u015ftirilmesi.</li> <li>Merge/Split Fonksiyonlar: Birle\u015ftirilen ya da b\u00f6l\u00fcnen fonksiyonlar.</li> <li>Opaque Predicates: Kodda gizli ve de\u011fi\u015ftirilemeyen ko\u015ful ifadeleri ekleme.</li> </ul> </li> </ul> <p>Uygulama \u00d6rne\u011fi: </p> <pre><code>tigress --Transform=Virtualize --Functions=fib --VirtualizeDispatch=switch --out=v1.c test1.c\ngcc -o v1 v1.c\n</code></pre> <ol> <li>Kodda \u00c7e\u015fitlilik Sa\u011flama Teorik A\u00e7\u0131klama: \u00c7e\u015fitlilik, kodun analizini zorla\u015ft\u0131rmak amac\u0131yla farkl\u0131 y\u00f6ntemlerle rastgelele\u015ftirilmesini i\u00e7erir. Bu y\u00f6ntemler, bir sald\u0131rgan\u0131n program\u0131 tersine m\u00fchendislikle \u00e7\u00f6zmesini zorla\u015ft\u0131r\u0131r. Tigress ile bir program her \u00e7al\u0131\u015ft\u0131r\u0131ld\u0131\u011f\u0131nda benzersiz bir sanal makine olu\u015fturulabilir.</li> </ol> <ol> <li>Sald\u0131r\u0131lar ve Kar\u015f\u0131 Sald\u0131r\u0131lar Teorik A\u00e7\u0131klama: Bir sald\u0131rgan, program\u0131n sanal talimat setini \u00e7\u00f6zerek kodun nas\u0131l \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131 anlamaya \u00e7al\u0131\u015fabilir. Bunun i\u00e7in \u00e7e\u015fitli sald\u0131r\u0131 y\u00f6ntemleri geli\u015ftirilmi\u015ftir, ancak Tigress bu sald\u0131r\u0131lara kar\u015f\u0131 baz\u0131 kar\u015f\u0131 sald\u0131r\u0131 teknikleri sunar.</li> </ol> <ol> <li>Algoritmik Y\u00f6ntemler ve \u00c7e\u015fitlilik Sa\u011flama Teorik A\u00e7\u0131klama: \u00c7e\u015fitlilik sa\u011flama algoritmalar\u0131, program\u0131n \u00e7al\u0131\u015fmas\u0131n\u0131 karma\u015f\u0131kla\u015ft\u0131rmak i\u00e7in \u00e7e\u015fitli seviyelerde uygulanabilir. Bu y\u00f6ntemler, bir sald\u0131rgan\u0131n program\u0131 \u00e7\u00f6zme olas\u0131l\u0131\u011f\u0131n\u0131 azaltmak i\u00e7in kullan\u0131l\u0131r.</li> </ol> <p>Sonu\u00e7 Bu hafta, \u00e7e\u015fitlilik sa\u011flama ve kendini de\u011fi\u015ftiren kod gibi ileri d\u00fczey kod obfuscation tekniklerini \u00f6\u011frendik. Bu teknikler, programlar\u0131n sald\u0131r\u0131lara kar\u015f\u0131 daha diren\u00e7li hale getirilmesini sa\u011flar ve sald\u0131rganlar\u0131n kodu \u00e7\u00f6zmesini zorla\u015ft\u0131r\u0131r. Tigress gibi ara\u00e7lar, kodu rastgelele\u015ftirerek her seferinde farkl\u0131 bir yap\u0131 olu\u015fturur, bu da kodun analizi ve tersine m\u00fchendislik yap\u0131lmas\u0131n\u0131 daha zor hale getirir.</p> \\[ 13.Hafta-Sonu \\]","tags":["cen429-hafta-13","tigress","\u00e7e\u015fitlilik-teknikleri","g\u00fcvenlik"]},{"location":"tr/week-14-quiz/cen429-week-14/","title":"CEN429 G\u00fcvenli Programlama Hafta-14","text":"","tags":["cen429-hafta-14","quiz"]},{"location":"tr/week-14-quiz/cen429-week-14/#cen429-guvenli-programlama","title":"CEN429 G\u00fcvenli Programlama","text":"","tags":["cen429-hafta-14","quiz"]},{"location":"tr/week-14-quiz/cen429-week-14/#hafta-14","title":"Hafta-14","text":"","tags":["cen429-hafta-14","quiz"]},{"location":"tr/week-14-quiz/cen429-week-14/#quiz-2","title":"Quiz 2","text":"<p>\u0130ndir</p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-hafta-14","quiz"]},{"location":"tr/week-14-quiz/cen429-week-14/#icerik","title":"\u0130\u00e7erik","text":"<ul> <li>Quiz 2</li> </ul>","tags":["cen429-hafta-14","quiz"]},{"location":"tr/week-15-project/cen429-week-15/","title":"CEN429 G\u00fcvenli Programlama Hafta-15","text":"","tags":["cen429-hafta-15","proje-sunum","proje-teslim","final-rapor"]},{"location":"tr/week-15-project/cen429-week-15/#cen429-guvenli-programlama","title":"CEN429 G\u00fcvenli Programlama","text":"","tags":["cen429-hafta-15","proje-sunum","proje-teslim","final-rapor"]},{"location":"tr/week-15-project/cen429-week-15/#hafta-15","title":"Hafta-15","text":"","tags":["cen429-hafta-15","proje-sunum","proje-teslim","final-rapor"]},{"location":"tr/week-15-project/cen429-week-15/#proje-degerlendirilmesi-ve-sunumu","title":"Proje De\u011ferlendirilmesi ve Sunumu","text":"<p>\u0130ndir</p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-hafta-15","proje-sunum","proje-teslim","final-rapor"]},{"location":"tr/week-15-project/cen429-week-15/#icerik","title":"\u0130\u00e7erik","text":"<ul> <li>Proje De\u011ferlendirilmesi ve Sunumu</li> </ul>","tags":["cen429-hafta-15","proje-sunum","proje-teslim","final-rapor"]},{"location":"tr/week-2/cen429-week-2/","title":"CEN429 G\u00fcvenli Programlama Hafta-2","text":"","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#cen429-guvenli-programlama","title":"CEN429 G\u00fcvenli Programlama","text":"","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#hafta-2","title":"Hafta-2","text":"","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#gelistirme-ortam-guvenligi-ve-yazlm-gelistirme-surecleri","title":"Geli\u015ftirme Ortam\u0131 G\u00fcvenli\u011fi ve Yaz\u0131l\u0131m Geli\u015ftirme S\u00fcre\u00e7leri","text":"<p>\u0130ndir </p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#outline","title":"Outline","text":"<ul> <li> <p>Geli\u015ftirme Ortam\u0131 G\u00fcvenli\u011fi ve Yaz\u0131l\u0131m Geli\u015ftirme S\u00fcre\u00e7leri</p> </li> <li> <p>Yaz\u0131l\u0131m Geli\u015ftirme S\u00fcreci</p> </li> <li> <p>Yaz\u0131l\u0131m Geli\u015ftirme Ak\u0131\u015f\u0131</p> </li> <li> <p>Konfig\u00fcrasyon Sabitleme</p> </li> <li> <p>De\u011fi\u015fiklik Ba\u015flatma ve S\u0131n\u0131fland\u0131rma</p> </li> <li> <p>De\u011fi\u015fikli\u011fi Onaylama ve Yay\u0131nlama</p> </li> <li> <p>Yaz\u0131l\u0131m Geli\u015ftirme Ortamlar\u0131</p> </li> <li> <p>Geli\u015ftirme Ortam\u0131 G\u00fcvenli\u011fi</p> </li> <li> <p>S\u00fcr\u00fcm Kontrol Sistemleri</p> </li> <li> <p>Kaynak Kod Sunucu G\u00fcvenli\u011fi</p> </li> <li> <p>Sunucu Odas\u0131 ve Geli\u015ftirme Bilgisayarlar\u0131 G\u00fcvenli\u011fi</p> </li> </ul>","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#yazlm-gelistirme-sureci-ve-degisiklik-yonetimi-software-development-flow-and-change-management","title":"Yaz\u0131l\u0131m Geli\u015ftirme S\u00fcreci ve De\u011fi\u015fiklik Y\u00f6netimi (Software Development Flow and Change Management)","text":"","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#1-yazlm-gelistirme-aks-flow","title":"1. Yaz\u0131l\u0131m Geli\u015ftirme Ak\u0131\u015f\u0131 (Flow)","text":"","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#teorik-acklama","title":"Teorik A\u00e7\u0131klama:","text":"<p>Yaz\u0131l\u0131m geli\u015ftirme s\u00fcre\u00e7leri, belirli ak\u0131\u015flarla kontrol edilmelidir. De\u011fi\u015fikliklerin do\u011fru \u015fekilde y\u00f6netilmesi, projenin ba\u015far\u0131l\u0131 bir \u015fekilde devam etmesini sa\u011flar. Bu ak\u0131\u015f genellikle s\u00fcr\u00fcm kontrol sistemleri, teknik ekipler ve proje y\u00f6netim s\u00fcre\u00e7lerini i\u00e7erir.</p>","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#uygulama","title":"Uygulama:","text":"<ul> <li>Uygulama: Basit bir yaz\u0131l\u0131m projesi ba\u015flat\u0131n ve de\u011fi\u015fiklik taleplerini (RFC) nas\u0131l y\u00f6netece\u011finizi g\u00f6steren bir s\u00fcre\u00e7 olu\u015fturun. Her ad\u0131mda bir onay mekanizmas\u0131 kurun ve s\u00fcr\u00fcm kontrol sistemi \u00fczerinden projeyi y\u00f6netin.</li> </ul>","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#2-konfigurasyon-sabitleme-baseline-the-configuration","title":"2. Konfig\u00fcrasyon Sabitleme (Baseline the Configuration)","text":"","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#teorik-acklama_1","title":"Teorik A\u00e7\u0131klama:","text":"<p>Konfig\u00fcrasyon sabitleme, bir \u00fcr\u00fcn veya sistemin belirli bir s\u00fcr\u00fcm\u00fcn\u00fc belirleyerek, bu s\u00fcr\u00fcmden itibaren yap\u0131lacak t\u00fcm de\u011fi\u015fikliklerin izlenebilir olmas\u0131n\u0131 sa\u011flar. Bu, geli\u015ftirme ve de\u011fi\u015fiklik y\u00f6netimi s\u00fcre\u00e7lerinin temel ad\u0131mlar\u0131ndan biridir.</p>","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#uygulama_1","title":"Uygulama:","text":"<ul> <li>Uygulama: Bir GIT deposu olu\u015fturun ve ilk yap\u0131land\u0131rma ayarlar\u0131n\u0131 sabitleyin. Bu s\u00fcr\u00fcmdeki t\u00fcm de\u011fi\u015fikliklerin izlenmesini sa\u011flayacak bir yap\u0131 kurun.</li> </ul>","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#3-degisiklik-baslatma-initiate-the-change","title":"3. De\u011fi\u015fiklik Ba\u015flatma (Initiate the Change)","text":"","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#teorik-acklama_2","title":"Teorik A\u00e7\u0131klama:","text":"<p>De\u011fi\u015fiklik talepleri (RFC), projeye eklenecek yeni \u00f6zellikler veya d\u00fczeltilecek hatalar i\u00e7in yap\u0131l\u0131r. Bu s\u00fcre\u00e7, geli\u015ftirme ba\u015flamadan \u00f6nce t\u00fcm gereksinimlerin belirlendi\u011fi ve teknik toplant\u0131larla de\u011ferlendirildi\u011fi bir ad\u0131md\u0131r.</p>","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#uygulama_2","title":"Uygulama:","text":"<ul> <li>Uygulama: Bir de\u011fi\u015fiklik talebi (RFC) olu\u015fturun ve bu talebin proje ekibine nas\u0131l iletildi\u011fini sim\u00fcle edin. Toplant\u0131lar ve teknik incelemeler \u00fczerinden karar verildi\u011fini g\u00f6sterecek bir senaryo olu\u015fturun.</li> </ul>","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#4-degisikligi-snflandrma-classify-the-change","title":"4. De\u011fi\u015fikli\u011fi S\u0131n\u0131fland\u0131rma (Classify the Change)","text":"","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#teorik-acklama_3","title":"Teorik A\u00e7\u0131klama:","text":"<p>De\u011fi\u015fiklik talepleri, maliyet, s\u00fcre ve teknik gereksinimler a\u00e7\u0131s\u0131ndan s\u0131n\u0131fland\u0131r\u0131l\u0131r. E\u011fer finansal veya teknik bir engel yoksa, \u00fcr\u00fcn sahibi (product owner) bu talebin geli\u015ftirilmesi i\u00e7in teknik ekibe onay verir.</p>","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#uygulama_3","title":"Uygulama:","text":"<ul> <li>Uygulama: Bir de\u011fi\u015fiklik talebini inceleyin ve bu talebin nas\u0131l s\u0131n\u0131fland\u0131r\u0131ld\u0131\u011f\u0131n\u0131, hangi ko\u015fullara g\u00f6re onayland\u0131\u011f\u0131n\u0131 g\u00f6sterecek bir s\u00fcreci uygulamal\u0131 olarak y\u00f6netin.</li> </ul>","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#5-degisikligi-onaylama-ve-planlama-approve-and-schedule-the-change","title":"5. De\u011fi\u015fikli\u011fi Onaylama ve Planlama (Approve and Schedule the Change)","text":"","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#teorik-acklama_4","title":"Teorik A\u00e7\u0131klama:","text":"<p>Geli\u015ftirme s\u00fcrecine ba\u015flamadan \u00f6nce, de\u011fi\u015fiklik talebi onaylan\u0131r ve bir proje plan\u0131 olu\u015fturulur. Bu plan, sprintler ve g\u00f6rev da\u011f\u0131l\u0131m\u0131n\u0131 i\u00e7erir.</p>","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#uygulama_4","title":"Uygulama:","text":"<ul> <li>Uygulama: Bir sprint planlama toplant\u0131s\u0131 d\u00fczenleyin ve de\u011fi\u015fiklik talebine uygun olarak g\u00f6revleri belirleyin. Planlama ara\u00e7lar\u0131 (Jira, Trello vb.) kullanarak bu s\u00fcreci organize edin.</li> </ul>","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#6-degisikligi-yaynlama-release-the-change","title":"6. De\u011fi\u015fikli\u011fi Yay\u0131nlama (Release the Change)","text":"","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#teorik-acklama_5","title":"Teorik A\u00e7\u0131klama:","text":"<p>Geli\u015ftirilen de\u011fi\u015fiklik, testler tamamland\u0131ktan sonra \u00fcretim ortam\u0131na g\u00f6nderilir. Bu ad\u0131mda de\u011fi\u015fikli\u011fin ba\u015far\u0131l\u0131 bir \u015fekilde uyguland\u0131\u011f\u0131ndan emin olunur.</p>","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#uygulama_5","title":"Uygulama:","text":"<ul> <li>Uygulama: Geli\u015ftirilen bir de\u011fi\u015fikli\u011fi s\u00fcr\u00fcm kontrol sisteminden \u00e7ekin ve \u00fcretim ortam\u0131na yay\u0131nlay\u0131n. Yay\u0131n s\u00fcrecindeki ad\u0131mlar\u0131 ve test sonu\u00e7lar\u0131n\u0131 kaydedin.</li> </ul>","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#7-degisikligi-dogrulama-ve-inceleme-validate-and-review-the-change","title":"7. De\u011fi\u015fikli\u011fi Do\u011frulama ve \u0130nceleme (Validate and Review the Change)","text":"","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#teorik-acklama_6","title":"Teorik A\u00e7\u0131klama:","text":"<p>De\u011fi\u015fiklik yay\u0131nland\u0131ktan sonra, de\u011fi\u015fikli\u011fin do\u011fru bir \u015fekilde uyguland\u0131\u011f\u0131 ve beklentilere uygun oldu\u011fu do\u011frulan\u0131r. Teknik ve kullan\u0131c\u0131 incelemeleri yap\u0131l\u0131r.</p>","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#uygulama_6","title":"Uygulama:","text":"<ul> <li>Uygulama: Yay\u0131nlanan bir de\u011fi\u015fikli\u011fi test edin ve kullan\u0131c\u0131 geri bildirimlerini toplay\u0131n. De\u011fi\u015fikli\u011fin beklentilere uygun olup olmad\u0131\u011f\u0131n\u0131 kontrol edin.</li> </ul>","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#yazlm-gelistirme-ortamlar-ve-surum-kontrol-sistemleri-software-development-environments-and-source-code-version-control-system","title":"Yaz\u0131l\u0131m Geli\u015ftirme Ortamlar\u0131 ve S\u00fcr\u00fcm Kontrol Sistemleri (Software Development Environments and Source Code Version Control System)","text":"","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#1-yazlm-gelistirme-ortamlar-development-environments","title":"1. Yaz\u0131l\u0131m Geli\u015ftirme Ortamlar\u0131 (Development Environments)","text":"","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#teorik-acklama_7","title":"Teorik A\u00e7\u0131klama:","text":"<p>Yaz\u0131l\u0131m geli\u015ftirme, farkl\u0131 ortamlar aras\u0131nda ger\u00e7ekle\u015ftirilir: geli\u015ftirme, test ve \u00fcretim ortamlar\u0131. Her ortam, farkl\u0131 g\u00fcvenlik \u00f6nlemleri ve konfig\u00fcrasyonlar gerektirir.</p>","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#uygulama_7","title":"Uygulama:","text":"<ul> <li>Uygulama: Geli\u015ftirme ve test ortamlar\u0131n\u0131 kurun. Her ortam i\u00e7in farkl\u0131 g\u00fcvenlik yap\u0131land\u0131rmalar\u0131n\u0131 g\u00f6sterecek bir uygulama geli\u015ftirin.</li> </ul>","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#2-surum-kontrol-sistemleri-version-control-systems","title":"2. S\u00fcr\u00fcm Kontrol Sistemleri (Version Control Systems)","text":"","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#teorik-acklama_8","title":"Teorik A\u00e7\u0131klama:","text":"<p>S\u00fcr\u00fcm kontrol sistemleri (Git, SVN vb.), yaz\u0131l\u0131m geli\u015ftirme s\u00fcre\u00e7lerinin takip edilmesi ve de\u011fi\u015fikliklerin geri al\u0131nabilmesi i\u00e7in kullan\u0131l\u0131r. Her de\u011fi\u015fiklik kaydedilir ve versiyonlar aras\u0131nda ge\u00e7i\u015f yap\u0131labilir.</p>","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#uygulama_8","title":"Uygulama:","text":"<ul> <li>Uygulama: GIT kullanarak bir yaz\u0131l\u0131m geli\u015ftirme s\u00fcrecini y\u00f6netin. Farkl\u0131 dallar (branch) aras\u0131nda ge\u00e7i\u015f yap\u0131n ve bir de\u011fi\u015fikli\u011fi geri al\u0131n.</li> </ul>","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#3-gelistirme-sitesi-ve-kaynak-kod-sunucu-guvenligi-development-site-and-source-code-server-security","title":"3. Geli\u015ftirme Sitesi ve Kaynak Kod Sunucu G\u00fcvenli\u011fi (Development Site and Source Code Server Security)","text":"","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#teorik-acklama_9","title":"Teorik A\u00e7\u0131klama:","text":"<p>Geli\u015ftirme ortam\u0131n\u0131n fiziksel ve dijital g\u00fcvenli\u011fi \u00e7ok \u00f6nemlidir. Kaynak kod sunucular\u0131 ve izleme sistemlerinin korunmas\u0131, yaz\u0131l\u0131m\u0131n b\u00fct\u00fcnl\u00fc\u011f\u00fcn\u00fc sa\u011flar.</p>","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#uygulama_9","title":"Uygulama:","text":"<ul> <li>Uygulama: Bir geli\u015ftirme ortam\u0131nda, kaynak kod sunucusunun nas\u0131l g\u00fcvenlik alt\u0131na al\u0131naca\u011f\u0131n\u0131 g\u00f6sterin. \u015eifreleme ve eri\u015fim kontrol sistemlerini uygulamal\u0131 olarak yap\u0131land\u0131r\u0131n.</li> </ul>","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#4-sunucu-odas-ve-gelistirme-bilgisayarlar-guvenligi-development-office-and-server-room-security","title":"4. Sunucu Odas\u0131 ve Geli\u015ftirme Bilgisayarlar\u0131 G\u00fcvenli\u011fi (Development Office and Server Room Security)","text":"","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#teorik-acklama_10","title":"Teorik A\u00e7\u0131klama:","text":"<p>Sunucu odalar\u0131 ve geli\u015ftirme bilgisayarlar\u0131, yaz\u0131l\u0131m\u0131n g\u00fcvenli\u011fini sa\u011flamak i\u00e7in g\u00fcvenlik \u00f6nlemleriyle korunmal\u0131d\u0131r. Eri\u015fim kontrolleri, \u015fifreleme ve fiziksel g\u00fcvenlik bu s\u00fcre\u00e7lerin bir par\u00e7as\u0131d\u0131r.</p>","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#uygulama_10","title":"Uygulama:","text":"<ul> <li>Uygulama: Bir sunucu odas\u0131n\u0131n eri\u015fim kontrollerini sim\u00fcle edin. Geli\u015ftirme bilgisayarlar\u0131nda g\u00fcvenlik yaz\u0131l\u0131mlar\u0131n\u0131 yap\u0131land\u0131r\u0131n ve olas\u0131 sald\u0131r\u0131lara kar\u015f\u0131 \u00f6nlemler al\u0131n.</li> </ul>","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#haftann-ozeti-ve-gelecek-hafta","title":"Haftan\u0131n \u00d6zeti ve Gelecek Hafta","text":"","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#bu-hafta","title":"Bu Hafta:","text":"<ul> <li>Yaz\u0131l\u0131m Geli\u015ftirme Ak\u0131\u015f\u0131 ve De\u011fi\u015fiklik Y\u00f6netimi</li> <li>Konfig\u00fcrasyon Sabitleme ve De\u011fi\u015fiklik Onaylama</li> <li>Geli\u015ftirme Ortamlar\u0131 ve S\u00fcr\u00fcm Kontrol Sistemleri</li> <li>Fiziksel ve Dijital G\u00fcvenlik</li> </ul>","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-2/cen429-week-2/#gelecek-hafta","title":"Gelecek Hafta:","text":"<ul> <li>Veri G\u00fcvenli\u011fi ve Kriptografi</li> <li>G\u00fcvenli \u0130leti\u015fim ve Anahtar Y\u00f6netimi</li> </ul> \\[ 2.Hafta-Sonu \\]","tags":["cen429-hafta-2","yaz\u0131l\u0131m-geli\u015ftirme","de\u011fi\u015fiklik-y\u00f6netimi","s\u00fcr\u00fcm-kontrol","g\u00fcvenlik","geli\u015ftirme-ortam\u0131"]},{"location":"tr/week-3/cen429-week-3/","title":"CEN429 G\u00fcvenli Programlama Hafta-3","text":"","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#cen429-guvenli-programlama","title":"CEN429 G\u00fcvenli Programlama","text":"","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#hafta-3","title":"Hafta-3","text":"","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#veri-guvenligi-kullanmda-aktarmda-ve-depolamada","title":"Veri G\u00fcvenli\u011fi: Kullan\u0131mda, Aktar\u0131mda ve Depolamada","text":"<p>\u0130ndir </p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#outline","title":"Outline","text":"<ul> <li>Veri G\u00fcvenli\u011fi: Kullan\u0131mda, Aktar\u0131mda ve Depolamada</li> <li>Yaz\u0131l\u0131m Geli\u015ftirme S\u00fcre\u00e7leri</li> <li>Kullan\u0131mda Veri G\u00fcvenli\u011fi</li> <li>Aktar\u0131mda Veri G\u00fcvenli\u011fi</li> <li>Depolamada Veri G\u00fcvenli\u011fi</li> <li>Dinamik ve Statik Varl\u0131klar\u0131n Korunmas\u0131</li> </ul>","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#hafta-3-veri-guvenligi-kullanmda-aktarmda-ve-depolama-halindeki-veri-guvenligi","title":"Hafta-3: Veri G\u00fcvenli\u011fi - Kullan\u0131mda, Aktar\u0131mda ve Depolama Halindeki Veri G\u00fcvenli\u011fi","text":"","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#teorik-konu-baslklar-ve-uygulamalar","title":"Teorik Konu Ba\u015fl\u0131klar\u0131 ve Uygulamalar","text":"","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#kullanmda-veri-guvenligi-data-in-use-security","title":"Kullan\u0131mda Veri G\u00fcvenli\u011fi (Data-In-Use Security)","text":"","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#1-calsma-zaman-uygulama-verisi-guvenligi-runtime-application-data-security","title":"1. \u00c7al\u0131\u015fma Zaman\u0131 Uygulama Verisi G\u00fcvenli\u011fi (Runtime Application Data Security)","text":"","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#teorik-acklama","title":"Teorik A\u00e7\u0131klama:","text":"<p>Kullan\u0131mda veri g\u00fcvenli\u011fi, uygulama \u00e7al\u0131\u015f\u0131rken bellekte tutulan hassas bilgilerin korunmas\u0131 ile ilgilenir. Bu g\u00fcvenlik, \u00f6zellikle bellekte ge\u00e7ici olarak bulunan verilerin k\u00f6t\u00fc ama\u00e7l\u0131 yaz\u0131l\u0131mlar taraf\u0131ndan ele ge\u00e7irilmesini engellemek i\u00e7in kullan\u0131l\u0131r.</p>","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#uygulamalar","title":"Uygulamalar:","text":"<ol> <li>Bellek \u015eifreleme: Bellekteki hassas verilerin \u015fifrelenmesi.</li> <li>K\u00f6t\u00fcye Kullan\u0131m Tespiti: Bellekteki \u015f\u00fcpheli hareketlerin izlenmesi ve m\u00fcdahale edilmesi.</li> <li>Veri Manip\u00fclasyonu Testleri: \u00c7al\u0131\u015fma zaman\u0131ndaki verilerin yanl\u0131\u015fl\u0131kla veya kas\u0131tl\u0131 olarak de\u011fi\u015ftirilip de\u011fi\u015ftirilmedi\u011fini test etme.</li> <li>Dinamik Bellek Y\u00f6netimi: Bellek s\u0131z\u0131nt\u0131lar\u0131n\u0131 engellemek ve veri s\u0131z\u0131nt\u0131lar\u0131n\u0131 minimize etmek.</li> <li>S\u00fcrekli Kimlik Do\u011frulama: Kullan\u0131c\u0131lar\u0131n oturumlar\u0131 s\u00fcresince kimliklerinin tekrar tekrar do\u011frulanmas\u0131.</li> <li>Veri Maskelenmesi: Hassas verilerin yaln\u0131zca yetkili s\u00fcre\u00e7ler taraf\u0131ndan g\u00f6r\u00fclebilir olmas\u0131.</li> <li>Tamperproof Mekanizmalar\u0131: Bellekteki verilerin manip\u00fcle edilip edilmedi\u011fini kontrol eden ve bu verilerin de\u011fi\u015ftirilmesi durumunda sistemin tepki vermesini sa\u011flayan mekanizmalar.</li> <li>G\u00fcvenlik Protokollerinin \u0130zlenmesi: Uygulama \u00e7al\u0131\u015f\u0131rken kullan\u0131lan g\u00fcvenlik protokollerinin anormal davran\u0131\u015flar\u0131n\u0131 izleme.</li> <li>Veri G\u00fcvenlik Duvarlar\u0131: Bellek i\u00e7indeki hassas verilerin yaln\u0131zca yetkili s\u00fcre\u00e7ler taraf\u0131ndan eri\u015filebilece\u011fi g\u00fcvenlik katmanlar\u0131 ekleme.</li> <li>Geli\u015fmi\u015f Kay\u0131t Tutma: Bellekteki veriler \u00fczerinde ger\u00e7ekle\u015ftirilen t\u00fcm i\u015flemlerin kay\u0131t alt\u0131na al\u0131nmas\u0131.</li> </ol>","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#aktarmda-veri-guvenligi-data-in-transit-security","title":"Aktar\u0131mda Veri G\u00fcvenli\u011fi (Data-In-Transit Security)","text":"","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#1-veri-aktarm-srasnda-guvenlik-yontemleri-data-security-methods-during-transportation","title":"1. Veri Aktar\u0131m\u0131 S\u0131ras\u0131nda G\u00fcvenlik Y\u00f6ntemleri (Data Security Methods During Transportation)","text":"","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#teorik-acklama_1","title":"Teorik A\u00e7\u0131klama:","text":"<p>Verilerin a\u011f \u00fczerinden aktar\u0131lmas\u0131 s\u0131ras\u0131nda, bu verilerin gizlili\u011finin ve b\u00fct\u00fcnl\u00fc\u011f\u00fcn\u00fcn korunmas\u0131 gerekir. G\u00fcvenli bir \u015fekilde veri aktar\u0131m\u0131 sa\u011flamak i\u00e7in \u015fifreleme, kimlik do\u011frulama ve b\u00fct\u00fcnl\u00fck kontrolleri uygulan\u0131r.</p>","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#uygulamalar_1","title":"Uygulamalar:","text":"<ol> <li>Oturum Anahtar\u0131 (Session Key): \u0130stemci ve sunucu aras\u0131nda dinamik olarak oturum anahtar\u0131 olu\u015fturma ve bu anahtar ile \u015fifreleme yapma.</li> <li>Cihaz Ba\u011flama (Device Binding): Verilerin belirli bir cihaza ba\u011fl\u0131 olarak iletilmesini sa\u011flayarak, verilerin farkl\u0131 bir cihazda \u00e7\u00f6z\u00fclmesini engelleme.</li> <li>S\u00fcr\u00fcm Ba\u011flama (Version Binding): Yaln\u0131zca belirli s\u00fcr\u00fcmlerin veri iletimine izin vererek, g\u00fcvenlik a\u00e7\u0131klar\u0131 bar\u0131nd\u0131ran eski s\u00fcr\u00fcmlerin veri almas\u0131n\u0131 engelleme.</li> <li>\u015eifrelenmi\u015f Y\u00fck (Confidential Payload): Ta\u015f\u0131nan verinin \u015fifrelenerek sadece yetkili taraflar taraf\u0131ndan okunabilir hale getirilmesi.</li> <li>B\u00fct\u00fcnl\u00fck Kontrol\u00fc (Integrity Control): Veri aktar\u0131m\u0131 s\u0131ras\u0131nda verilerin bozulmadan veya de\u011fi\u015ftirilmeden iletildi\u011fini do\u011frulama.</li> <li>Kimlik Do\u011frulama (Authenticity Control): Veri g\u00f6nderenin ve al\u0131c\u0131n\u0131n kimliklerinin do\u011frulanmas\u0131.</li> <li>G\u00fcvenli \u0130leti\u015fim Kanallar\u0131 (Secure Communication Channels): SSL/TLS protokollerini kullanarak g\u00fcvenli veri aktar\u0131m\u0131 ger\u00e7ekle\u015ftirme.</li> <li>SSL Sertifikalar\u0131: Sunucu do\u011frulamas\u0131nda SSL sertifikalar\u0131 kullanarak veri aktar\u0131m\u0131 s\u0131ras\u0131nda g\u00fcvenli\u011fi art\u0131rma.</li> <li>Veri \u0130zleme (Data Monitoring): Aktar\u0131m s\u0131ras\u0131nda verinin izlenmesi ve anormal durumlar\u0131n tespiti.</li> <li>\u015eifreli \u0130leti\u015fim Protokolleri: HTTPS, SSH gibi \u015fifreli protokoller \u00fczerinden veri ileti\u015fimi yapma.</li> </ol>","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#2-sunucu-iletisimi-server-communication","title":"2. Sunucu \u0130leti\u015fimi (Server Communication)","text":"","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#teorik-acklama_2","title":"Teorik A\u00e7\u0131klama:","text":"<p>Sunucu ile istemci aras\u0131ndaki g\u00fcvenli ileti\u015fim, verilerin g\u00fcvenli bir \u015fekilde sunucuya aktar\u0131lmas\u0131n\u0131 sa\u011flar. Bu s\u00fcre\u00e7te sunucunun kimli\u011fini do\u011frulamak ve iletilen verilerin \u015fifrelenmesi b\u00fcy\u00fck \u00f6nem ta\u015f\u0131r.</p>","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#uygulamalar_2","title":"Uygulamalar:","text":"<ol> <li>Sunucu Kimlik Do\u011frulama Kodu (Server Authentication Code): Sunucunun kimli\u011fini do\u011frulayan \u00f6zel bir kimlik do\u011frulama mekanizmas\u0131 geli\u015ftirme.</li> <li>G\u00fcvenli Sunucu \u0130leti\u015fimi (Secure Server Communication): Sunucu ve istemci aras\u0131nda verilerin SSL/TLS ile \u015fifrelenmesini sa\u011flama.</li> <li>Oturum Anahtar\u0131 \u015eifreleme (Session Key Encryption): Verilerin oturum anahtarlar\u0131 kullan\u0131larak \u015fifrelenmesini sa\u011flama.</li> <li>Sunucu \u00dczerinde Veri \u0130zleme (Data Monitoring): Sunucuya gelen ve giden veri trafi\u011fini izleyip anormallikleri tespit etme.</li> <li>Veri B\u00fct\u00fcnl\u00fc\u011f\u00fc Do\u011frulama: Verilerin sunucuya bozulmadan iletildi\u011fini do\u011frulayan b\u00fct\u00fcnl\u00fck kontrol mekanizmalar\u0131n\u0131 kullanma.</li> <li>Verilerin \u015eifrelenmesi (Data Encryption): Verileri sunucuya g\u00f6ndermeden \u00f6nce istemci taraf\u0131nda \u015fifreleme.</li> <li>Sunucu Yan\u0131tlar\u0131n\u0131 \u0130mzalama (Response Signing): Sunucudan gelen yan\u0131tlar\u0131 dijital imza ile do\u011frulama.</li> <li>Sunucu Yedekleme: Sunucuda tutulan kritik verilerin d\u00fczenli olarak yedeklenmesi ve \u015fifreli olarak saklanmas\u0131.</li> <li>G\u00fcvenli Oturum Kapatma (Secure Session Termination): Oturum sona erdi\u011finde oturum anahtarlar\u0131n\u0131n g\u00fcvenli bir \u015fekilde temizlenmesi.</li> <li>Kimlik Do\u011frulama Loglama: Sunucu taraf\u0131nda t\u00fcm kimlik do\u011frulama i\u015flemlerinin loglanmas\u0131 ve gerekti\u011finde izlenebilmesi.</li> </ol>","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#depolamada-veri-guvenligi-data-at-rest-security","title":"Depolamada Veri G\u00fcvenli\u011fi (Data-At-Rest Security)","text":"","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#1-depolama-halindeki-veriler-icin-guvenlik-yontemleri-data-security-methods-during-stored-state","title":"1. Depolama Halindeki Veriler \u0130\u00e7in G\u00fcvenlik Y\u00f6ntemleri (Data Security Methods During Stored State)","text":"","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#teorik-acklama_3","title":"Teorik A\u00e7\u0131klama:","text":"<p>Veriler sabit disklerde, veri tabanlar\u0131nda veya bulut ortamlar\u0131nda depoland\u0131\u011f\u0131nda, bu verilerin korunmas\u0131 gerekir. \u015eifreleme ve b\u00fct\u00fcnl\u00fck kontrol\u00fc gibi y\u00f6ntemler, depolanan verilerin izinsiz eri\u015fimlere ve sald\u0131r\u0131lara kar\u015f\u0131 korunmas\u0131n\u0131 sa\u011flar.</p>","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#uygulamalar_3","title":"Uygulamalar:","text":"<ol> <li>Whitebox AES: Depolama alan\u0131nda AES algoritmas\u0131n\u0131 whitebox y\u00f6ntemiyle uygulayarak verilerin daha g\u00fcvenli bir \u015fekilde korunmas\u0131n\u0131 sa\u011flama.</li> <li>Whitebox DES: Whitebox DES algoritmas\u0131yla verilerin \u015fifrelenmesi ve g\u00fcvenlik testlerinin yap\u0131lmas\u0131.</li> <li>G\u00fcvenlik Kabuk Matrisi (Security Shell Matrix): Verilerin g\u00fcvenli bir \u015fekilde depolanmas\u0131n\u0131 sa\u011flamak i\u00e7in dosya sisteminde g\u00fcvenlik kabu\u011fu olu\u015fturma.</li> <li>Anahtar Y\u00f6netimi: \u015eifreleme anahtarlar\u0131n\u0131n g\u00fcvenli bir \u015fekilde saklanmas\u0131 ve d\u00fczenli olarak de\u011fi\u015ftirilmesi.</li> <li>\u015eifreli Veritaban\u0131: Veritaban\u0131ndaki hassas verilerin \u015fifrelenmesi ve sadece yetkili kullan\u0131c\u0131lar\u0131n eri\u015febilmesi.</li> <li>Depolanan Verilerin \u015eifrelenmesi: T\u00fcm verilerin \u015fifreli bir formatta saklanmas\u0131 ve yetkisiz eri\u015fimlerin engellenmesi.</li> <li>Dosya B\u00fct\u00fcnl\u00fc\u011f\u00fc Kontrolleri: Depolanan dosyalar\u0131n izinsiz de\u011fi\u015ftirilip de\u011fi\u015ftirilmedi\u011fini kontrol eden mekanizmalar.</li> <li>Veri Yedekleme: Kritik verilerin d\u00fczenli olarak yedeklenmesi ve yedeklerin \u015fifreli olarak saklanmas\u0131.</li> <li>G\u00fcvenli Silme: Depolama alan\u0131ndaki verilerin silinmesi gerekti\u011finde, verilerin geri al\u0131namaz \u015fekilde silinmesi.</li> <li>B\u00fct\u00fcnl\u00fck Kontrolleri: Dosyalar\u0131n b\u00fct\u00fcnl\u00fc\u011f\u00fcn\u00fc do\u011frulayan ve yetkisiz de\u011fi\u015fiklikleri tespit eden mekanizmalar kullanma.</li> </ol>","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#statik-ve-dinamik-varlklarn-korunmas-protection-of-static-and-dynamic-assets","title":"Statik ve Dinamik Varl\u0131klar\u0131n Korunmas\u0131 (Protection of Static and Dynamic Assets)","text":"","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#1-statik-varlklarn-korunmas-protection-of-static-assets","title":"1. Statik Varl\u0131klar\u0131n Korunmas\u0131 (Protection of Static Assets)","text":"","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#teorik-acklama_4","title":"Teorik A\u00e7\u0131klama:","text":"<p>Statik varl\u0131klar, veritaban\u0131nda veya sabit depolama ortam\u0131nda de\u011fi\u015fmeden duran verilerden olu\u015fur. Bu varl\u0131klar\u0131n korunmas\u0131, veri b\u00fct\u00fcnl\u00fc\u011f\u00fcn\u00fc sa\u011flamak ve izinsiz eri\u015fimleri engellemek i\u00e7in son derece \u00f6nemlidir.</p>","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#uygulamalar_4","title":"Uygulamalar:","text":"<ol> <li>Anahtarlar\u0131n \u015eifrelenmesi: Statik anahtarlar\u0131n g\u00fcvenli bir \u015fekilde depolanmas\u0131 i\u00e7in \u015fifreleme y\u00f6ntemleri kullanma.</li> <li>Kaynak Kodlar\u0131 Koruma: Kaynak kodlar\u0131n\u0131n izinsiz kopyalanmas\u0131n\u0131 ve de\u011fi\u015ftirilmesini engelleyen mekanizmalar geli\u015ftirme.</li> <li>Statik Dosyalar\u0131n B\u00fct\u00fcnl\u00fck Kontrol\u00fc: Sabit dosyalar\u0131n b\u00fct\u00fcnl\u00fc\u011f\u00fcn\u00fc sa\u011flayarak izinsiz de\u011fi\u015fikliklerin \u00f6nlenmesi.</li> <li>Veri \u0130mzas\u0131: Depolanan verilerin de\u011fi\u015ftirilemeyece\u011fini do\u011frulamak i\u00e7in dijital imza kullanma.</li> <li>Veritaban\u0131 B\u00fct\u00fcnl\u00fc\u011f\u00fc: Veritaban\u0131nda bulunan kritik verilerin \u015fifrelenmesi ve b\u00fct\u00fcnl\u00fc\u011f\u00fcn\u00fcn korunmas\u0131.</li> <li>Dosya Eri\u015fim Kontrol\u00fc: Statik dosyalar\u0131n yetkisiz eri\u015fimlere kar\u015f\u0131 korunmas\u0131 i\u00e7in eri\u015fim kontrol mekanizmalar\u0131n\u0131 devreye sokma.</li> <li>Gizli Anahtar Y\u00f6netimi: Statik anahtarlar\u0131n g\u00fcvenli bir \u015fekilde saklanmas\u0131 ve y\u00f6netilmesi.</li> <li>Veritaban\u0131 \u015eifreleme: Statik verilerin \u015fifrelenerek veri taban\u0131nda g\u00fcvenli bir \u015fekilde saklanmas\u0131n\u0131 sa\u011flama.</li> <li>\u0130mza ve \u015eifreleme Kombinasyonu: Statik dosyalar\u0131n b\u00fct\u00fcnl\u00fc\u011f\u00fcn\u00fc sa\u011flamak ve \u015fifreleme ile birlikte dijital imza kullanarak g\u00fcvenli\u011fi art\u0131rma.</li> <li>Dosya G\u00fcvenlik Duvar\u0131: Statik dosyalar\u0131n korunmas\u0131 i\u00e7in dosya g\u00fcvenlik duvar\u0131 olu\u015fturma.</li> </ol>","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#2-dinamik-varlklarn-korunmas-protection-of-dynamic-assets","title":"2. Dinamik Varl\u0131klar\u0131n Korunmas\u0131 (Protection of Dynamic Assets)","text":"","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#teorik-acklama_5","title":"Teorik A\u00e7\u0131klama:","text":"<p>Dinamik varl\u0131klar, uygulama \u00e7al\u0131\u015f\u0131rken olu\u015fturulan ve s\u00fcrekli de\u011fi\u015fen verilerdir. Bu verilerin korunmas\u0131, \u00f6zellikle oturum bilgileri ve dinamik anahtarlar gibi hassas bilgilerin g\u00fcvenli\u011fini sa\u011flar.</p>","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#uygulamalar_5","title":"Uygulamalar:","text":"<ol> <li>Dinamik Anahtarlar\u0131n G\u00fcvenli\u011fi: Dinamik anahtarlar\u0131n yaln\u0131zca belirli oturumlar s\u0131ras\u0131nda kullan\u0131lmas\u0131 ve g\u00fcvenli bir \u015fekilde de\u011fi\u015ftirilmesi.</li> <li>Oturum Bilgisi \u015eifreleme: Kullan\u0131c\u0131 oturumlar\u0131n\u0131n gizlili\u011fini sa\u011flamak i\u00e7in oturum bilgilerini \u015fifreleme.</li> <li>Cihaz Parmak \u0130zlerinin Korunmas\u0131: Cihaz parmak izlerinin yaln\u0131zca yetkili taraflarca do\u011frulanmas\u0131n\u0131 sa\u011flama.</li> <li>Oturum Verisi Korumas\u0131: Dinamik oturum verilerinin \u015fifrelenerek g\u00fcvence alt\u0131na al\u0131nmas\u0131.</li> <li>Dinamik Anahtar Y\u00f6netimi: Oturum s\u0131ras\u0131nda kullan\u0131lan dinamik anahtarlar\u0131n g\u00fcvenli bir \u015fekilde olu\u015fturulmas\u0131 ve y\u00f6netilmesi.</li> <li>Oturum Zaman A\u015f\u0131m\u0131: Kullan\u0131c\u0131 oturumlar\u0131 i\u00e7in otomatik zaman a\u015f\u0131m\u0131 mekanizmas\u0131 uygulayarak g\u00fcvenli\u011fi art\u0131rma.</li> <li>Verilerin S\u00fcrekli \u0130zlenmesi: Dinamik verilerin \u015fifrelenerek izlenmesi ve g\u00fcvenlik ihlallerinin an\u0131nda tespit edilmesi.</li> <li>Veri Manip\u00fclasyonu Engelleme: Dinamik verilerin manip\u00fcle edilmesini engelleyen g\u00fcvenlik mekanizmalar\u0131 kurma.</li> <li>Dinamik Veri \u0130mzas\u0131: Oturum s\u0131ras\u0131nda de\u011fi\u015ftirilen verilerin b\u00fct\u00fcnl\u00fc\u011f\u00fcn\u00fc do\u011frulamak i\u00e7in dijital imza kullanma.</li> <li>Ger\u00e7ek Zamanl\u0131 Veri Analizi: Oturum s\u0131ras\u0131nda olu\u015fan dinamik verileri analiz eden g\u00fcvenlik protokollerini devreye sokma.</li> </ol>","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#varlk-ozellikleri-property-of-assets","title":"Varl\u0131k \u00d6zellikleri (Property of Assets)","text":"","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#teorik-acklama_6","title":"Teorik A\u00e7\u0131klama:","text":"<p>Bir varl\u0131\u011f\u0131n \u00f6zellikleri, onun ad\u0131n\u0131, tan\u0131m\u0131n\u0131, konumunu, kayna\u011f\u0131n\u0131, boyutunu, olu\u015fturulma ve silinme zaman\u0131n\u0131 i\u00e7erir. Ayr\u0131ca, bir varl\u0131\u011f\u0131n gizlilik (Confidentiality), b\u00fct\u00fcnl\u00fck (Integrity) ve do\u011frulama (Authentication) gibi g\u00fcvenlik gereksinimlerine kar\u015f\u0131 nas\u0131l korunaca\u011f\u0131n\u0131 belirlemek \u00f6nemlidir.</p>","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#uygulamalar_6","title":"Uygulamalar:","text":"<ol> <li>Varl\u0131k \u0130smi (Asset Name): Varl\u0131\u011f\u0131n ad\u0131n\u0131 belirleyerek bu varl\u0131\u011f\u0131n ne oldu\u011funu tan\u0131mlama.</li> <li>Tan\u0131m (Description): Varl\u0131\u011f\u0131n ne i\u015flev g\u00f6rd\u00fc\u011f\u00fcn\u00fc ve hangi bilgileri i\u00e7erdi\u011fini a\u00e7\u0131klama.</li> <li>Konum (Location): Varl\u0131\u011f\u0131n bulundu\u011fu veri taban\u0131, tablo veya kolon gibi fiziksel konumunu belirleme.</li> <li>Kaynak (Source): Varl\u0131\u011f\u0131n kayna\u011f\u0131n\u0131 belirleyerek hangi s\u00fcre\u00e7 veya veri kayna\u011f\u0131ndan geldi\u011fini tan\u0131mlama.</li> <li>Boyut (Size): Varl\u0131\u011f\u0131n boyutunu belirleyerek depolama ihtiya\u00e7lar\u0131n\u0131 optimize etme.</li> <li>Olu\u015fturulma Zaman\u0131 (Creation Time): Varl\u0131\u011f\u0131n olu\u015fturuldu\u011fu tarihi ve zaman\u0131 belirleyerek log kay\u0131tlar\u0131n\u0131 tutma.</li> <li>Silinme Zaman\u0131 (Destroy Time): Varl\u0131\u011f\u0131n ne zaman imha edilece\u011fini ve bu s\u00fcrecin nas\u0131l y\u00f6netilece\u011fini belirleme.</li> <li>Varsay\u0131lan De\u011fer (Default Value): Varl\u0131\u011f\u0131n varsay\u0131lan de\u011ferini tan\u0131mlayarak, ilk durumda nas\u0131l olaca\u011f\u0131n\u0131 belirtme.</li> <li>Gizlilik, B\u00fct\u00fcnl\u00fck ve Do\u011frulama: Varl\u0131klar\u0131n g\u00fcvenlik gereksinimlerine g\u00f6re koruma seviyelerini tan\u0131mlama (C - Confidentiality, I - Integrity, A - Authentication).</li> <li>Varl\u0131k Koruma \u015eemas\u0131: Her varl\u0131\u011f\u0131n g\u00fcvenlik ihtiya\u00e7lar\u0131na g\u00f6re \u00f6zel bir koruma plan\u0131 olu\u015fturarak, hangi \u00f6nlemlerin al\u0131nmas\u0131 gerekti\u011fini belirleme.</li> </ol>","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#haftann-ozeti-ve-gelecek-hafta","title":"Haftan\u0131n \u00d6zeti ve Gelecek Hafta","text":"","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#bu-hafta","title":"Bu Hafta:","text":"<ul> <li>Kullan\u0131mda, Aktar\u0131mda ve Depolamada Veri G\u00fcvenli\u011fi</li> <li>Statik ve Dinamik Varl\u0131klar\u0131n Korunmas\u0131</li> </ul>","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-3/cen429-week-3/#gelecek-hafta","title":"Gelecek Hafta:","text":"<ul> <li>Sertifikalar ve \u015eifreleme Y\u00f6ntemleri</li> <li>Kimlik Do\u011frulama ve Veri B\u00fct\u00fcnl\u00fc\u011f\u00fc</li> </ul> \\[ 3.Hafta-Sonu \\]","tags":["cen429-hafta-3","veri-g\u00fcvenli\u011fi","kullan\u0131mda-veri-g\u00fcvenli\u011fi","aktar\u0131mda-veri-g\u00fcvenli\u011fi","depolamada-veri-g\u00fcvenli\u011fi"]},{"location":"tr/week-4/cen429-week-4/","title":"CEN429 G\u00fcvenli Programlama Hafta-4","text":"","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#cen429-guvenli-programlama","title":"CEN429 G\u00fcvenli Programlama","text":"","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#hafta-4","title":"Hafta-4","text":"","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#kod-guclendirme-teknikleri","title":"Kod G\u00fc\u00e7lendirme Teknikleri","text":"<p>\u0130ndir </p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#outline","title":"Outline","text":"<ul> <li>Kod G\u00fc\u00e7lendirme Teknikleri</li> <li>Native C/C++ \u0130\u00e7in Kod G\u00fc\u00e7lendirme</li> <li>Java ve Yorumlanan Diller \u0130\u00e7in Kod G\u00fc\u00e7lendirme</li> </ul>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#hafta-4-kod-guclendirme-teknikleri","title":"Hafta-4: Kod G\u00fc\u00e7lendirme Teknikleri","text":"","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#1-native-cc-icin-kod-guclendirme-teknikleri","title":"1. Native C/C++ \u0130\u00e7in Kod G\u00fc\u00e7lendirme Teknikleri","text":"<p>C ve C++ gibi d\u00fc\u015f\u00fck seviye dillerde g\u00fcvenli kod yazmak ve sald\u0131r\u0131lara kar\u015f\u0131 dayan\u0131kl\u0131 hale getirmek i\u00e7in \u00e7e\u015fitli teknikler kullan\u0131l\u0131r. Bu teknikler, kodun analiz edilmesini ve geri m\u00fchendislik i\u015flemlerini zorla\u015ft\u0131rmay\u0131 ama\u00e7lar.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#11-opaque-loops-opak-donguler","title":"1.1 Opaque Loops (Opak D\u00f6ng\u00fcler)","text":"<p>Teorik A\u00e7\u0131klama: Opak d\u00f6ng\u00fcler, d\u0131\u015far\u0131dan bak\u0131ld\u0131\u011f\u0131nda amac\u0131 belli olmayan d\u00f6ng\u00fclerdir. Bu d\u00f6ng\u00fcler sayesinde kodun analizi zorla\u015f\u0131r. Sald\u0131rgan, d\u00f6ng\u00fcn\u00fcn i\u015flevini anlamakta zorlan\u0131r ve kodun \u00e7\u00f6z\u00fclmesi daha karma\u015f\u0131k hale gelir.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Rastgele bir ko\u015ful ile olu\u015fturulmu\u015f d\u00f6ng\u00fcler ekleyerek kodun analizini zorla\u015ft\u0131rma.</li> <li>D\u0131\u015far\u0131dan anla\u015f\u0131lmayan ancak program\u0131n i\u015fleyi\u015fine zarar vermeyen d\u00f6ng\u00fcler ekleme.</li> <li>Opak d\u00f6ng\u00fcler ile program\u0131n \u00e7al\u0131\u015fma s\u00fcresini artt\u0131rarak sald\u0131rgan\u0131 yan\u0131ltma.</li> </ol>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#111-rastgele-bir-kosul-ile-olusturulmus-dongu-opaque-loop-with-random-condition","title":"1.1.1. Rastgele Bir Ko\u015ful ile Olu\u015fturulmu\u015f D\u00f6ng\u00fc (Opaque Loop with Random Condition)","text":"<p>Bu \u00f6rnekte, rastgele bir ko\u015ful ile d\u00f6ng\u00fc olu\u015fturularak kodun anla\u015f\u0131lmas\u0131 zorla\u015ft\u0131r\u0131l\u0131yor.</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdlib&gt;\n#include &lt;ctime&gt;\n\nvoid opak_rastgele_dongu() {\n    srand(time(0)); // Rastgele say\u0131 \u00fcreticisini ba\u015flat\u0131r\n    int x = rand() % 50; // D\u00f6ng\u00fc ko\u015fulu i\u00e7in rastgele bir de\u011fer\n    for (int i = 0; i &lt; x; i++) {\n        if (i % 2 == 0) {\n            std::cout &lt;&lt; \"\u0130terasyon: \" &lt;&lt; i &lt;&lt; std::endl;\n        }\n    }\n}\n</code></pre> <pre><code>int main() {\n    opak_rastgele_dongu();\n    return 0;\n}\n</code></pre> <p>\u00d6zet: Bu \u00f6rnekte, d\u00f6ng\u00fc ko\u015fulu rastgele bir say\u0131dan olu\u015fur. Bu durum, d\u00f6ng\u00fcn\u00fcn amac\u0131n\u0131 d\u0131\u015far\u0131dan anlamay\u0131 zorla\u015ft\u0131r\u0131r ve sald\u0131rganlar i\u00e7in analizi karma\u015f\u0131k hale getirir.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#112-dsardan-anlaslmayan-ancak-programn-isleyisine-zarar-vermeyen-dongu-opaque-loop-with-no-external-effect","title":"1.1.2. D\u0131\u015far\u0131dan Anla\u015f\u0131lmayan Ancak Program\u0131n \u0130\u015fleyi\u015fine Zarar Vermeyen D\u00f6ng\u00fc (Opaque Loop with No External Effect)","text":"<p>Bu \u00f6rnekte, d\u00f6ng\u00fc kodun i\u015fleyi\u015fine zarar vermeyen ancak d\u0131\u015far\u0131dan anla\u015f\u0131lmayan bir i\u015flev i\u00e7erir.</p> <pre><code>#include &lt;iostream&gt;\n\nvoid opak_islevsiz_dongu() {\n    for (int i = 0; i &lt; 100; i++) {\n        if (i % 3 == 0) {\n            int gizli_islem = i * 42; // \u0130\u015fleyi\u015fe etkisi olmayan gereksiz i\u015flem\n        }\n    }\n    std::cout &lt;&lt; \"Opak d\u00f6ng\u00fc tamamland\u0131.\" &lt;&lt; std::endl;\n}\n</code></pre> <pre><code>int main() {\n    opak_islevsiz_dongu();\n    return 0;\n}\n</code></pre> <p>\u00d6zet: Bu \u00f6rnekte, d\u00f6ng\u00fcde yap\u0131lan i\u015flem program\u0131n ana i\u015fleyi\u015fine katk\u0131 sa\u011flamaz. Bu t\u00fcr d\u00f6ng\u00fcler, sald\u0131rganlar\u0131 yan\u0131ltmak ve kodun analizini zorla\u015ft\u0131rmak i\u00e7in kullan\u0131l\u0131r.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#113-opak-donguler-ile-programn-calsma-suresini-arttrma-opaque-loops-to-delay-program-execution","title":"1.1.3. Opak D\u00f6ng\u00fcler ile Program\u0131n \u00c7al\u0131\u015fma S\u00fcresini Artt\u0131rma (Opaque Loops to Delay Program Execution)","text":"<p>Bu \u00f6rnek, program\u0131n \u00e7al\u0131\u015fma s\u00fcresini uzatarak sald\u0131rganlar\u0131 yan\u0131ltmak amac\u0131yla kullan\u0131labilir.</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;thread&gt;\n#include &lt;chrono&gt;\n\nvoid gecikmeli_opak_dongu() {\n    for (int i = 0; i &lt; 5; i++) {\n        std::this_thread::sleep_for(std::chrono::seconds(1)); // Her d\u00f6ng\u00fcde 1 saniye bekleme\n        std::cout &lt;&lt; \"Gecikmeli d\u00f6ng\u00fc iterasyonu: \" &lt;&lt; i &lt;&lt; std::endl;\n    }\n}\n</code></pre> <pre><code>int main() {\n    gecikmeli_opak_dongu();\n    return 0;\n}\n</code></pre> <p>\u00d6zet: Bu \u00f6rnekte, d\u00f6ng\u00fc her iterasyonda program\u0131n \u00e7al\u0131\u015fmas\u0131n\u0131 yava\u015flatan bir gecikme ekler. Bu t\u00fcr teknikler, sald\u0131rganlar\u0131n program\u0131n tam olarak ne yapt\u0131\u011f\u0131 konusunda kafa kar\u0131\u015f\u0131kl\u0131\u011f\u0131 yaratmak i\u00e7in kullan\u0131l\u0131r.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#12-shared-object-sembollerini-gizleme-configure-shared-object-symbol-invisible","title":"1.2 Shared Object Sembollerini Gizleme (Configure Shared Object Symbol Invisible)","text":"<p>Teorik A\u00e7\u0131klama: Payla\u015f\u0131lan nesneler (shared object) i\u00e7inde kullan\u0131lan sembollerin gizlenmesi, bu nesnelere d\u0131\u015far\u0131dan eri\u015fimi zorla\u015ft\u0131r\u0131r. Bu i\u015flem, analiz ve geri m\u00fchendislik i\u015flemlerini engellemek i\u00e7in kullan\u0131l\u0131r.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Derleyici se\u00e7enekleriyle sembollerin g\u00f6r\u00fcn\u00fcrl\u00fc\u011f\u00fcn\u00fc s\u0131n\u0131rlama.</li> <li>Sadece gerekli sembolleri d\u0131\u015fa a\u00e7arak di\u011fer sembollerin eri\u015filemez olmas\u0131n\u0131 sa\u011flama.</li> <li>Payla\u015f\u0131lan k\u00fct\u00fcphanelerdeki kritik fonksiyonlar\u0131 gizleyerek g\u00fcvenli\u011fi art\u0131rma.</li> </ol>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#121-derleyici-secenekleriyle-sembollerin-gorunurlugunu-snrlama-limiting-symbol-visibility-with-compiler-options","title":"1.2.1. Derleyici Se\u00e7enekleriyle Sembollerin G\u00f6r\u00fcn\u00fcrl\u00fc\u011f\u00fcn\u00fc S\u0131n\u0131rlama (Limiting Symbol Visibility with Compiler Options)","text":"<p>A\u00e7\u0131klama: Payla\u015f\u0131lan nesne dosyalar\u0131nda, sembollerin varsay\u0131lan olarak d\u0131\u015fa a\u00e7\u0131k (public) olmas\u0131, g\u00fcvenlik a\u00e7\u0131klar\u0131na yol a\u00e7abilir. Bu durumu \u00f6nlemek i\u00e7in derleyici se\u00e7enekleriyle sembollerin g\u00f6r\u00fcn\u00fcrl\u00fc\u011f\u00fc s\u0131n\u0131rland\u0131r\u0131labilir. \u00d6rne\u011fin, GCC ve Clang derleyicilerinde <code>-fvisibility=hidden</code> se\u00e7ene\u011fi kullan\u0131larak, sadece d\u0131\u015fa a\u00e7\u0131lmas\u0131na izin verilen semboller g\u00f6r\u00fcn\u00fcr olur.</p> <p>\u00d6rnek:</p> <pre><code>// foo.cpp\n#include &lt;iostream&gt;\n\nvoid gizli_fonksiyon() __attribute__((visibility(\"hidden\"))); // Fonksiyon gizli\n\nvoid gizli_fonksiyon() {\n    std::cout &lt;&lt; \"Bu fonksiyon d\u0131\u015fa a\u00e7\u0131k de\u011fildir.\" &lt;&lt; std::endl;\n}\n\nvoid acik_fonksiyon() {\n    std::cout &lt;&lt; \"Bu fonksiyon d\u0131\u015fa a\u00e7\u0131kt\u0131r.\" &lt;&lt; std::endl;\n}\n</code></pre> <p>Derleme Komutu:</p> <pre><code>g++ -fvisibility=hidden -shared -o libfoo.so foo.cpp\n</code></pre> <p>\u00d6zet: Bu komut, t\u00fcm sembolleri varsay\u0131lan olarak gizler (<code>-fvisibility=hidden</code>), ancak <code>acik_fonksiyon</code> d\u0131\u015fa a\u00e7\u0131labilir durumda kal\u0131r. <code>gizli_fonksiyon</code> ise d\u0131\u015far\u0131dan eri\u015filemez olur.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#122-sadece-gerekli-sembolleri-dsa-acma-only-exporting-necessary-symbols","title":"1.2.2. Sadece Gerekli Sembolleri D\u0131\u015fa A\u00e7ma (Only Exporting Necessary Symbols)","text":"<p>A\u00e7\u0131klama: Payla\u015f\u0131lan k\u00fct\u00fcphanelerde yaln\u0131zca gerekli semboller d\u0131\u015fa a\u00e7\u0131l\u0131r. Bu sayede, sadece belirli fonksiyonlar d\u0131\u015far\u0131dan \u00e7a\u011fr\u0131labilirken di\u011fer semboller gizli kal\u0131r.</p> <p>\u00d6rnek:</p> <pre><code>// gizli_kutuphane.cpp\n#include &lt;iostream&gt;\n\nvoid gizli_fonksiyon() {\n    std::cout &lt;&lt; \"Bu fonksiyon gizli kalacak.\" &lt;&lt; std::endl;\n}\n\nextern \"C\" void acik_fonksiyon() {\n    std::cout &lt;&lt; \"Bu fonksiyon d\u0131\u015fa a\u00e7\u0131k.\" &lt;&lt; std::endl;\n}\n</code></pre> <p>Derleme Komutu:</p> <pre><code>g++ -fvisibility=hidden -shared -o libgizli.so gizli_kutuphane.cpp\n</code></pre> <p>\u00d6zet: Bu \u00f6rnekte, <code>acik_fonksiyon</code> d\u0131\u015fa a\u00e7\u0131labilirken, <code>gizli_fonksiyon</code> d\u0131\u015far\u0131dan eri\u015filemez durumda kal\u0131r. Bu teknik, sadece d\u0131\u015far\u0131dan kullan\u0131lmas\u0131na izin verilen fonksiyonlar\u0131n eri\u015fime a\u00e7\u0131lmas\u0131n\u0131 sa\u011flar.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#123-paylaslan-kutuphanelerde-kritik-fonksiyonlar-gizleme-hiding-critical-functions-in-shared-libraries","title":"1.2.3. Payla\u015f\u0131lan K\u00fct\u00fcphanelerde Kritik Fonksiyonlar\u0131 Gizleme (Hiding Critical Functions in Shared Libraries)","text":"<p>A\u00e7\u0131klama: Kritik \u00f6neme sahip fonksiyonlar gizlenerek, geri m\u00fchendislik i\u015flemlerini zorla\u015ft\u0131rmak ve payla\u015f\u0131lan k\u00fct\u00fcphanelerin g\u00fcvenli\u011fini art\u0131rmak m\u00fcmk\u00fcnd\u00fcr. Bu yakla\u015f\u0131m, sald\u0131rganlar\u0131n \u00f6nemli fonksiyonlar\u0131 analiz etmesini ve manip\u00fcle etmesini \u00f6nler.</p> <p>\u00d6rnek:</p> <pre><code>// kritik_kutuphane.cpp\n#include &lt;iostream&gt;\n\n__attribute__((visibility(\"hidden\"))) void kritik_fonksiyon() {\n    std::cout &lt;&lt; \"Bu kritik fonksiyon gizlenmi\u015ftir.\" &lt;&lt; std::endl;\n}\n\nextern \"C\" void genel_fonksiyon() {\n    std::cout &lt;&lt; \"Bu genel fonksiyon d\u0131\u015fa a\u00e7\u0131kt\u0131r.\" &lt;&lt; std::endl;\n    kritik_fonksiyon(); // Gizli fonksiyon burada i\u00e7sel olarak \u00e7a\u011fr\u0131l\u0131r\n}\n</code></pre> <p>Derleme Komutu:</p> <pre><code>g++ -fvisibility=hidden -shared -o libkritik.so kritik_kutuphane.cpp\n</code></pre> <p>\u00d6zet: Bu \u00f6rnekte, <code>kritik_fonksiyon</code> d\u0131\u015far\u0131dan eri\u015filemez ve yaln\u0131zca <code>genel_fonksiyon</code> \u00fczerinden \u00e7a\u011fr\u0131labilir. Bu, kritik fonksiyonlar\u0131n d\u0131\u015fa kapal\u0131 kalmas\u0131n\u0131 sa\u011flayarak g\u00fcvenli\u011fi art\u0131r\u0131r.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#13-aritmetik-islemlerin-obfuske-edilmesi-obfuscation-of-arithmetic-instructions","title":"1.3. Aritmetik \u0130\u015flemlerin Obfuske Edilmesi (Obfuscation of Arithmetic Instructions)","text":"<p>Teorik A\u00e7\u0131klama: Aritmetik i\u015flemler, program\u0131n en temel yap\u0131 ta\u015flar\u0131d\u0131r. Bu i\u015flemleri karma\u015f\u0131k hale getirmek, kodun analizini ve anla\u015f\u0131lmas\u0131n\u0131 zorla\u015ft\u0131r\u0131r.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Basit toplama i\u015flemlerini daha karma\u015f\u0131k matematiksel ifadeler ile de\u011fi\u015ftirme.</li> <li>Aritmetik i\u015flemlerine gereksiz ad\u0131mlar ekleyerek i\u015flevselli\u011fi korurken kodun anla\u015f\u0131lmas\u0131n\u0131 zorla\u015ft\u0131rma.</li> <li>Aritmetik i\u015flemler \u00fczerinde bit manip\u00fclasyonu yaparak daha karma\u015f\u0131k hale getirme.</li> </ol>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#131-basit-toplama-islemlerini-daha-karmask-matematiksel-ifadeler-ile-degistirme-replacing-simple-additions-with-complex-mathematical-expressions","title":"1.3.1. Basit Toplama \u0130\u015flemlerini Daha Karma\u015f\u0131k Matematiksel \u0130fadeler ile De\u011fi\u015ftirme (Replacing Simple Additions with Complex Mathematical Expressions)","text":"<p>A\u00e7\u0131klama: Basit aritmetik i\u015flemlerini karma\u015f\u0131k hale getirerek, kodun anla\u015f\u0131lmas\u0131n\u0131 zorla\u015ft\u0131rabiliriz. \u00d6rne\u011fin, bir toplama i\u015flemini daha uzun ve karma\u015f\u0131k matematiksel i\u015flemlerle de\u011fi\u015ftirmek, sald\u0131rganlar\u0131n kodu analiz etmesini zorla\u015ft\u0131r\u0131r.</p> <p>\u00d6rnek:</p> <pre><code>#include &lt;iostream&gt;\n\nint karma\u015f\u0131k_toplama(int a, int b) {\n    // Basit toplama i\u015flemi: a + b\n    // Karma\u015f\u0131k hale getirilmi\u015f hali\n    return ((a * 2) + (b * 2) - a - b); // a + b ile ayn\u0131 sonucu verir\n}\n</code></pre> <pre><code>int main() {\n    int a = 5, b = 10;\n    int sonuc = karma\u015f\u0131k_toplama(a, b);\n    std::cout &lt;&lt; \"Karma\u015f\u0131k toplama sonucu: \" &lt;&lt; sonuc &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre> <p>\u00d6zet: Bu kodda basit bir toplama i\u015flemi (a + b) daha karma\u015f\u0131k bir matematiksel ifadeye d\u00f6n\u00fc\u015ft\u00fcr\u00fclm\u00fc\u015ft\u00fcr. Her ne kadar sonu\u00e7 ayn\u0131 olsa da kodun analizi zorla\u015f\u0131r.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#132-aritmetik-islemlerine-gereksiz-admlar-ekleyerek-kodun-anlaslmasn-zorlastrma-adding-redundant-steps-to-obfuscate-arithmetic-operations","title":"1.3.2. Aritmetik \u0130\u015flemlerine Gereksiz Ad\u0131mlar Ekleyerek Kodun Anla\u015f\u0131lmas\u0131n\u0131 Zorla\u015ft\u0131rma (Adding Redundant Steps to Obfuscate Arithmetic Operations)","text":"<p>A\u00e7\u0131klama: Aritmetik i\u015flemlerine gereksiz ad\u0131mlar eklemek, i\u015flevi de\u011fi\u015ftirmeden kodun anla\u015f\u0131lmas\u0131n\u0131 zorla\u015ft\u0131r\u0131r. \u00d6rne\u011fin, ekleme ve \u00e7\u0131karma i\u015flemleri eklenerek kod daha karma\u015f\u0131k hale getirilebilir.</p> <p>\u00d6rnek:</p> <pre><code>#include &lt;iostream&gt;\n\nint gereksiz_adimlarla_toplama(int a, int b) {\n    // Toplama i\u015flemini gereksiz ad\u0131mlarla karma\u015f\u0131kla\u015ft\u0131rma\n    int sonuc = (a * 2 - a) + (b * 2 - b); // a + b i\u015flemini yapar\n    return sonuc;\n}\n</code></pre> <pre><code>int main() {\n    int a = 7, b = 3;\n    int sonuc = gereksiz_adimlarla_toplama(a, b);\n    std::cout &lt;&lt; \"Gereksiz ad\u0131mlarla toplama sonucu: \" &lt;&lt; sonuc &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre> <p>\u00d6zet: Bu \u00f6rnekte, toplama i\u015flemi gereksiz ad\u0131mlarla karma\u015f\u0131k hale getirilmi\u015ftir. Sonu\u00e7 yine <code>a + b</code> olsa da i\u015flem, d\u0131\u015far\u0131dan bak\u0131ld\u0131\u011f\u0131nda anla\u015f\u0131lmas\u0131 zor hale gelmi\u015ftir.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#133-aritmetik-islemler-uzerinde-bit-manipulasyonu-yaparak-karmask-hale-getirme-adding-bit-manipulation-to-obfuscate-arithmetic-operations","title":"1.3.3. Aritmetik \u0130\u015flemler \u00dczerinde Bit Manip\u00fclasyonu Yaparak Karma\u015f\u0131k Hale Getirme (Adding Bit Manipulation to Obfuscate Arithmetic Operations)","text":"<p>A\u00e7\u0131klama: Aritmetik i\u015flemlere bit manip\u00fclasyonu ekleyerek kodu daha da karma\u015f\u0131k hale getirebiliriz. Bu y\u00f6ntem, \u00f6zellikle d\u00fc\u015f\u00fck seviyeli dillerde kodun geri m\u00fchendislik i\u015flemine kar\u015f\u0131 dayan\u0131kl\u0131l\u0131\u011f\u0131n\u0131 art\u0131r\u0131r.</p> <p>\u00d6rnek:</p> <pre><code>#include &lt;iostream&gt;\n\nint bit_manipulasyonu_ile_toplama(int a, int b) {\n    // Aritmetik i\u015flemi bit manip\u00fclasyonu ile karma\u015f\u0131k hale getirme\n    int sonuc = ((a &lt;&lt; 1) &gt;&gt; 1) + ((b &lt;&lt; 1) &gt;&gt; 1); // a + b i\u015flemi yapar\n    return sonuc;\n}\n</code></pre> <pre><code>int main() {\n    int a = 4, b = 8;\n    int sonuc = bit_manipulasyonu_ile_toplama(a, b);\n    std::cout &lt;&lt; \"Bit manip\u00fclasyonu ile toplama sonucu: \" &lt;&lt; sonuc &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre> <p>\u00d6zet: Bu \u00f6rnekte, toplama i\u015flemi bit kayd\u0131rma i\u015flemleri (left shift, right shift) ile karma\u015f\u0131k hale getirilmi\u015ftir. Bit manip\u00fclasyonu, aritmetik i\u015flemi gizler ve kodun analiz edilmesini zorla\u015ft\u0131r\u0131r.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#14-fonksiyon-isimlerinin-obfuske-edilmesi-obfuscation-of-function-names","title":"1.4. Fonksiyon \u0130simlerinin Obfuske Edilmesi (Obfuscation of Function Names)","text":"<p>Teorik A\u00e7\u0131klama: Fonksiyon isimlerinin rastgele karakter dizileri ile de\u011fi\u015ftirilmesi, kodun anla\u015f\u0131lmas\u0131n\u0131 zorla\u015ft\u0131r\u0131r. Bu teknik, \u00f6zellikle tersine m\u00fchendislik (reverse engineering) i\u015flemlerini engellemek i\u00e7in kullan\u0131l\u0131r.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Fonksiyon isimlerini anlams\u0131z karakter dizileri ile de\u011fi\u015ftirme.</li> <li>Her derlemede farkl\u0131 fonksiyon isimleri olu\u015fturarak statik analiz ara\u00e7lar\u0131n\u0131 yan\u0131ltma.</li> <li>Kritik fonksiyonlar\u0131n isimlerini rastgele hale getirerek sald\u0131rganlar\u0131n bu fonksiyonlar\u0131 anlamas\u0131n\u0131 zorla\u015ft\u0131rma.</li> </ol>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#141-fonksiyon-isimlerini-anlamsz-karakter-dizileri-ile-degistirme-replacing-function-names-with-nonsense-character-strings","title":"1.4.1. Fonksiyon \u0130simlerini Anlams\u0131z Karakter Dizileri ile De\u011fi\u015ftirme (Replacing Function Names with Nonsense Character Strings)","text":"<p>A\u00e7\u0131klama: Fonksiyon isimleri, anla\u015f\u0131lmay\u0131 zorla\u015ft\u0131rmak amac\u0131yla anlams\u0131z karakter dizileri ile de\u011fi\u015ftirilir. Bu y\u00f6ntem, sald\u0131rganlar\u0131n hangi fonksiyonun ne i\u015fe yarad\u0131\u011f\u0131n\u0131 anlamas\u0131n\u0131 zorla\u015ft\u0131r\u0131r.</p> <p>\u00d6rnek:</p> <pre><code>#include &lt;iostream&gt;\n\n// Fonksiyon isimleri anlams\u0131z karakter dizileriyle de\u011fi\u015ftirilmi\u015f\nvoid abcdef123() {\n    std::cout &lt;&lt; \"Kritik bir i\u015flem ger\u00e7ekle\u015ftirildi.\" &lt;&lt; std::endl;\n}\n</code></pre> <pre><code>int main() {\n    abcdef123(); // Fonksiyon \u00e7a\u011fr\u0131s\u0131\n    return 0;\n}\n</code></pre> <p>\u00d6zet: Bu \u00f6rnekte, <code>abcdef123</code> gibi anlams\u0131z bir karakter dizisi kullan\u0131larak fonksiyon ismi gizlenmi\u015ftir. Bu durum, kodun anla\u015f\u0131lmas\u0131n\u0131 ve analiz edilmesini zorla\u015ft\u0131r\u0131r.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#142-her-derlemede-farkl-fonksiyon-isimleri-olusturarak-statik-analiz-araclarn-yanltma-generating-different-function-names-on-every-compile","title":"1.4.2. Her Derlemede Farkl\u0131 Fonksiyon \u0130simleri Olu\u015fturarak Statik Analiz Ara\u00e7lar\u0131n\u0131 Yan\u0131ltma (Generating Different Function Names on Every Compile)","text":"<p>A\u00e7\u0131klama: Her derlemede farkl\u0131 fonksiyon isimleri olu\u015fturmak, statik analiz ara\u00e7lar\u0131n\u0131 ve geri m\u00fchendislik i\u015flemlerini zorla\u015ft\u0131rabilir. Derleme s\u0131ras\u0131nda fonksiyon isimleri rastgele olu\u015fturularak kod analizi karma\u015f\u0131k hale getirilir.</p> <p>\u00d6rnek:</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdlib&gt;\n#include &lt;ctime&gt;\n\n// Rastgele fonksiyon ismi olu\u015fturma\n#define OBFUSCATED_FUNC_NAME random_function_name\n\nvoid OBFUSCATED_FUNC_NAME() {\n    std::cout &lt;&lt; \"Bu fonksiyonun ismi her derlemede de\u011fi\u015febilir.\" &lt;&lt; std::endl;\n}\n</code></pre> <pre><code>int main() {\n    OBFUSCATED_FUNC_NAME(); // Fonksiyon \u00e7a\u011fr\u0131s\u0131\n    return 0;\n}\n</code></pre> <p>\u00d6zet: Makro tan\u0131m\u0131 ve derleme s\u00fcrecinde rastgele fonksiyon isimleri olu\u015fturmak, her derlemede farkl\u0131 bir isim kullanarak kodun statik analiz ara\u00e7lar\u0131 taraf\u0131ndan analiz edilmesini zorla\u015ft\u0131r\u0131r.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#143-kritik-fonksiyonlarn-isimlerini-rastgele-hale-getirerek-saldrganlarn-bu-fonksiyonlar-anlamasn-zorlastrma-randomizing-critical-function-names-to-obfuscate-purpose","title":"1.4.3. Kritik Fonksiyonlar\u0131n \u0130simlerini Rastgele Hale Getirerek Sald\u0131rganlar\u0131n Bu Fonksiyonlar\u0131 Anlamas\u0131n\u0131 Zorla\u015ft\u0131rma (Randomizing Critical Function Names to Obfuscate Purpose)","text":"<p>A\u00e7\u0131klama: Kritik fonksiyonlar\u0131n isimlerini rastgele hale getirmek, sald\u0131rganlar\u0131n bu fonksiyonlar\u0131n amac\u0131n\u0131 anlamas\u0131n\u0131 zorla\u015ft\u0131r\u0131r. Bu teknik, \u00f6zellikle geri m\u00fchendislik i\u015flemlerini engellemek i\u00e7in kullan\u0131l\u0131r.</p> <p>\u00d6rnek:</p> <pre><code>#include &lt;iostream&gt;\n\n// Kritik fonksiyonlar\u0131n isimleri rastgele belirlenmi\u015f\nvoid xj239rf84() {\n    std::cout &lt;&lt; \"Kritik bir g\u00fcvenlik i\u015flemi ger\u00e7ekle\u015ftiriliyor.\" &lt;&lt; std::endl;\n}\n\nvoid z8kd93p2() {\n    std::cout &lt;&lt; \"Kritik bir do\u011frulama i\u015flemi ger\u00e7ekle\u015ftiriliyor.\" &lt;&lt; std::endl;\n}\n</code></pre> <pre><code>int main() {\n    xj239rf84(); // Kritik g\u00fcvenlik fonksiyonu \u00e7a\u011fr\u0131s\u0131\n    z8kd93p2();  // Kritik do\u011frulama fonksiyonu \u00e7a\u011fr\u0131s\u0131\n    return 0;\n}\n</code></pre> <p>\u00d6zet: Bu \u00f6rnekte kritik fonksiyonlar rastgele isimler alm\u0131\u015ft\u0131r (<code>xj239rf84</code>, <code>z8kd93p2</code>). Bu, tersine m\u00fchendislik i\u015flemlerini zorla\u015ft\u0131r\u0131r, \u00e7\u00fcnk\u00fc isimler fonksiyonun i\u015flevi hakk\u0131nda bilgi vermez.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#15-kaynak-dosya-isimlerinin-obfuske-edilmesi-obfuscation-of-source-file-names","title":"1.5. Kaynak Dosya \u0130simlerinin Obfuske Edilmesi (Obfuscation of Source File Names)","text":"<p>Teorik A\u00e7\u0131klama: Kaynak dosyalar\u0131n isimlerini anlams\u0131z hale getirerek kodun hangi fonksiyona veya s\u0131n\u0131fa ait oldu\u011funu gizleme.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Kaynak dosyalar\u0131n isimlerini rastgele karakterler ile de\u011fi\u015ftirme.</li> <li>Kaynak dosyalar aras\u0131ndaki ili\u015fkiyi gizleyerek kod yap\u0131s\u0131n\u0131 anla\u015f\u0131lmaz hale getirme.</li> <li>Dosya isimlerini obfuske ederken kaynak kodu etkilemeyecek \u015fekilde yap\u0131lar\u0131 de\u011fi\u015ftirme.</li> </ol>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#151-kaynak-dosyalarn-isimlerini-rastgele-karakterler-ile-degistirme-randomizing-source-file-names","title":"1.5.1. Kaynak Dosyalar\u0131n \u0130simlerini Rastgele Karakterler ile De\u011fi\u015ftirme (Randomizing Source File Names)","text":"<p>A\u00e7\u0131klama: Kaynak dosya isimlerini rastgele karakter dizileri ile de\u011fi\u015ftirerek, bu dosyalar\u0131n hangi i\u015flevleri bar\u0131nd\u0131rd\u0131\u011f\u0131n\u0131 gizleyebiliriz. Bu teknik, sald\u0131rganlar\u0131n hangi dosyan\u0131n hangi i\u015flemi ger\u00e7ekle\u015ftirdi\u011fini anlamas\u0131n\u0131 zorla\u015ft\u0131r\u0131r.</p> <p>\u00d6rnek:</p> <ol> <li>Orijinal Dosya Ad\u0131:</li> </ol> <pre><code>hesaplama.cpp\n</code></pre> <pre><code>// hesaplama.cpp\n#include &lt;iostream&gt;\n\nvoid hesapla() {\n    std::cout &lt;&lt; \"Hesaplama i\u015flemi\" &lt;&lt; std::endl;\n}\n</code></pre> <ol> <li>Obfuske Edilmi\u015f Dosya Ad\u0131:</li> </ol> <pre><code>x7z23f.cpp\n</code></pre> <pre><code>// x7z23f.cpp\n#include &lt;iostream&gt;\n\nvoid x7z23f() {\n    std::cout &lt;&lt; \"Hesaplama i\u015flemi\" &lt;&lt; std::endl;\n}\n</code></pre> <p>\u00d6zet: Bu \u00f6rnekte, <code>hesaplama.cpp</code> adl\u0131 dosyan\u0131n ad\u0131 <code>x7z23f.cpp</code> olarak de\u011fi\u015ftirilmi\u015ftir. Ayr\u0131ca, fonksiyon ad\u0131 da ayn\u0131 rastgele karakterlerle de\u011fi\u015ftirilmi\u015ftir. Bu, kod yap\u0131s\u0131n\u0131 gizlemek i\u00e7in etkili bir y\u00f6ntemdir.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#152-kaynak-dosyalar-arasndaki-iliskiyi-gizleyerek-kod-yapsn-anlaslmaz-hale-getirme-hiding-relationships-between-source-files","title":"1.5.2. Kaynak Dosyalar Aras\u0131ndaki \u0130li\u015fkiyi Gizleyerek Kod Yap\u0131s\u0131n\u0131 Anla\u015f\u0131lmaz Hale Getirme (Hiding Relationships Between Source Files)","text":"<p>A\u00e7\u0131klama: Kod yap\u0131s\u0131ndaki dosyalar aras\u0131ndaki ili\u015fkiyi gizlemek, sald\u0131rganlar\u0131n kaynak dosyalar\u0131n nas\u0131l etkile\u015fimde bulundu\u011funu anlamas\u0131n\u0131 zorla\u015ft\u0131r\u0131r. Bu teknik, kodun genel yap\u0131s\u0131n\u0131 daha gizli hale getirir.</p> <p>\u00d6rnek:</p> <ol> <li> <p>Orijinal Dosyalar:</p> </li> <li> <p><code>hesaplama.cpp</code></p> </li> <li><code>utils.cpp</code></li> </ol> <pre><code>// hesaplama.cpp\n#include \"utils.h\"\n\nvoid hesapla() {\n    int sonuc = toplama(5, 10); // utils.cpp dosyas\u0131ndaki fonksiyon \u00e7a\u011fr\u0131s\u0131\n    std::cout &lt;&lt; \"Sonu\u00e7: \" &lt;&lt; sonuc &lt;&lt; std::endl;\n}\n</code></pre> <pre><code>// utils.cpp\nint toplama(int a, int b) {\n    return a + b;\n}\n</code></pre> <p>Obfuske Edilmi\u015f Dosyalar:</p> <ul> <li><code>a9s8d.cpp</code></li> <li><code>p2f6k.cpp</code></li> </ul> <pre><code>// a9s8d.cpp\n#include \"p2f6k.h\"\n\nvoid a9s8d() {\n    int sonuc = p2f6k(5, 10); // Fonksiyon ili\u015fkisi gizlenmi\u015f\n    std::cout &lt;&lt; \"Sonu\u00e7: \" &lt;&lt; sonuc &lt;&lt; std::endl;\n}\n</code></pre> <pre><code>// p2f6k.cpp\nint p2f6k(int a, int b) {\n    return a + b;\n}\n</code></pre> <p>\u00d6zet: Bu \u00f6rnekte, iki dosya aras\u0131ndaki ili\u015fki dosya isimlerinin ve fonksiyon isimlerinin de\u011fi\u015ftirilmesiyle gizlenmi\u015ftir. Dosyalar aras\u0131ndaki ili\u015fki, d\u0131\u015far\u0131dan bak\u0131ld\u0131\u011f\u0131nda anla\u015f\u0131lamaz hale getirilmi\u015ftir.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#153-dosya-isimlerini-obfuske-ederken-kaynak-kodu-etkilemeyecek-sekilde-yaplar-degistirme-obfuscating-file-names-without-affecting-source-code-structure","title":"1.5.3. Dosya \u0130simlerini Obfuske Ederken Kaynak Kodu Etkilemeyecek \u015eekilde Yap\u0131lar\u0131 De\u011fi\u015ftirme (Obfuscating File Names Without Affecting Source Code Structure)","text":"<p>A\u00e7\u0131klama: Dosya isimleri obfuske edilse bile kaynak kodun \u00e7al\u0131\u015fma mant\u0131\u011f\u0131 de\u011fi\u015ftirilmez. Derleme s\u0131ras\u0131nda dosya isimleri ve kod yap\u0131lar\u0131 aras\u0131nda do\u011fru ba\u011flant\u0131 kurularak kodun i\u015flevselli\u011fi korunur.</p> <p>\u00d6rnek:</p> <ol> <li>Orijinal Dosya Yap\u0131s\u0131:</li> </ol> <pre><code>kaynak/\n\u251c\u2500\u2500 hesaplama.cpp\n\u2514\u2500\u2500 utils.cpp\n</code></pre> <pre><code>// hesaplama.cpp\n#include \"utils.h\"\n\nvoid hesapla() {\n    std::cout &lt;&lt; \"Hesaplama i\u015flemi ba\u015flad\u0131.\" &lt;&lt; std::endl;\n}\n</code></pre> <ol> <li>Obfuske Edilmi\u015f Dosya Yap\u0131s\u0131:</li> </ol> <pre><code>kaynak/\n\u251c\u2500\u2500 q1w2e.cpp\n\u2514\u2500\u2500 z3x4c.cpp\n</code></pre> <pre><code>// q1w2e.cpp\n#include \"z3x4c.h\"\n\nvoid q1w2e() {\n    std::cout &lt;&lt; \"Hesaplama i\u015flemi ba\u015flad\u0131.\" &lt;&lt; std::endl;\n}\n</code></pre> <p>\u00d6zet: Dosya isimleri ve fonksiyon isimleri de\u011fi\u015ftirilmi\u015f olsa da, dosyalar aras\u0131ndaki ili\u015fki do\u011fru referanslarla korunmu\u015f ve kaynak kodun i\u015flevselli\u011fi etkilenmemi\u015ftir.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#16-statik-dizelerin-obfuske-edilmesi-obfuscation-of-static-strings","title":"1.6. Statik Dizelerin Obfuske Edilmesi (Obfuscation of Static Strings)","text":"<p>Teorik A\u00e7\u0131klama: Statik dizeler, sald\u0131rganlar i\u00e7in \u00f6nemli bilgi kaynaklar\u0131d\u0131r. Bu dizelerin \u015fifrelenmesi ve gizlenmesi, kod g\u00fcvenli\u011fini art\u0131r\u0131r.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Statik dizeleri \u015fifreleyerek \u00e7al\u0131\u015fma an\u0131nda \u00e7\u00f6z\u00fclmesini sa\u011flama.</li> <li>Rastgele dize maskeleri uygulayarak dizelerin anlam\u0131n\u0131 gizleme.</li> <li>Dize sabitlerini kald\u0131rarak sabit dize kullan\u0131m\u0131n\u0131 azaltma.</li> </ol>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#161-statik-dizeleri-sifreleyerek-calsma-annda-cozulmesini-saglama-encrypting-static-strings-and-decrypting-at-runtime","title":"1.6.1. Statik Dizeleri \u015eifreleyerek \u00c7al\u0131\u015fma An\u0131nda \u00c7\u00f6z\u00fclmesini Sa\u011flama (Encrypting Static Strings and Decrypting at Runtime)","text":"<p>A\u00e7\u0131klama: Statik dizeler sald\u0131rganlar i\u00e7in \u00f6nemli bilgi kaynaklar\u0131 olabilir. Bu y\u00fczden, dizeler \u00e7al\u0131\u015fma zaman\u0131nda \u015fifrelenip, yaln\u0131zca gerekli oldu\u011funda \u00e7\u00f6z\u00fclerek kullan\u0131labilir.</p> <p>\u00d6rnek:</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n\n// Basit bir XOR \u015fifreleme ve \u00e7\u00f6zme fonksiyonu\nstd::string xor_sifrele(const std::string &amp;input, char key) {\n    std::string output = input;\n    for (size_t i = 0; i &lt; input.size(); i++) {\n        output[i] ^= key; // XOR i\u015flemi\n    }\n    return output;\n}\n</code></pre> <pre><code>int main() {\n    std::string sifreli_dize = xor_sifrele(\"GizliMesaj\", 0xAA); // \u015eifreleme\n    std::cout &lt;&lt; \"\u015eifrelenmi\u015f Dize: \" &lt;&lt; sifreli_dize &lt;&lt; std::endl;\n\n    std::string cozulmus_dize = xor_sifrele(sifreli_dize, 0xAA); // \u00c7\u00f6zme\n    std::cout &lt;&lt; \"\u00c7\u00f6z\u00fclm\u00fc\u015f Dize: \" &lt;&lt; cozulmus_dize &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre> <p>\u00d6zet: Bu \u00f6rnekte, statik bir dize (<code>\"GizliMesaj\"</code>) XOR i\u015flemi kullan\u0131larak \u015fifrelenmi\u015ftir. Dizeler \u00e7al\u0131\u015fma an\u0131nda \u00e7\u00f6z\u00fclerek anlaml\u0131 hale getirilir ve sald\u0131rganlar\u0131n dizeleri statik analiz ara\u00e7lar\u0131yla do\u011frudan g\u00f6rmesi engellenir.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#162-rastgele-dize-maskeleri-uygulayarak-dizelerin-anlamn-gizleme-applying-random-string-masks-to-obfuscate-string-meaning","title":"1.6.2. Rastgele Dize Maskeleri Uygulayarak Dizelerin Anlam\u0131n\u0131 Gizleme (Applying Random String Masks to Obfuscate String Meaning)","text":"<p>A\u00e7\u0131klama: Statik dizeler \u00fczerine rastgele maskeler uygulanarak dizelerin anlam\u0131 gizlenir. Bu teknik, sald\u0131rganlar\u0131n \u015fifrelenmi\u015f dizeleri \u00e7\u00f6zmesini zorla\u015ft\u0131r\u0131r.</p> <p>\u00d6rnek:</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\n\nstd::string dize_maskele(const std::string &amp;input) {\n    std::string output = input;\n    for (size_t i = 0; i &lt; input.size(); i++) {\n        output[i] ^= (i % 255); // Rastgele bir maskeleme i\u015flemi\n    }\n    return output;\n}\n</code></pre> <pre><code>int main() {\n    std::string orijinal_dize = \"\u00d6nemliBilgi\";\n    std::string maske_dize = dize_maskele(orijinal_dize); // Maskeleme\n    std::cout &lt;&lt; \"Masked Dize: \" &lt;&lt; maske_dize &lt;&lt; std::endl;\n\n    std::string cozulmus_dize = dize_maskele(maske_dize); // Maskeleme ters i\u015flemi\n    std::cout &lt;&lt; \"\u00c7\u00f6z\u00fclm\u00fc\u015f Dize: \" &lt;&lt; cozulmus_dize &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre> <p>\u00d6zet: Bu \u00f6rnekte, dizenin her karakterine maskeleme uygulanarak dize karma\u015f\u0131k hale getirilmi\u015ftir. \u00c7al\u0131\u015fma an\u0131nda maskeler ters \u00e7evrilerek dizenin anlam\u0131 tekrar ortaya \u00e7\u0131kar. Bu y\u00f6ntem, dizelerin do\u011frudan okunmas\u0131n\u0131 zorla\u015ft\u0131r\u0131r.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#163-dize-sabitlerini-kaldrarak-sabit-dize-kullanmn-azaltma-reducing-the-use-of-static-string-constants","title":"1.6.3. Dize Sabitlerini Kald\u0131rarak Sabit Dize Kullan\u0131m\u0131n\u0131 Azaltma (Reducing the Use of Static String Constants)","text":"<p>A\u00e7\u0131klama: Kodda sabit dizeler kullanmak, sald\u0131rganlar i\u00e7in ipu\u00e7lar\u0131 sa\u011flayabilir. Bu y\u00fczden sabit dize kullan\u0131m\u0131n\u0131 en aza indirerek ve \u00e7al\u0131\u015fma zaman\u0131nda dizeleri olu\u015fturarak g\u00fcvenli\u011fi art\u0131rmak m\u00fcmk\u00fcnd\u00fcr.</p> <p>\u00d6rnek:</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;sstream&gt;\n\nstd::string dinamik_dize_olustur() {\n    std::ostringstream ss;\n    ss &lt;&lt; \"Parola\" &lt;&lt; \"2024\"; // Sabit dizeleri dinamik olarak birle\u015ftiriyoruz\n    return ss.str();\n}\n</code></pre> <pre><code>int main() {\n    std::string parola = dinamik_dize_olustur(); // Parola dinamik olarak olu\u015fturuluyor\n    std::cout &lt;&lt; \"Dinamik Dize: \" &lt;&lt; parola &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre> <p>\u00d6zet: Bu \u00f6rnekte, sabit dize yerine, dizeler \u00e7al\u0131\u015fma zaman\u0131nda dinamik olarak olu\u015fturulmu\u015ftur. Bu yakla\u015f\u0131m, kod i\u00e7inde sabit dizelerin bulunmas\u0131n\u0131 ve bu dizelere sald\u0131r\u0131 yap\u0131lmas\u0131n\u0131 zorla\u015ft\u0131r\u0131r.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#17-opak-boolean-degiskenler-opaque-boolean-variables","title":"1.7. Opak Boolean De\u011fi\u015fkenler (Opaque Boolean Variables)","text":"<p>Teorik A\u00e7\u0131klama: Opak boolean de\u011fi\u015fkenler, ko\u015fullu ifadelerin anla\u015f\u0131lmas\u0131n\u0131 zorla\u015ft\u0131rmak i\u00e7in kullan\u0131l\u0131r. Bu teknik, ko\u015fullar\u0131n karma\u015f\u0131k hale getirilmesiyle kodun analizini ve geri m\u00fchendislik i\u015flemlerini g\u00fc\u00e7le\u015ftirir.</p> <p>\u00d6rnek \u00d6nerisi:</p> <ul> <li>Rastgele boolean de\u011ferleri d\u00f6nd\u00fcren bir fonksiyonun ko\u015fullu ifadelerde kullan\u0131lmas\u0131.</li> <li>\u015eartlar\u0131n karma\u015f\u0131kla\u015ft\u0131r\u0131lmas\u0131yla kodun \u00f6ng\u00f6r\u00fclemez hale getirilmesi.</li> </ul>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#171-rastgele-boolean-degerleri-donduren-bir-fonksiyonun-kullanlmas","title":"1.7.1. Rastgele Boolean De\u011ferleri D\u00f6nd\u00fcren Bir Fonksiyonun Kullan\u0131lmas\u0131","text":"<p>A\u00e7\u0131klama: Bu \u00f6rnekte, rastgele boolean de\u011fer d\u00f6nd\u00fcren bir fonksiyon, ko\u015fullu ifadelerde kullan\u0131larak kodun \u00f6ng\u00f6r\u00fclemez hale getirilmesi sa\u011flanm\u0131\u015ft\u0131r. Bu durum, kodun anla\u015f\u0131lmas\u0131n\u0131 ve analiz edilmesini zorla\u015ft\u0131r\u0131r.</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdlib&gt;\n#include &lt;ctime&gt;\n\n// Rastgele opak boolean de\u011fer d\u00f6nd\u00fcren fonksiyon\nbool opak_boolean() {\n    srand(time(0)); // Rastgele say\u0131 \u00fcretici ba\u015flat\u0131l\u0131yor\n    return rand() % 2; // Rastgele true veya false d\u00f6ner\n}\n</code></pre> <pre><code>void gizli_islem(int a) {\n    bool durum = opak_boolean(); // Rastgele boolean ko\u015ful\n    if (a &gt; 10 &amp;&amp; durum) {\n        std::cout &lt;&lt; \"Gizli i\u015flem \u00e7al\u0131\u015ft\u0131r\u0131l\u0131yor, durum: true\" &lt;&lt; std::endl;\n    } else {\n        std::cout &lt;&lt; \"Ko\u015ful sa\u011flanmad\u0131, durum: false\" &lt;&lt; std::endl;\n    }\n}\n</code></pre> <pre><code>int main() {\n    gizli_islem(12); // Girdi de\u011feriyle fonksiyon \u00e7a\u011fr\u0131l\u0131yor\n    gizli_islem(7);  // Farkl\u0131 girdi de\u011feriyle tekrar \u00e7a\u011fr\u0131l\u0131yor\n    return 0;\n}\n</code></pre> <p>\u00d6zet: Bu kodda, <code>opak_boolean</code> fonksiyonu rastgele olarak <code>true</code> ya da <code>false</code> d\u00f6nd\u00fcr\u00fcr. Ko\u015fullu ifade, bu rastgele de\u011ferle birle\u015fti\u011finde sald\u0131rganlar i\u00e7in kodun analizi zorla\u015f\u0131r.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#172-sartlarn-karmasklastrlmas-ile-kodun-ongorulemez-hale-getirilmesi","title":"1.7.2. \u015eartlar\u0131n Karma\u015f\u0131kla\u015ft\u0131r\u0131lmas\u0131 ile Kodun \u00d6ng\u00f6r\u00fclemez Hale Getirilmesi","text":"<p>A\u00e7\u0131klama: Bu \u00f6rnek, boolean de\u011ferleriyle karma\u015f\u0131k ko\u015fullar olu\u015fturularak kodun \u00f6ng\u00f6r\u00fclemez hale getirilmesini sa\u011flar. Bu t\u00fcr karma\u015f\u0131k ko\u015fullar, kodun geri m\u00fchendislik s\u00fcrecini zorla\u015ft\u0131r\u0131r.</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdlib&gt;\n#include &lt;ctime&gt;\n\n// Karma\u015f\u0131k boolean d\u00f6nd\u00fcren fonksiyon\nbool karma\u015f\u0131k_boolean(int a) {\n    srand(time(0));\n    int b = rand() % 10;\n    return ((a + b) % 3 == 0) &amp;&amp; (a % 2 == 0);\n}\n</code></pre> <pre><code>void kontrol_et(int a) {\n    if (karma\u015f\u0131k_boolean(a)) {\n        std::cout &lt;&lt; \"Ko\u015ful sa\u011fland\u0131, karma\u015f\u0131k boolean: true\" &lt;&lt; std::endl;\n    } else {\n        std::cout &lt;&lt; \"Ko\u015ful sa\u011flanmad\u0131, karma\u015f\u0131k boolean: false\" &lt;&lt; std::endl;\n    }\n}\n</code></pre> <pre><code>int main() {\n    kontrol_et(12); // Girdi de\u011feriyle fonksiyon \u00e7a\u011fr\u0131l\u0131yor\n    kontrol_et(7);  // Farkl\u0131 girdi de\u011feriyle tekrar \u00e7a\u011fr\u0131l\u0131yor\n    return 0;\n}\n</code></pre> <p>\u00d6zet: Bu \u00f6rnekte, boolean de\u011feri hesaplamak i\u00e7in kullan\u0131lan karma\u015f\u0131k bir ko\u015ful seti bulunur. Bu \u015fartlar, kodun anla\u015f\u0131lmas\u0131n\u0131 ve analiz edilmesini zorla\u015ft\u0131r\u0131r, \u00e7\u00fcnk\u00fc her defas\u0131nda farkl\u0131 sonu\u00e7lar \u00fcretilebilir ve ko\u015fullar\u0131n ne zaman sa\u011fland\u0131\u011f\u0131n\u0131 anlamak g\u00fc\u00e7le\u015fir.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#18-fonksiyon-boolean-return-kodlarn-karmasklastrma-function-boolean-return-codes","title":"1.8. Fonksiyon Boolean Return Kodlar\u0131n\u0131 Karma\u015f\u0131kla\u015ft\u0131rma (Function Boolean Return Codes)","text":"<p>Teorik A\u00e7\u0131klama: Fonksiyonlar\u0131n d\u00f6n\u00fc\u015f de\u011ferlerini karma\u015f\u0131kla\u015ft\u0131rmak, kodun ak\u0131\u015f\u0131n\u0131 ve i\u015flevselli\u011fini anlamay\u0131 zorla\u015ft\u0131r\u0131r. Bu teknik, fonksiyonlar\u0131n hangi ko\u015fullar alt\u0131nda hangi de\u011ferleri d\u00f6nd\u00fcrd\u00fc\u011f\u00fcn\u00fc belirsiz hale getirir.</p> <p>\u00d6rnek \u00d6nerisi:</p> <ul> <li>Karma\u015f\u0131k matematiksel i\u015flemlerle ko\u015fullu d\u00f6n\u00fc\u015f de\u011ferleri \u00fcreten bir fonksiyon.</li> <li>Geri m\u00fchendislik i\u015flemine kar\u015f\u0131 fonksiyonlar\u0131n d\u00f6n\u00fc\u015f de\u011ferlerini tahmin edilemez hale getirme.</li> </ul>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#181-karmask-matematiksel-islemlerle-kosullu-donus-degerleri-ureten-bir-fonksiyon","title":"1.8.1. Karma\u015f\u0131k Matematiksel \u0130\u015flemlerle Ko\u015fullu D\u00f6n\u00fc\u015f De\u011ferleri \u00dcreten Bir Fonksiyon","text":"<p>A\u00e7\u0131klama: Bu \u00f6rnekte, fonksiyonun d\u00f6n\u00fc\u015f de\u011feri karma\u015f\u0131k matematiksel i\u015flemlerle belirlenir. Bu, fonksiyonun ne zaman <code>true</code> veya <code>false</code> d\u00f6nd\u00fcrd\u00fc\u011f\u00fcn\u00fc anlamay\u0131 zorla\u015ft\u0131rarak kodun analiz edilmesini g\u00fc\u00e7le\u015ftirir.</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cmath&gt; // Matematiksel fonksiyonlar i\u00e7in\n\n// Karma\u015f\u0131k matematiksel i\u015flemle boolean d\u00f6nd\u00fcren fonksiyon\nbool karma\u015f\u0131k_donus_degeri(int a, int b) {\n    int sonuc = static_cast&lt;int&gt;(pow(a, 3) - pow(b, 2)); // Karma\u015f\u0131k hesaplama\n    return (sonuc % 7 == 0); // Ko\u015fula g\u00f6re boolean d\u00f6ner\n}\n</code></pre>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#void-kontrol_etint-a-int-b-if-karmask_donus_degeria-b-stdcout-karmask-donus-degeri-true-stdendl-else-stdcout-karmask-donus-degeri-false-stdendl","title":"<pre><code>void kontrol_et(int a, int b) {\n    if (karma\u015f\u0131k_donus_degeri(a, b)) {\n        std::cout &lt;&lt; \"Karma\u015f\u0131k d\u00f6n\u00fc\u015f de\u011feri: true\" &lt;&lt; std::endl;\n    } else {\n        std::cout &lt;&lt; \"Karma\u015f\u0131k d\u00f6n\u00fc\u015f de\u011feri: false\" &lt;&lt; std::endl;\n    }\n}\n</code></pre>","text":"<pre><code>int main() {\n    kontrol_et(4, 2);  // Girdi de\u011ferleriyle fonksiyon \u00e7a\u011fr\u0131l\u0131yor\n    kontrol_et(7, 3);  // Farkl\u0131 girdi de\u011ferleriyle tekrar \u00e7a\u011fr\u0131l\u0131yor\n    return 0;\n}\n</code></pre> <p>\u00d6zet: Bu kodda, <code>karma\u015f\u0131k_donus_degeri</code> fonksiyonu <code>a</code> ve <code>b</code> de\u011ferlerine g\u00f6re karma\u015f\u0131k matematiksel i\u015flemler ger\u00e7ekle\u015ftirir. Hesaplamalar sonucunda <code>sonuc % 7 == 0</code> ko\u015fuluna g\u00f6re <code>true</code> veya <code>false</code> d\u00f6ner. Bu, fonksiyonun ne zaman hangi de\u011feri d\u00f6nd\u00fcrd\u00fc\u011f\u00fcn\u00fc anlamay\u0131 zorla\u015ft\u0131r\u0131r ve geri m\u00fchendislik i\u015flemlerini karma\u015f\u0131k hale getirir.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#182-geri-muhendislik-islemine-kars-fonksiyonlarn-donus-degerlerini-tahmin-edilemez-hale-getirme","title":"1.8.2. Geri M\u00fchendislik \u0130\u015flemine Kar\u015f\u0131 Fonksiyonlar\u0131n D\u00f6n\u00fc\u015f De\u011ferlerini Tahmin Edilemez Hale Getirme","text":"<p>A\u00e7\u0131klama: Bu \u00f6rnekte, fonksiyonlar\u0131n d\u00f6n\u00fc\u015f de\u011ferleri rastgele i\u015flemlerle belirsiz hale getirilir. B\u00f6ylece, fonksiyonlar\u0131n ne zaman hangi de\u011feri d\u00f6nd\u00fcrd\u00fc\u011f\u00fc d\u0131\u015far\u0131dan anla\u015f\u0131lmaz.</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdlib&gt;\n#include &lt;ctime&gt;\n\n// Geri m\u00fchendisli\u011fi zorla\u015ft\u0131rmak i\u00e7in rastgele i\u015flemlerle boolean d\u00f6nd\u00fcren fonksiyon\nbool tahmin_edilemez_donus(int a, int b) {\n    srand(time(0));\n    int rastgele = rand() % 100;\n    int sonuc = (a * b) + rastgele; // Rastgele say\u0131 ile i\u015flem\n    return (sonuc % 5 == 0); // Ko\u015fula g\u00f6re true veya false d\u00f6ner\n}\n</code></pre> <pre><code>void sonuc_kontrol(int a, int b) {\n    if (tahmin_edilemez_donus(a, b)) {\n        std::cout &lt;&lt; \"Tahmin edilemez d\u00f6n\u00fc\u015f de\u011feri: true\" &lt;&lt; std::endl;\n    } else {\n        std::cout &lt;&lt; \"Tahmin edilemez d\u00f6n\u00fc\u015f de\u011feri: false\" &lt;&lt; std::endl;\n    }\n}\n</code></pre> <pre><code>int main() {\n    sonuc_kontrol(6, 4); // Farkl\u0131 girdi de\u011ferleriyle fonksiyon \u00e7a\u011fr\u0131l\u0131yor\n    sonuc_kontrol(7, 5);\n    return 0;\n}\n</code></pre> <p>\u00d6zet: Bu \u00f6rnekte, <code>tahmin_edilemez_donus</code> fonksiyonu rastgele bir say\u0131 \u00fcreterek hesaplamalar\u0131na dahil eder. Bu rastgelelik, fonksiyonun ne zaman <code>true</code> veya <code>false</code> d\u00f6nd\u00fcrece\u011fini tahmin etmeyi imkans\u0131z hale getirir. Bu yakla\u015f\u0131m, geri m\u00fchendislik ve statik analiz ara\u00e7lar\u0131na kar\u015f\u0131 fonksiyonlar\u0131 daha korunakl\u0131 hale getirir.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#19-fonksiyon-parametrelerinin-gizlenmesi-obfuscation-of-function-parameters","title":"1.9. Fonksiyon Parametrelerinin Gizlenmesi (Obfuscation of Function Parameters)","text":"<p>Teorik A\u00e7\u0131klama: Fonksiyon parametrelerini gizlemek, fonksiyonlar\u0131n ald\u0131\u011f\u0131 verilerin ne oldu\u011funu ve nas\u0131l i\u015flendi\u011fini anlamay\u0131 zorla\u015ft\u0131r\u0131r. Bu teknik, parametrelerin anlam\u0131n\u0131 ve kullan\u0131m\u0131n\u0131 belirsiz hale getirir.</p> <p>\u00d6rnek \u00d6nerisi:</p> <ul> <li>Parametre isimlerinin anlams\u0131z hale getirildi\u011fi ve fonksiyonlar\u0131n i\u015flevinin d\u0131\u015far\u0131dan anla\u015f\u0131lmaz oldu\u011fu bir \u00f6rnek.</li> <li>Parametrelerin maskeleme y\u00f6ntemleriyle gizlenmesi.</li> </ul>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#191-parametre-isimlerinin-anlamsz-hale-getirilmesi","title":"1.9.1. Parametre \u0130simlerinin Anlams\u0131z Hale Getirilmesi","text":"<p>A\u00e7\u0131klama: Bu teknik, fonksiyon parametrelerinin isimlerini anlams\u0131z hale getirerek kodun anla\u015f\u0131lmas\u0131n\u0131 zorla\u015ft\u0131r\u0131r. D\u0131\u015far\u0131dan bak\u0131ld\u0131\u011f\u0131nda, fonksiyonun ne yapt\u0131\u011f\u0131 veya parametrelerin ne ama\u00e7la kullan\u0131ld\u0131\u011f\u0131 anla\u015f\u0131lmaz hale gelir.</p> <pre><code>#include &lt;iostream&gt;\n\n// Anlams\u0131z parametre isimleri ile tan\u0131mlanan fonksiyon\nint z4m1nq0(int p1, int p2) {\n    return p1 * p2 + (p1 - p2); // Karma\u015f\u0131k bir i\u015flem\n}\n</code></pre> <pre><code>int main() {\n    int sonuc = z4m1nq0(10, 5); // Fonksiyon \u00e7a\u011fr\u0131s\u0131\n    std::cout &lt;&lt; \"Sonu\u00e7: \" &lt;&lt; sonuc &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre> <p>\u00d6zet: Bu \u00f6rnekte, <code>z4m1nq0</code> gibi anlams\u0131z bir fonksiyon ismi ve <code>p1</code>, <code>p2</code> gibi parametre isimleri kullan\u0131lm\u0131\u015ft\u0131r. Parametrelerin ne oldu\u011fu ve nas\u0131l kullan\u0131ld\u0131\u011f\u0131 anla\u015f\u0131lmaz hale getirilmi\u015ftir. Bu, kodun geri m\u00fchendislik ile analiz edilmesini zorla\u015ft\u0131r\u0131r.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#192-parametrelerin-maskeleme-yontemleri-ile-gizlenmesi","title":"1.9.2. Parametrelerin Maskeleme Y\u00f6ntemleri ile Gizlenmesi","text":"<p>A\u00e7\u0131klama: Bu teknikte, parametreler maskeleme i\u015flemi ile gizlenir. Parametreler \u00e7al\u0131\u015fma zaman\u0131nda a\u00e7\u0131\u011fa \u00e7\u0131kar\u0131l\u0131r ve kodun ne yapt\u0131\u011f\u0131 d\u0131\u015far\u0131dan bak\u0131ld\u0131\u011f\u0131nda anla\u015f\u0131lamaz.</p> <pre><code>#include &lt;iostream&gt;\n\n// Maskeleme fonksiyonu\nint parametre_maskele(int param) {\n    return param ^ 0x5A; // XOR ile basit bir maskeleme\n}\n</code></pre> <pre><code>// Gizlenmi\u015f parametre ile i\u015flem yapan fonksiyon\nint gizli_fonksiyon(int a, int b) {\n    int gercek_a = parametre_maskele(a); // Parametre maskelemesini \u00e7\u00f6z\n    int gercek_b = parametre_maskele(b);\n    return gercek_a + gercek_b; // Ger\u00e7ek de\u011ferlerle i\u015flem yap\n}\n</code></pre> <pre><code>int main() {\n    int a = parametre_maskele(10); // Parametreler maskelenmi\u015f\n    int b = parametre_maskele(20);\n    int sonuc = gizli_fonksiyon(a, b); // Gizli fonksiyon \u00e7a\u011fr\u0131s\u0131\n    std::cout &lt;&lt; \"Sonu\u00e7: \" &lt;&lt; sonuc &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre> <p>\u00d6zet: Bu \u00f6rnekte, <code>parametre_maskele</code> fonksiyonu parametreleri maskeler ve daha sonra maskeleme \u00e7\u00f6z\u00fclerek fonksiyon i\u00e7inde ger\u00e7ek de\u011ferler kullan\u0131l\u0131r. Bu teknik, fonksiyonun ald\u0131\u011f\u0131 parametrelerin ne oldu\u011funu gizler ve sald\u0131rganlar\u0131n analiz etmesini zorla\u015ft\u0131r\u0131r.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#110-anlamsz-parametreler-ve-islemler-ekleyerek-kodun-analizini-zorlastrma-bogus-function-parameters-operations","title":"1.10. Anlams\u0131z Parametreler ve \u0130\u015flemler Ekleyerek Kodun Analizini Zorla\u015ft\u0131rma (Bogus Function Parameters &amp; Operations)","text":"<p>Teorik A\u00e7\u0131klama: Kodun analizini zorla\u015ft\u0131rmak i\u00e7in fonksiyonlara anlams\u0131z parametreler ve gereksiz i\u015flemler eklemek kullan\u0131l\u0131r. Bu teknik, sald\u0131rganlar\u0131n fonksiyonlar\u0131n ger\u00e7ek amac\u0131n\u0131 belirlemesini engeller.</p> <p>\u00d6rnek \u00d6nerisi:</p> <ul> <li>Fonksiyonlara gereksiz parametreler ekleyerek ve anlams\u0131z i\u015flemler yaparak kodun karma\u015f\u0131k hale getirildi\u011fi bir \u00f6rnek.</li> <li>Sald\u0131rganlar\u0131 yan\u0131ltacak anlams\u0131z hesaplama ve ko\u015fullar\u0131n eklendi\u011fi bir fonksiyon.</li> </ul>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#1101-fonksiyonlara-gereksiz-parametreler-ekleyerek-kodun-karmask-hale-getirilmesi","title":"1.10.1. Fonksiyonlara Gereksiz Parametreler Ekleyerek Kodun Karma\u015f\u0131k Hale Getirilmesi","text":"<p>A\u00e7\u0131klama: Bu teknik, fonksiyonlara gereksiz parametreler ekleyerek kodun anla\u015f\u0131lmas\u0131n\u0131 zorla\u015ft\u0131r\u0131r. Parametrelerin i\u015flevi olmad\u0131\u011f\u0131ndan, fonksiyonun ger\u00e7ek amac\u0131 belirsiz hale gelir.</p> <pre><code>#include &lt;iostream&gt;\n\n// Gereksiz parametreler i\u00e7eren fonksiyon\nint anlamsiz_fonksiyon(int a, int b, int gereksiz1, int gereksiz2) {\n    // Ger\u00e7ek i\u015flem sadece a ve b ile yap\u0131l\u0131r\n    return (a * b) + 10;\n}\n</code></pre> <pre><code>int main() {\n    // Gereksiz parametrelerle fonksiyon \u00e7a\u011fr\u0131s\u0131\n    int sonuc = anlamsiz_fonksiyon(5, 3, 100, 200);\n    std::cout &lt;&lt; \"Sonu\u00e7: \" &lt;&lt; sonuc &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre> <p>\u00d6zet: Bu kodda, <code>anlamsiz_fonksiyon</code> adl\u0131 fonksiyona gereksiz parametreler (<code>gereksiz1</code>, <code>gereksiz2</code>) eklenmi\u015ftir. Bu parametrelerin ger\u00e7ek bir i\u015flevi olmad\u0131\u011f\u0131 i\u00e7in, d\u0131\u015far\u0131dan bak\u0131ld\u0131\u011f\u0131nda fonksiyonun ne yapt\u0131\u011f\u0131 anla\u015f\u0131lmaz. Bu teknik, geri m\u00fchendislik i\u015flemlerini zorla\u015ft\u0131r\u0131r.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#1102-anlamsz-hesaplama-ve-kosullarn-eklendigi-bir-fonksiyon","title":"1.10.2. Anlams\u0131z Hesaplama ve Ko\u015fullar\u0131n Eklendi\u011fi Bir Fonksiyon","text":"<p>A\u00e7\u0131klama: Bu \u00f6rnekte, fonksiyona anlams\u0131z i\u015flemler ve gereksiz ko\u015fullar eklenerek kod karma\u015f\u0131k hale getirilir. Bu yakla\u015f\u0131m, fonksiyonun ger\u00e7ek amac\u0131n\u0131 gizleyerek analiz edilmesini zorla\u015ft\u0131r\u0131r.</p> <pre><code>#include &lt;iostream&gt;\n\n// Anlams\u0131z i\u015flemler ve ko\u015fullar i\u00e7eren fonksiyon\nint karmasik_fonksiyon(int a, int b, int c) {\n    int temp = a * b; // Ger\u00e7ek i\u015flem\n    if (c &gt; 100) { // Anlams\u0131z ko\u015ful\n        temp += c; // Anlams\u0131z i\u015flem\n    }\n    for (int i = 0; i &lt; c; i++) { // Gereksiz d\u00f6ng\u00fc\n        temp -= i; // Anlams\u0131z hesaplama\n    }\n    return temp;\n}\n</code></pre> <pre><code>int main() {\n    int sonuc = karmasik_fonksiyon(5, 3, 50); // Fonksiyon \u00e7a\u011fr\u0131s\u0131\n    std::cout &lt;&lt; \"Sonu\u00e7: \" &lt;&lt; sonuc &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre> <p>\u00d6zet: Bu kodda, fonksiyonun ana i\u015flemi <code>a * b</code> ile yap\u0131l\u0131r. Ancak gereksiz ko\u015fullar (<code>if (c &gt; 100)</code>) ve d\u00f6ng\u00fcler eklenerek kod karma\u015f\u0131k hale getirilmi\u015ftir. Anlams\u0131z i\u015flemler ve hesaplamalar, sald\u0131rganlar\u0131n fonksiyonun ger\u00e7ek i\u015flevini anlamas\u0131n\u0131 zorla\u015ft\u0131r\u0131r.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#111-kontrol-aksn-duzlestirerek-tahmin-edilemez-hale-getirme-control-flow-flattening","title":"1.11. Kontrol Ak\u0131\u015f\u0131n\u0131 D\u00fczle\u015ftirerek Tahmin Edilemez Hale Getirme (Control Flow Flattening)","text":"<p>Teorik A\u00e7\u0131klama: Kontrol ak\u0131\u015f\u0131n\u0131 d\u00fczle\u015ftirmek, kodun normal ak\u0131\u015f\u0131n\u0131 bozar ve program\u0131n ak\u0131\u015f\u0131n\u0131 tahmin etmeyi zorla\u015ft\u0131r\u0131r. Bu teknik, kontrol yap\u0131lar\u0131n\u0131 karma\u015f\u0131kla\u015ft\u0131rarak kodun analizini zorla\u015ft\u0131r\u0131r.</p> <p>\u00d6rnek \u00d6nerisi:</p> <ul> <li>D\u00fczle\u015ftirilmi\u015f kontrol ak\u0131\u015f\u0131yla ko\u015fullu ifadeler yerine durum tabanl\u0131 ge\u00e7i\u015flerin kullan\u0131ld\u0131\u011f\u0131 bir \u00f6rnek.</li> <li>Kod ak\u0131\u015f\u0131n\u0131n tahmin edilemez hale getirilmesi.</li> </ul>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#1111-durum-tabanl-gecislerin-kullanldg-duzlestirilmis-kontrol-aks","title":"1.11.1. Durum Tabanl\u0131 Ge\u00e7i\u015flerin Kullan\u0131ld\u0131\u011f\u0131 D\u00fczle\u015ftirilmi\u015f Kontrol Ak\u0131\u015f\u0131","text":"<p>A\u00e7\u0131klama: Bu \u00f6rnekte, kontrol ak\u0131\u015f\u0131 d\u00fczle\u015ftirilmi\u015f ve durum tabanl\u0131 ge\u00e7i\u015fler kullan\u0131larak kodun ak\u0131\u015f\u0131 karma\u015f\u0131k hale getirilmi\u015ftir. Bu y\u00f6ntem, ko\u015fullu ifadeler yerine durumlar \u00fczerinden ilerler ve kodun normal ak\u0131\u015f\u0131 bozulur.</p> <pre><code>#include &lt;iostream&gt;\n\nvoid kontrol_akisi_duzlestir(int a) {\n    int state = 0; // Ba\u015flang\u0131\u00e7 durumu\n    while (true) {\n        switch (state) {\n            case 0:\n                if (a &gt; 10) {\n                    state = 1; // Durum 1'e ge\u00e7\n                } else {\n                    state = 2; // Durum 2'ye ge\u00e7\n                }\n                break;\n            case 1:\n                std::cout &lt;&lt; \"Durum 1: a &gt; 10\" &lt;&lt; std::endl;\n                state = 3; // Son duruma ge\u00e7\n                break;\n            case 2:\n                std::cout &lt;&lt; \"Durum 2: a &lt;= 10\" &lt;&lt; std::endl;\n                state = 3; // Son duruma ge\u00e7\n                break;\n            case 3:\n                return; // Program sona erer\n        }\n    }\n}\n</code></pre> <pre><code>int main() {\n    kontrol_akisi_duzlestir(12); // Girdi de\u011ferine g\u00f6re durum tabanl\u0131 ak\u0131\u015f\n    kontrol_akisi_duzlestir(8);  // Farkl\u0131 girdi ile \u00e7a\u011fr\u0131l\u0131yor\n    return 0;\n}\n</code></pre> <p>\u00d6zet: Bu \u00f6rnekte, kontrol ak\u0131\u015f\u0131 d\u00fczle\u015ftirilmi\u015ftir ve <code>state</code> de\u011fi\u015fkeni ile duruma ba\u011fl\u0131 olarak hareket edilir. Ko\u015fullu ifadeler yerine, durum ge\u00e7i\u015fleri yap\u0131l\u0131r. Bu, program\u0131n ak\u0131\u015f\u0131n\u0131 tahmin etmeyi zorla\u015ft\u0131r\u0131r, \u00e7\u00fcnk\u00fc durum tabanl\u0131 bir yap\u0131 kullan\u0131ld\u0131\u011f\u0131nda hangi durumda hangi i\u015flem yap\u0131laca\u011f\u0131 d\u0131\u015far\u0131dan g\u00f6r\u00fcnmez hale gelir.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#1112-kod-aksn-tahmin-edilemez-hale-getirme","title":"1.11.2. Kod Ak\u0131\u015f\u0131n\u0131 Tahmin Edilemez Hale Getirme","text":"<p>A\u00e7\u0131klama: Bu \u00f6rnekte, kontrol ak\u0131\u015f\u0131n\u0131 d\u00fczle\u015ftirmek i\u00e7in tahmin edilemez durumlar eklenmi\u015ftir. Bu durum, kodun analizini zorla\u015ft\u0131r\u0131r ve sald\u0131rganlar\u0131n kod ak\u0131\u015f\u0131n\u0131 anlamas\u0131n\u0131 engeller.</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdlib&gt;\n#include &lt;ctime&gt;\n\n// Rastgele durumlar ile kontrol ak\u0131\u015f\u0131\nvoid tahmin_edilemez_kontrol_akisi(int a) {\n    srand(time(0)); // Rastgele say\u0131 \u00fcreteci\n    int state = rand() % 3; // Rastgele ba\u015flang\u0131\u00e7 durumu\n\n    while (true) {\n        switch (state) {\n            case 0:\n                std::cout &lt;&lt; \"Ba\u015flang\u0131\u00e7 durumu, a: \" &lt;&lt; a &lt;&lt; std::endl;\n                if (a &gt; 5) {\n                    state = 1; // Durum 1'e ge\u00e7\n                } else {\n                    state = 2; // Durum 2'ye ge\u00e7\n                }\n                break;\n            case 1:\n                std::cout &lt;&lt; \"Durum 1: a &gt; 5\" &lt;&lt; std::endl;\n                state = rand() % 3; // Rastgele durum de\u011fi\u015ftir\n                break;\n            case 2:\n                std::cout &lt;&lt; \"Durum 2: a &lt;= 5\" &lt;&lt; std::endl;\n                state = rand() % 3; // Rastgele durum de\u011fi\u015ftir\n                break;\n            case 3:\n                std::cout &lt;&lt; \"Program sona eriyor.\" &lt;&lt; std::endl;\n                return; // Program biter\n        }\n    }\n}\n</code></pre> <pre><code>int main() {\n    tahmin_edilemez_kontrol_akisi(7); // Fonksiyon \u00e7a\u011fr\u0131s\u0131\n    return 0;\n}\n</code></pre> <p>\u00d6zet: Bu kodda, rastgele durumlarla kontrol ak\u0131\u015f\u0131 y\u00f6netilir. Program her \u00e7al\u0131\u015ft\u0131\u011f\u0131nda farkl\u0131 bir ba\u015flang\u0131\u00e7 durumu ve farkl\u0131 bir ak\u0131\u015f olu\u015fabilir. Bu durum, kodun ak\u0131\u015f\u0131n\u0131 anlamay\u0131 ve analiz etmeyi zorla\u015ft\u0131r\u0131r. Kod, tahmin edilemez hale gelerek sald\u0131rganlar i\u00e7in daha g\u00fcvenli olur.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#112-cks-noktalarn-rastgele-hale-getirerek-kodun-ongorulebilirligini-azaltma-randomized-exit-points","title":"1.12. \u00c7\u0131k\u0131\u015f Noktalar\u0131n\u0131 Rastgele Hale Getirerek Kodun \u00d6ng\u00f6r\u00fclebilirli\u011fini Azaltma (Randomized Exit Points)","text":"<p>Teorik A\u00e7\u0131klama: \u00c7\u0131k\u0131\u015f noktalar\u0131n\u0131 rastgele hale getirmek, kodun ne zaman sona erece\u011fini belirsizle\u015ftirir. Bu teknik, program\u0131n kontrol ak\u0131\u015f\u0131n\u0131 tahmin etmeyi zorla\u015ft\u0131r\u0131r ve analiz ara\u00e7lar\u0131n\u0131n i\u015fini karma\u015f\u0131kla\u015ft\u0131r\u0131r.</p> <p>\u00d6rnek \u00d6nerisi:</p> <ul> <li>Rastgele belirlenen \u00e7\u0131k\u0131\u015f noktalar\u0131yla program\u0131n beklenmedik yerlerde sona erdi\u011fi bir \u00f6rnek.</li> <li>Program\u0131n farkl\u0131 ko\u015fullarda farkl\u0131 \u00e7\u0131k\u0131\u015f noktalar\u0131na sahip olmas\u0131.</li> </ul>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#121-rastgele-belirlenen-cks-noktalaryla-programn-beklenmedik-yerlerde-sona-ermesi","title":".12.1. Rastgele Belirlenen \u00c7\u0131k\u0131\u015f Noktalar\u0131yla Program\u0131n Beklenmedik Yerlerde Sona Ermesi","text":"<p>A\u00e7\u0131klama: Bu \u00f6rnekte, program\u0131n rastgele belirlenen ko\u015fullara ba\u011fl\u0131 olarak farkl\u0131 \u00e7\u0131k\u0131\u015f noktalar\u0131na sahip oldu\u011fu bir yap\u0131 olu\u015fturulmu\u015ftur. Bu yakla\u015f\u0131m, program\u0131n ne zaman ve nerede sona erece\u011fini belirsiz hale getirir.</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdlib&gt;\n#include &lt;ctime&gt;\n\n// Rastgele \u00e7\u0131k\u0131\u015f noktas\u0131 belirleyen fonksiyon\nvoid rastgele_cikis(int a) {\n    srand(time(0)); // Rastgele say\u0131 \u00fcreteci ba\u015flat\u0131l\u0131yor\n    int random_exit = rand() % 3; // 0, 1 veya 2 aras\u0131nda rastgele de\u011fer\n\n    std::cout &lt;&lt; \"\u0130\u015flem ba\u015flat\u0131ld\u0131...\" &lt;&lt; std::endl;\n\n    if (a &gt; 10 &amp;&amp; random_exit == 0) {\n        std::cout &lt;&lt; \"\u00c7\u0131k\u0131\u015f Noktas\u0131 1\" &lt;&lt; std::endl;\n        return; // Program burada sona erer\n    }\n\n    if (a &lt; 5 &amp;&amp; random_exit == 1) {\n        std::cout &lt;&lt; \"\u00c7\u0131k\u0131\u015f Noktas\u0131 2\" &lt;&lt; std::endl;\n        return; // Program burada sona erer\n    }\n\n    std::cout &lt;&lt; \"Normal i\u015fleyi\u015f devam ediyor.\" &lt;&lt; std::endl;\n    // Program buraya kadar devam ederse sona ermez\n}\n</code></pre> <pre><code>int main() {\n    rastgele_cikis(12); // Farkl\u0131 giri\u015fler ile test ediliyor\n    rastgele_cikis(3);\n    rastgele_cikis(7);\n    return 0;\n}\n</code></pre> <p>\u00d6zet: Bu kodda, <code>rastgele_cikis</code> fonksiyonu rastgele bir \u00e7\u0131k\u0131\u015f noktas\u0131 se\u00e7er. E\u011fer belirlenen rastgele ko\u015fullar sa\u011flan\u0131rsa, program beklenmedik bir noktada sona erer. Bu yakla\u015f\u0131m, kodun \u00f6ng\u00f6r\u00fclebilirli\u011fini azalt\u0131r ve analiz ara\u00e7lar\u0131 i\u00e7in program\u0131n ak\u0131\u015f\u0131n\u0131 takip etmeyi zorla\u015ft\u0131r\u0131r.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#1122-programn-farkl-kosullarda-farkl-cks-noktalarna-sahip-olmas","title":"1.12.2. Program\u0131n Farkl\u0131 Ko\u015fullarda Farkl\u0131 \u00c7\u0131k\u0131\u015f Noktalar\u0131na Sahip Olmas\u0131","text":"<p>A\u00e7\u0131klama: Bu \u00f6rnekte, program\u0131n farkl\u0131 ko\u015fullarda rastgele \u00e7\u0131k\u0131\u015f noktalar\u0131na sahip olmas\u0131 sa\u011flanm\u0131\u015ft\u0131r. Bu, kodun ak\u0131\u015f\u0131n\u0131 tahmin etmeyi zorla\u015ft\u0131r\u0131r ve kodun analizi s\u0131ras\u0131nda program\u0131n tam olarak ne zaman sona erece\u011fini belirsiz hale getirir.</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;cstdlib&gt;\n#include &lt;ctime&gt;\n\n// Farkl\u0131 ko\u015fullara g\u00f6re \u00e7\u0131k\u0131\u015f yapan fonksiyon\nvoid tahmin_edilemez_cikis(int a, int b) {\n    srand(time(0)); // Rastgele say\u0131 \u00fcretici\n    int random_exit = rand() % 4; // 0, 1, 2 veya 3\n\n    if (a &gt; b &amp;&amp; random_exit == 0) {\n        std::cout &lt;&lt; \"\u00c7\u0131k\u0131\u015f Noktas\u0131 1: a &gt; b\" &lt;&lt; std::endl;\n        return; // Program sona erer\n    }\n\n    if (b &gt; a &amp;&amp; random_exit == 1) {\n        std::cout &lt;&lt; \"\u00c7\u0131k\u0131\u015f Noktas\u0131 2: b &gt; a\" &lt;&lt; std::endl;\n        return; // Program burada sona erer\n    }\n\n    if (a == b &amp;&amp; random_exit == 2) {\n        std::cout &lt;&lt; \"\u00c7\u0131k\u0131\u015f Noktas\u0131 3: a == b\" &lt;&lt; std::endl;\n        return; // Program burada sona erer\n    }\n\n    std::cout &lt;&lt; \"Program normal \u015fekilde sona erdi.\" &lt;&lt; std::endl;\n}\n</code></pre> <pre><code>int main() {\n    tahmin_edilemez_cikis(5, 10); // Farkl\u0131 giri\u015fler ile test ediliyor\n    tahmin_edilemez_cikis(10, 5);\n    tahmin_edilemez_cikis(7, 7);\n    return 0;\n}\n</code></pre> <p>\u00d6zet: Bu kodda, program farkl\u0131 giri\u015f de\u011ferlerine ve rastgele se\u00e7ilen \u00e7\u0131k\u0131\u015f noktalar\u0131na g\u00f6re sona erer. <code>tahmin_edilemez_cikis</code> fonksiyonu, hem giri\u015f ko\u015fullar\u0131na hem de rastgele say\u0131lara g\u00f6re \u00e7\u0131k\u0131\u015f yapar. Bu yap\u0131, program\u0131n ne zaman sona erece\u011fini tahmin etmeyi zorla\u015ft\u0131rarak kodun analiz edilmesini engeller.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#113-son-surumde-loglamalarn-devre-ds-braklmas-logging-disabled-on-release","title":"1.13. Son S\u00fcr\u00fcmde Loglamalar\u0131n Devre D\u0131\u015f\u0131 B\u0131rak\u0131lmas\u0131 (Logging Disabled on Release)","text":"<p>Teorik A\u00e7\u0131klama: Loglama, geli\u015ftirme s\u00fcrecinde faydal\u0131 olsa da, son s\u00fcr\u00fcmlerde devre d\u0131\u015f\u0131 b\u0131rak\u0131lmas\u0131 g\u00fcvenlik a\u00e7\u0131s\u0131ndan \u00f6nemlidir. Loglar, hassas bilgileri a\u00e7\u0131\u011fa \u00e7\u0131karabilir ve sald\u0131rganlar\u0131n sistem hakk\u0131nda bilgi edinmesini kolayla\u015ft\u0131rabilir. Bu nedenle, loglaman\u0131n yaln\u0131zca geli\u015ftirme a\u015famas\u0131nda aktif olmas\u0131 sa\u011flanmal\u0131 ve son s\u00fcr\u00fcmlerde kapat\u0131lmal\u0131d\u0131r.</p> <p>\u00d6rnek \u00d6nerisi:</p> <ul> <li>Derleme a\u015famas\u0131nda <code>DEBUG</code> veya <code>RELEASE</code> modlar\u0131na g\u00f6re loglamay\u0131 devre d\u0131\u015f\u0131 b\u0131rakan bir makro \u00f6rne\u011fi.</li> <li>Son s\u00fcr\u00fcmde loglamalar\u0131n tamamen kald\u0131r\u0131ld\u0131\u011f\u0131 bir uygulama.</li> </ul>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#1131-derleme-asamasnda-debug-veya-release-modlarna-gore-loglamay-devre-ds-brakan-bir-makro-ornegi","title":"1.13.1. Derleme A\u015famas\u0131nda <code>DEBUG</code> veya <code>RELEASE</code> Modlar\u0131na G\u00f6re Loglamay\u0131 Devre D\u0131\u015f\u0131 B\u0131rakan Bir Makro \u00d6rne\u011fi","text":"<p>A\u00e7\u0131klama: Bu \u00f6rnekte, loglama i\u015flemleri <code>DEBUG</code> veya <code>RELEASE</code> modlar\u0131na ba\u011fl\u0131 olarak kontrol edilir. Geli\u015ftirme s\u0131ras\u0131nda (<code>DEBUG</code>) loglamalar aktif, son s\u00fcr\u00fcmde (<code>RELEASE</code>) devre d\u0131\u015f\u0131 b\u0131rak\u0131l\u0131r.</p> <pre><code>#include &lt;iostream&gt;\n\n// DEBUG veya RELEASE modlar\u0131na g\u00f6re loglama kontrol\u00fc\n#ifdef DEBUG\n    #define LOG(x) std::cout &lt;&lt; \"LOG: \" &lt;&lt; x &lt;&lt; std::endl;\n#else\n    #define LOG(x) // Bo\u015f tan\u0131m, loglama yap\u0131lmaz\n#endif\n</code></pre> <pre><code>void sistem_bilgisi() {\n    LOG(\"Sistem bilgileri al\u0131n\u0131yor...\");\n    // Di\u011fer i\u015flemler...\n    std::cout &lt;&lt; \"Sistem i\u015flemleri tamamland\u0131.\" &lt;&lt; std::endl;\n}\n</code></pre> <pre><code>int main() {\n    sistem_bilgisi();\n    return 0;\n}\n</code></pre> <p>\u00d6zet: Bu kodda, <code>DEBUG</code> modunda loglamalar aktifken, <code>RELEASE</code> modunda loglama makrosu bo\u015f tan\u0131mlanarak loglamalar devre d\u0131\u015f\u0131 b\u0131rak\u0131l\u0131r. Bu, son s\u00fcr\u00fcmde loglar\u0131n \u00e7\u0131kmas\u0131n\u0131 \u00f6nler ve hassas bilgilerin if\u015fa olmas\u0131n\u0131 engeller.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#1132-son-surumde-loglamalarn-tamamen-kaldrldg-bir-uygulama","title":"1.13.2. Son S\u00fcr\u00fcmde Loglamalar\u0131n Tamamen Kald\u0131r\u0131ld\u0131\u011f\u0131 Bir Uygulama","text":"<p>A\u00e7\u0131klama: Bu \u00f6rnek, son s\u00fcr\u00fcmde t\u00fcm loglama i\u015flemlerinin tamamen kald\u0131r\u0131ld\u0131\u011f\u0131 bir yap\u0131 i\u00e7erir. Geli\u015ftirme a\u015famas\u0131nda aktif olan loglar, son s\u00fcr\u00fcme ge\u00e7ildi\u011finde derleme s\u0131ras\u0131nda tamamen devre d\u0131\u015f\u0131 b\u0131rak\u0131l\u0131r.</p> <pre><code>#include &lt;iostream&gt;\n\n// DEBUG modunda loglama aktif, RELEASE modunda devre d\u0131\u015f\u0131\nvoid kritik_islem() {\n#ifdef DEBUG\n    std::cout &lt;&lt; \"DEBUG: Kritik i\u015flem ba\u015flat\u0131ld\u0131.\" &lt;&lt; std::endl;\n#endif\n    // Kritik i\u015flemler burada ger\u00e7ekle\u015ftirilir\n    std::cout &lt;&lt; \"Kritik i\u015flem tamamland\u0131.\" &lt;&lt; std::endl;\n}\n</code></pre> <pre><code>int main() {\n    kritik_islem();\n    return 0;\n}\n</code></pre> <p>\u00d6zet: Bu kodda, kritik i\u015flemler s\u0131ras\u0131nda yaln\u0131zca <code>DEBUG</code> modunda loglamalar g\u00f6r\u00fcn\u00fcr. <code>RELEASE</code> modunda loglama kodu derleme a\u015famas\u0131nda tamamen kald\u0131r\u0131l\u0131r, bu sayede son s\u00fcr\u00fcmde loglama i\u015flemi ger\u00e7ekle\u015fmez ve hassas verilerin s\u0131zd\u0131r\u0131lmas\u0131 \u00f6nlenir.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#2-java-ve-yorumlanan-diller-icin-kod-guclendirme-teknikleri","title":"2. Java ve Yorumlanan Diller \u0130\u00e7in Kod G\u00fc\u00e7lendirme Teknikleri","text":"<p>Java ve di\u011fer yorumlanan dillerde kod g\u00fc\u00e7lendirme, g\u00fcvenlik a\u00e7\u0131klar\u0131n\u0131 azaltmak ve geri m\u00fchendislik i\u015flemlerini zorla\u015ft\u0131rmak i\u00e7in kullan\u0131l\u0131r.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#21-proguard-ile-kod-obfuske-ve-koruma-proguard-code-obfuscation-and-code-shrink-protection","title":"2.1. Proguard ile Kod Obfuske ve Koruma (Proguard Code Obfuscation and Code Shrink Protection)","text":"<p>Teorik A\u00e7\u0131klama: Proguard, Java kodlar\u0131n\u0131 k\u00fc\u00e7\u00fcltme, optimize etme ve obfuske ederek kodun analiz edilmesini zorla\u015ft\u0131r\u0131r.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Proguard yap\u0131land\u0131rma dosyas\u0131 ile kodun k\u00fc\u00e7\u00fclt\u00fclmesi ve optimize edilmesi.</li> <li>Obfuske edilmi\u015f kodun test edilmesi ve hatalar\u0131n \u00e7\u00f6z\u00fclmesi.</li> <li>Proguard raporlar\u0131n\u0131n analizi ile hangi \u00f6\u011felerin obfuske edildi\u011finin tespiti.</li> </ol>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#211-proguard-yaplandrma-dosyas-ile-kodun-kucultulmesi-ve-optimize-edilmesi","title":"2.1.1 Proguard yap\u0131land\u0131rma dosyas\u0131 ile kodun k\u00fc\u00e7\u00fclt\u00fclmesi ve optimize edilmesi","text":"","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#1-mobil-android-projesi-gradle","title":"1. Mobil Android Projesi (Gradle)","text":"<p>Dosya Yap\u0131s\u0131:</p> <pre><code>/MyAndroidApp\n\u2502   \u251c\u2500\u2500 app\n\u2502       \u251c\u2500\u2500 src\n\u2502           \u251c\u2500\u2500 main\n\u2502               \u251c\u2500\u2500 java/com/example/myandroidapp/MainActivity.java\n\u2502               \u2514\u2500\u2500 res/layout/activity_main.xml\n\u2502       \u251c\u2500\u2500 build.gradle\n\u2502       \u251c\u2500\u2500 proguard-rules.pro\n\u251c\u2500\u2500 build.gradle\n\u251c\u2500\u2500 settings.gradle\n</code></pre>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#proje-dosyalar","title":"Proje Dosyalar\u0131:","text":"<p>app/build.gradle</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#android-compilesdkversion-30-defaultconfig-applicationid-comexamplemyandroidapp-minsdkversion-21-targetsdkversion-30-versioncode-1-versionname-10-buildtypes-release-minifyenabled-true-shrinkresources-true-proguardfiles-getdefaultproguardfileproguard-android-optimizetxt-proguard-rulespro","title":"<pre><code>android {\n    compileSdkVersion 30\n    defaultConfig {\n        applicationId \"com.example.myandroidapp\"\n        minSdkVersion 21\n        targetSdkVersion 30\n        versionCode 1\n        versionName \"1.0\"\n    }\n\n    buildTypes {\n        release {\n            minifyEnabled true\n            shrinkResources true\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n        }\n    }\n}\n</code></pre>","text":"<p>proguard-rules.pro</p> <pre><code># Keep MainActivity class and its methods\n-keep class com.example.myandroidapp.MainActivity { *; }\n</code></pre> <p>MainActivity.java</p> <pre><code>package com.example.myandroidapp;\n\nimport android.os.Bundle;\nimport androidx.appcompat.app.AppCompatActivity;\n\npublic class MainActivity extends AppCompatActivity {\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n    }\n}\n</code></pre> <p>activity_main.xml</p> <pre><code>&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;androidx.constraintlayout.widget.ConstraintLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"&gt;\n\n    &lt;TextView\n        android:id=\"@+id/textView\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Hello, Proguard!\"\n        android:textSize=\"20sp\"/&gt;\n&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;\n</code></pre>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#nasl-calstrlr","title":"Nas\u0131l \u00c7al\u0131\u015ft\u0131r\u0131l\u0131r:","text":"<ul> <li>Android Studio ile projeyi a\u00e7\u0131n.</li> <li><code>Build &gt; Generate Signed Bundle / APK</code> ile <code>release</code> APK olu\u015fturun.</li> <li>Proguard otomatik olarak kodu obfuske eder.</li> </ul>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#2-masaustu-java-projesi-gradle","title":"2. Masa\u00fcst\u00fc Java Projesi (Gradle)","text":"<p>Dosya Yap\u0131s\u0131:</p> <pre><code>/MyDesktopApp\n\u251c\u2500\u2500 src\n\u2502   \u2514\u2500\u2500 main\n\u2502       \u2514\u2500\u2500 java/com/example/mydesktopapp/Main.java\n\u251c\u2500\u2500 build.gradle\n\u251c\u2500\u2500 proguard-rules.pro\n</code></pre>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#proje-dosyalar_1","title":"Proje Dosyalar\u0131:","text":"<p>build.gradle</p> <pre><code>plugins {\n    id 'application'\n}\n\napplication {\n    mainClass = 'com.example.mydesktopapp.Main'\n}\n\ntask proguard(type: JavaExec) {\n    main = 'proguard.ProGuard'\n    classpath = configurations.proguard\n    args = '-injars', \"$buildDir/classes/java/main\", '-outjars', \"$buildDir/classes/obfuscated.jar\", '-libraryjars', \"$JAVA_HOME/jre/lib/rt.jar\", '@proguard-rules.pro'\n}\n\nconfigurations {\n    proguard\n}\n\ndependencies {\n    proguard 'net.sf.proguard:proguard-base:6.0.3'\n}\n</code></pre> <p>proguard-rules.pro</p> <pre><code>-keep class com.example.mydesktopapp.Main { *; }\n</code></pre> <p>Main.java</p> <pre><code>package com.example.mydesktopapp;\n\npublic class Main {\n    public static void main(String[] args) {\n        System.out.println(\"Hello, Proguard!\");\n    }\n}\n</code></pre>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#nasl-calstrlr_1","title":"Nas\u0131l \u00c7al\u0131\u015ft\u0131r\u0131l\u0131r:","text":"<ul> <li>Terminalde projenin bulundu\u011fu dizinde \u015fu komutu \u00e7al\u0131\u015ft\u0131r\u0131n</li> </ul> <pre><code>gradlew proguard\n</code></pre> <p>Obfuske edilmi\u015f kodu <code>build/classes/obfuscated.jar</code> i\u00e7inde bulabilirsiniz.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#3-javacard-projesi-maven","title":"3. JavaCard Projesi (Maven)","text":"<p>Dosya Yap\u0131s\u0131:</p> <pre><code>/MyJavaCardApp\n\u251c\u2500\u2500 src\n\u2502   \u2514\u2500\u2500 main\n\u2502       \u2514\u2500\u2500 java/com/example/myjavacardapp/MyJavaCardApplet.java\n\u251c\u2500\u2500 pom.xml\n\u251c\u2500\u2500 proguard-javacard-rules.pro\n</code></pre>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#proje-dosyalar_2","title":"Proje Dosyalar\u0131:","text":"<p>pom.xml</p> <pre><code>&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\n        http://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;groupId&gt;com.example&lt;/groupId&gt;\n    &lt;artifactId&gt;myjavacardapp&lt;/artifactId&gt;\n    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n\n    &lt;build&gt;\n        &lt;plugins&gt;\n            &lt;plugin&gt;\n                &lt;groupId&gt;com.github.wvengen&lt;/groupId&gt;\n                &lt;artifactId&gt;proguard-maven-plugin&lt;/artifactId&gt;\n                &lt;version&gt;2.0.15&lt;/version&gt;\n                &lt;executions&gt;\n                    &lt;execution&gt;\n                        &lt;goals&gt;\n                            &lt;goal&gt;proguard&lt;/goal&gt;\n                        &lt;/goals&gt;\n                    &lt;/execution&gt;\n                &lt;/executions&gt;\n            &lt;/plugin&gt;\n        &lt;/plugins&gt;\n    &lt;/build&gt;\n&lt;/project&gt;\n</code></pre> <p>proguard-javacard-rules.pro</p> <pre><code>-keep class javacard.framework.Applet { *; }\n-keep class com.example.myjavacardapp.MyJavaCardApplet { *; }\n</code></pre> <p>MyJavaCardApplet.java</p> <pre><code>package com.example.myjavacardapp;\n\nimport javacard.framework.*;\n\npublic class MyJavaCardApplet extends Applet {\n    public static void install(byte[] bArray, short bOffset, byte bLength) {\n        new MyJavaCardApplet().register(bArray, (short) (bOffset + 1), bArray[bOffset]);\n    }\n}\n</code></pre>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#nasl-calstrlr_2","title":"Nas\u0131l \u00c7al\u0131\u015ft\u0131r\u0131l\u0131r:","text":"<ul> <li>Terminalde projenin bulundu\u011fu dizinde \u015fu komutu \u00e7al\u0131\u015ft\u0131r\u0131n</li> </ul> <pre><code>mvn clean package\n</code></pre> <p>Maven, Proguard ile kodu k\u00fc\u00e7\u00fclterek <code>target</code> dizininde obfuske edilmi\u015f bir jar dosyas\u0131 olu\u015fturur.</p>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#2-masaustu-java-projesi-gradle_1","title":"2. Masa\u00fcst\u00fc Java Projesi (Gradle)","text":"","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#proguard-yaplandrma-dosyas-ile-kodun-kucultulmesi-ve-optimize-edilmesi","title":"Proguard Yap\u0131land\u0131rma Dosyas\u0131 ile Kodun K\u00fc\u00e7\u00fclt\u00fclmesi ve Optimize Edilmesi","text":"","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#acklama","title":"A\u00e7\u0131klama:","text":"<p>Proguard, masa\u00fcst\u00fc Java uygulamalar\u0131nda kullan\u0131lmayan kodlar\u0131 kald\u0131rarak, kodu k\u00fc\u00e7\u00fcltmek ve optimize etmek i\u00e7in kullan\u0131l\u0131r. Bu i\u015flem, uygulaman\u0131n boyutunu azalt\u0131r ve s\u0131n\u0131flar\u0131, metotlar\u0131, ve de\u011fi\u015fkenleri anlams\u0131z isimlerle de\u011fi\u015ftirerek kodun analiz edilmesini zorla\u015ft\u0131r\u0131r.</p> <p>Yap\u0131land\u0131rma dosyas\u0131: <code>proguard-rules.pro</code></p> <pre><code>-keep class com.example.mydesktopapp.Main { *; }\n-keepclassmembers class * {\n    public &lt;init&gt;(...);\n}\n</code></pre> <ul> <li>A\u00e7\u0131klama:   Bu yap\u0131land\u0131rmada <code>Main</code> s\u0131n\u0131f\u0131 korunuyor ve obfuske edilmiyor. Proguard\u2019\u0131n di\u011fer s\u0131n\u0131flar\u0131 k\u00fc\u00e7\u00fcltmesine ve optimize etmesine izin veriliyor. Kurallar, belirli s\u0131n\u0131flar\u0131 korurken geri kalanlar\u0131 obfuske etmeyi sa\u011flar.</li> </ul>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#obfuske-edilmis-kodun-test-edilmesi-ve-hatalarn-cozulmesi","title":"Obfuske Edilmi\u015f Kodun Test Edilmesi ve Hatalar\u0131n \u00c7\u00f6z\u00fclmesi","text":"<ol> <li> <p>Kodun Derlenmesi ve Obfuske Edilmesi:</p> </li> <li> <p>Terminalde projenizin bulundu\u011fu dizinde \u015fu komutu \u00e7al\u0131\u015ft\u0131rarak Proguard ile derleme i\u015flemini ba\u015flat\u0131n:</p> <pre><code>gradlew proguard\n</code></pre> </li> </ol> <ol> <li> <p>Test Ad\u0131mlar\u0131:</p> </li> <li> <p><code>build/classes/obfuscated.jar</code> dosyas\u0131na g\u00f6z at\u0131n ve program\u0131n \u00e7al\u0131\u015f\u0131p \u00e7al\u0131\u015fmad\u0131\u011f\u0131n\u0131 do\u011frulamak i\u00e7in test edin.</p> </li> <li> <p>E\u011fer uygulama beklendi\u011fi gibi \u00e7al\u0131\u015fm\u0131yorsa ve baz\u0131 kritik s\u0131n\u0131flar veya metotlar obfuske edilmi\u015fse, <code>proguard-rules.pro</code> dosyas\u0131na o s\u0131n\u0131f ve metotlar\u0131 koruyacak ek kurallar ekleyin.</p> </li> <li> <p>\u00d6rnek: E\u011fer <code>myMethod()</code> metodu \u00e7al\u0131\u015fm\u0131yorsa \u015fu kural\u0131 ekleyebilirsiniz:</p> <pre><code>-keep class com.example.mydesktopapp.MyClass {\n    public void myMethod();\n}\n</code></pre> </li> </ol>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#proguard-raporlarnn-analizi-ile-hangi-ogelerin-obfuske-edildiginin-tespiti","title":"Proguard Raporlar\u0131n\u0131n Analizi ile Hangi \u00d6\u011felerin Obfuske Edildi\u011finin Tespiti","text":"<ol> <li>Mapping Dosyas\u0131: Proguard, <code>mapping.txt</code> ad\u0131nda bir rapor olu\u015fturur. Bu dosya, hangi s\u0131n\u0131flar\u0131n, metodlar\u0131n ve de\u011fi\u015fkenlerin obfuske edildi\u011fini ve hangi isimlerle de\u011fi\u015ftirildi\u011fini g\u00f6sterir. <code>mapping.txt</code> dosyas\u0131n\u0131 analiz ederek, hangi \u00f6\u011felerin korundu\u011funu ve hangilerinin obfuske edildi\u011fini \u00f6\u011frenebilirsiniz.</li> </ol> <p>\u00d6rnek Mapping Dosyas\u0131:</p> <pre><code>com.example.mydesktopapp.Main -&gt; a:\n    void main(java.lang.String[]) -&gt; a\n    int myVariable -&gt; b\n</code></pre> <ul> <li>A\u00e7\u0131klama:   Bu \u00f6rnekte <code>com.example.mydesktopapp.Main</code> s\u0131n\u0131f\u0131 <code>a</code> olarak, <code>myVariable</code> ise <code>b</code> olarak de\u011fi\u015ftirilmi\u015ftir. Mapping dosyas\u0131, hata ay\u0131klamak veya korunan s\u0131n\u0131flar\u0131n durumunu kontrol etmek i\u00e7in kullan\u0131l\u0131r.</li> </ul>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#3-javacard-projesi-maven_1","title":"3. JavaCard Projesi (Maven)","text":"","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#proguard-yaplandrma-dosyas-ile-kodun-kucultulmesi-ve-optimize-edilmesi_1","title":"Proguard Yap\u0131land\u0131rma Dosyas\u0131 ile Kodun K\u00fc\u00e7\u00fclt\u00fclmesi ve Optimize Edilmesi","text":"","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#acklama_1","title":"A\u00e7\u0131klama:","text":"<p>JavaCard projelerinde, Proguard kullan\u0131larak s\u0131n\u0131flar ve metotlar k\u00fc\u00e7\u00fclt\u00fcl\u00fcr ve optimize edilir. JavaCard\u2019\u0131n s\u0131n\u0131rl\u0131 kaynaklar\u0131 nedeniyle kod k\u00fc\u00e7\u00fcltme ve optimize i\u015flemleri b\u00fcy\u00fck \u00f6nem ta\u015f\u0131r.</p> <p>Yap\u0131land\u0131rma dosyas\u0131: <code>proguard-javacard-rules.pro</code></p> <pre><code>-keep class javacard.framework.Applet { *; }\n-keep class com.example.myjavacardapp.MyJavaCardApplet { *; }\n</code></pre> <ul> <li>A\u00e7\u0131klama:   Bu yap\u0131land\u0131rmada JavaCard framework\u2019\u00fc i\u00e7inde yer alan <code>Applet</code> s\u0131n\u0131f\u0131 ve uygulamam\u0131zdaki <code>MyJavaCardApplet</code> s\u0131n\u0131f\u0131 korunuyor. Geri kalan s\u0131n\u0131flar k\u00fc\u00e7\u00fclt\u00fclecek ve obfuske edilecektir.</li> </ul>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#obfuske-edilmis-kodun-test-edilmesi-ve-hatalarn-cozulmesi_1","title":"Obfuske Edilmi\u015f Kodun Test Edilmesi ve Hatalar\u0131n \u00c7\u00f6z\u00fclmesi","text":"<ol> <li> <p>Kodun Derlenmesi ve Obfuske Edilmesi:</p> </li> <li> <p>Terminalde \u015fu komutu \u00e7al\u0131\u015ft\u0131rarak Maven ile Proguard i\u015flemini ba\u015flat\u0131n:</p> <pre><code>mvn clean package\n</code></pre> </li> </ol> <ol> <li> <p>Test Ad\u0131mlar\u0131:</p> </li> <li> <p><code>target/myjavacardapp-obfuscated.jar</code> dosyas\u0131na g\u00f6z at\u0131n ve uygulaman\u0131n do\u011fru \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131 test edin.</p> </li> <li> <p>E\u011fer baz\u0131 s\u0131n\u0131flar ya da metotlar gerekti\u011fi \u015fekilde \u00e7al\u0131\u015fm\u0131yorsa, bu s\u0131n\u0131flar\u0131 <code>proguard-javacard-rules.pro</code> dosyas\u0131na ekleyerek koruyabilirsiniz.</p> </li> <li> <p>\u00d6rnek: E\u011fer <code>javacard.framework.ISO7816</code> s\u0131n\u0131f\u0131 obfuske edilmi\u015fse ve hataya neden oluyorsa, bu s\u0131n\u0131f\u0131 koruma kural\u0131 ekleyin:</p> <pre><code>-keep class javacard.framework.ISO7816 { *; }\n</code></pre> </li> </ol>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#proguard-raporlarnn-analizi-ile-hangi-ogelerin-obfuske-edildiginin-tespiti_1","title":"Proguard Raporlar\u0131n\u0131n Analizi ile Hangi \u00d6\u011felerin Obfuske Edildi\u011finin Tespiti","text":"<ol> <li>Mapping Dosyas\u0131: Maven ile olu\u015fturulan Proguard raporu, <code>mapping.txt</code> dosyas\u0131 alt\u0131nda bulunur. Bu dosya, hangi s\u0131n\u0131flar\u0131n, metodlar\u0131n ve de\u011fi\u015fkenlerin isimlerinin obfuske edildi\u011fini g\u00f6sterir.</li> </ol> <p>\u00d6rnek Mapping Dosyas\u0131:</p> <pre><code>com.example.myjavacardapp.MyJavaCardApplet -&gt; a:\n    void install(byte[], short, byte) -&gt; a\n</code></pre> <ul> <li>A\u00e7\u0131klama: <code>com.example.myjavacardapp.MyJavaCardApplet</code> s\u0131n\u0131f\u0131 <code>a</code> olarak de\u011fi\u015ftirilmi\u015f, <code>install()</code> metodu ise <code>a</code> olarak adland\u0131r\u0131lm\u0131\u015ft\u0131r. Bu rapor sayesinde kodun nas\u0131l obfuske edildi\u011fini g\u00f6rebilir ve hangi \u00f6\u011felerin de\u011fi\u015ftirilip de\u011fi\u015ftirilmedi\u011fini kontrol edebilirsiniz.</li> </ul>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#22-cihaz-baglama-icin-ayr-parmak-izi-depolama-separated-fingerprint-storage-for-device-binding","title":"2.2. Cihaz Ba\u011flama \u0130\u00e7in Ayr\u0131 Parmak \u0130zi Depolama (Separated Fingerprint Storage for Device Binding)","text":"<p>Teorik A\u00e7\u0131klama: Cihaz\u0131n benzersiz \u00f6zelliklerini kullanarak, uygulaman\u0131n yaln\u0131zca belirli bir cihazda \u00e7al\u0131\u015fmas\u0131n\u0131 sa\u011flamak i\u00e7in kullan\u0131lan bir tekniktir.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Cihaz parmak izinin \u015fifrelenerek g\u00fcvenli bir \u015fekilde depolanmas\u0131.</li> <li>Parmak izi do\u011frulamas\u0131 ile uygulaman\u0131n cihaz \u00fczerinde \u00e7al\u0131\u015fmas\u0131n\u0131 sa\u011flama.</li> <li>Parmak izi verilerinin gizlenmesi ve sald\u0131r\u0131lara kar\u015f\u0131 korunmas\u0131.</li> </ol>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#221-cihaz-parmak-izinin-sifrelenerek-guvenli-bir-sekilde-depolanmas","title":"2.2.1. Cihaz Parmak \u0130zinin \u015eifrelenerek G\u00fcvenli Bir \u015eekilde Depolanmas\u0131","text":"<p>A\u00e7\u0131klama: Cihaz\u0131n benzersiz bir parmak izi, genellikle donan\u0131m veya sistem \u00f6zelliklerinden al\u0131nan bilgilerden olu\u015fturulur. Bu parmak izi \u015fifrelenerek g\u00fcvenli bir \u015fekilde cihazda saklan\u0131r.</p> <p>Java \u00d6rne\u011fi:</p> <pre><code>import java.nio.charset.StandardCharsets;\nimport java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.util.Base64;\n\npublic class DeviceFingerprint {\n\n    // Benzersiz bir cihaz parmak izi olu\u015fturma\n    public static String generateFingerprint(String deviceID, String hardwareSerial) throws NoSuchAlgorithmException {\n        String rawFingerprint = deviceID + hardwareSerial;\n\n        // SHA-256 ile cihaz parmak izini \u015fifreleme\n        MessageDigest digest = MessageDigest.getInstance(\"SHA-256\");\n        byte[] encodedHash = digest.digest(rawFingerprint.getBytes(StandardCharsets.UTF_8));\n\n        // \u015eifrelenmi\u015f parmak izini Base64 ile encode etme\n        return Base64.getEncoder().encodeToString(encodedHash);\n    }\n</code></pre> <pre><code>    public static void main(String[] args) {\n        try {\n            // Benzersiz cihaz bilgileri\n            String deviceID = \"device12345\";\n            String hardwareSerial = \"hwserial67890\";\n\n            // Parmak izi olu\u015fturulup \u015fifreleniyor\n            String fingerprint = generateFingerprint(deviceID, hardwareSerial);\n            System.out.println(\"\u015eifrelenmi\u015f Parmak \u0130zi: \" + fingerprint);\n\n        } catch (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre> <p>\u00d6zet:</p> <ul> <li><code>generateFingerprint</code> metodu, cihazdan elde edilen <code>deviceID</code> ve <code>hardwareSerial</code> bilgilerini kullanarak bir cihaz parmak izi olu\u015fturur.</li> <li>Parmak izi SHA-256 algoritmas\u0131yla \u015fifrelenir ve Base64 format\u0131nda saklanabilir</li> </ul>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#222-parmak-izi-dogrulamas-ile-uygulamann-cihaz-uzerinde-calsmasn-saglama","title":"2.2.2. Parmak \u0130zi Do\u011frulamas\u0131 ile Uygulaman\u0131n Cihaz \u00dczerinde \u00c7al\u0131\u015fmas\u0131n\u0131 Sa\u011flama","text":"<p>A\u00e7\u0131klama: Cihaz parmak izi, yaln\u0131zca belirli bir cihazda uygulaman\u0131n \u00e7al\u0131\u015fmas\u0131n\u0131 sa\u011flamak i\u00e7in do\u011frulan\u0131r. Parmak izi e\u015fle\u015fmedi\u011finde uygulama \u00e7al\u0131\u015ft\u0131r\u0131lmaz.</p> <p>Java \u00d6rne\u011fi:</p> <pre><code>import java.security.MessageDigest;\nimport java.security.NoSuchAlgorithmException;\nimport java.nio.charset.StandardCharsets;\nimport java.util.Base64;\n\npublic class DeviceFingerprintCheck {\n\n    // Daha \u00f6nce saklanan \u015fifrelenmi\u015f parmak izi\n    private static final String STORED_FINGERPRINT = \"storedFingerprintValue\"; // Bu de\u011feri parmak izi \u015fifreleme s\u0131ras\u0131nda al\u0131yoruz\n</code></pre> <pre><code>    public static String generateFingerprint(String deviceID, String hardwareSerial) throws NoSuchAlgorithmException {\n        String rawFingerprint = deviceID + hardwareSerial;\n\n        // Parmak izini tekrar olu\u015fturma\n        MessageDigest digest = MessageDigest.getInstance(\"SHA-256\");\n        byte[] encodedHash = digest.digest(rawFingerprint.getBytes(StandardCharsets.UTF_8));\n\n        return Base64.getEncoder().encodeToString(encodedHash);\n    }\n</code></pre> <pre><code>    public static boolean verifyFingerprint(String deviceID, String hardwareSerial) throws NoSuchAlgorithmException {\n        // \u015eu anki cihaz\u0131n parmak izi\n        String currentFingerprint = generateFingerprint(deviceID, hardwareSerial);\n\n        // Daha \u00f6nce saklanan parmak izi ile kar\u015f\u0131la\u015ft\u0131rma\n        return STORED_FINGERPRINT.equals(currentFingerprint);\n    }\n</code></pre> <pre><code>    public static void main(String[] args) {\n        try {\n            // Ger\u00e7ek cihaz bilgileri (\u00f6rnek olarak)\n            String deviceID = \"device12345\";\n            String hardwareSerial = \"hwserial67890\";\n\n            // Parmak izi do\u011frulama\n            if (verifyFingerprint(deviceID, hardwareSerial)) {\n                System.out.println(\"Parmak izi do\u011fruland\u0131, uygulama bu cihazda \u00e7al\u0131\u015fabilir.\");\n            } else {\n                System.out.println(\"Parmak izi do\u011frulanamad\u0131, uygulama bu cihazda \u00e7al\u0131\u015famaz.\");\n            }\n\n        } catch (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre> <p>\u00d6zet:</p> <ul> <li><code>verifyFingerprint</code> metodu, mevcut cihaz\u0131n parmak izini daha \u00f6nce depolanan parmak izi ile kar\u015f\u0131la\u015ft\u0131r\u0131r.</li> <li>E\u011fer parmak izleri e\u015fle\u015firse, uygulama cihazda \u00e7al\u0131\u015fabilir.</li> </ul>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#223-parmak-izi-verilerinin-gizlenmesi-ve-saldrlara-kars-korunmas","title":"2.2.3. Parmak \u0130zi Verilerinin Gizlenmesi ve Sald\u0131r\u0131lara Kar\u015f\u0131 Korunmas\u0131","text":"<p>A\u00e7\u0131klama: Parmak izi verileri g\u00fcvenli bir \u015fekilde saklanmal\u0131d\u0131r. \u015eifrelenmi\u015f parmak izi verisi bir dosyada veya g\u00fcvenli bir veri deposunda saklanabilir.</p> <p>Java \u00d6rne\u011fi:</p> <pre><code>import javax.crypto.Cipher;\nimport javax.crypto.KeyGenerator;\nimport javax.crypto.SecretKey;\nimport javax.crypto.spec.SecretKeySpec;\nimport java.util.Base64;\n\npublic class SecureFingerprintStorage {\n\n    // \u015eifreleme anahtar\u0131 (G\u00fcvenli bir \u015fekilde saklanmal\u0131)\n    private static final String KEY = \"1234567890123456\"; // 16-byte key\n</code></pre> <pre><code>    // Cihaz parmak izini AES ile \u015fifreleme\n    public static String encryptFingerprint(String fingerprint) throws Exception {\n        SecretKey secretKey = new SecretKeySpec(KEY.getBytes(), \"AES\");\n        Cipher cipher = Cipher.getInstance(\"AES\");\n        cipher.init(Cipher.ENCRYPT_MODE, secretKey);\n        byte[] encryptedData = cipher.doFinal(fingerprint.getBytes());\n        return Base64.getEncoder().encodeToString(encryptedData);\n    }\n</code></pre> <pre><code>    // \u015eifrelenmi\u015f cihaz parmak izini \u00e7\u00f6zme\n    public static String decryptFingerprint(String encryptedFingerprint) throws Exception {\n        SecretKey secretKey = new SecretKeySpec(KEY.getBytes(), \"AES\");\n        Cipher cipher = Cipher.getInstance(\"AES\");\n        cipher.init(Cipher.DECRYPT_MODE, secretKey);\n        byte[] decryptedData = cipher.doFinal(Base64.getDecoder().decode(encryptedFingerprint));\n        return new String(decryptedData);\n    }\n</code></pre> <pre><code>    public static void main(String[] args) {\n        try {\n            String fingerprint = \"uniqueDeviceFingerprint\"; // \u00d6rnek parmak izi\n\n            // Parmak izini \u015fifreleme\n            String encryptedFingerprint = encryptFingerprint(fingerprint);\n            System.out.println(\"\u015eifrelenmi\u015f Parmak \u0130zi: \" + encryptedFingerprint);\n\n            // Parmak izini \u00e7\u00f6zme\n            String decryptedFingerprint = decryptFingerprint(encryptedFingerprint);\n            System.out.println(\"\u00c7\u00f6z\u00fclen Parmak \u0130zi: \" + decryptedFingerprint);\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre> <p>\u00d6zet:</p> <ul> <li><code>encryptFingerprint</code> metodu, cihaz parmak izini AES ile \u015fifreler.</li> <li><code>decryptFingerprint</code> metodu, \u015fifrelenmi\u015f parmak izini \u00e7\u00f6zer. Bu sayede parmak izi g\u00fcvenli bir \u015fekilde saklan\u0131r ve yaln\u0131zca yetkili ki\u015filer taraf\u0131ndan eri\u015filebilir.</li> </ul>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#ozet","title":"\u00d6zet:","text":"<ol> <li>Parmak \u0130zinin \u015eifrelenerek Depolanmas\u0131: Cihaz\u0131n benzersiz \u00f6zelliklerinden parmak izi olu\u015fturulup \u015fifrelenir ve g\u00fcvenli bir \u015fekilde saklan\u0131r.</li> <li>Parmak \u0130zi Do\u011frulamas\u0131: Uygulaman\u0131n belirli bir cihazda \u00e7al\u0131\u015f\u0131p \u00e7al\u0131\u015fmad\u0131\u011f\u0131 do\u011frulan\u0131r.</li> <li>Verilerin Gizlenmesi ve Korunmas\u0131: Parmak izi verileri AES gibi g\u00fcvenli algoritmalarla \u015fifrelenir ve sald\u0131r\u0131lara kar\u015f\u0131 korunur.</li> </ol>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#23-yerel-kutuphane-jni-api-obfuske-etme-native-library-jni-api-obfuscation","title":"2.3. Yerel K\u00fct\u00fcphane JNI API Obfuske Etme (Native Library JNI API Obfuscation)","text":"<p>Teorik A\u00e7\u0131klama: Java Native Interface (JNI) kullan\u0131larak \u00e7a\u011fr\u0131lan yerel k\u00fct\u00fcphanelerin obfuske edilmesi, geri m\u00fchendislik i\u015flemlerini zorla\u015ft\u0131r\u0131r.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>JNI fonksiyon isimlerinin rastgele karakterlerle de\u011fi\u015ftirilmesi.</li> <li>JNI parametrelerinin gizlenmesi ve anla\u015f\u0131lmas\u0131n\u0131 zorla\u015ft\u0131rma.</li> <li>JNI hata y\u00f6netimi ile sald\u0131rganlar\u0131n hatalar\u0131 analiz etmesini engelleme.</li> </ol>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#231-jni-fonksiyon-isimlerinin-rastgele-karakterlerle-degistirilmesi","title":"2.3.1. JNI Fonksiyon \u0130simlerinin Rastgele Karakterlerle De\u011fi\u015ftirilmesi","text":"<p>A\u00e7\u0131klama: JNI fonksiyonlar\u0131n\u0131n isimleri rastgele karakterlerle de\u011fi\u015ftirilerek, yerel k\u00fct\u00fcphaneye yap\u0131lan \u00e7a\u011fr\u0131lar\u0131n anla\u015f\u0131lmas\u0131n\u0131 zorla\u015ft\u0131rabilirsiniz. Bu, kodun geri m\u00fchendislik i\u015flemine kar\u015f\u0131 korunmas\u0131n\u0131 sa\u011flar.</p> <p>Java Kodu:</p> <pre><code>public class MyJNIExample {\n    // Rastgele isimlendirilmi\u015f JNI fonksiyonu\n    public native void nJx57F(); // Rastgele isimli JNI fonksiyonu\n\n    static {\n        System.loadLibrary(\"myNativeLib\");\n    }\n\n    public static void main(String[] args) {\n        MyJNIExample example = new MyJNIExample();\n        example.nJx57F(); // Rastgele isimli fonksiyonu \u00e7a\u011f\u0131rma\n    }\n}\n</code></pre> <p>C Kodu (Yerel K\u00fct\u00fcphane - myNativeLib.c):</p> <pre><code>#include &lt;jni.h&gt;\n#include &lt;stdio.h&gt;\n#include \"MyJNIExample.h\"\n\n// Rastgele isimlendirilmi\u015f JNI fonksiyonu\nJNIEXPORT void JNICALL Java_MyJNIExample_nJx57F(JNIEnv *env, jobject obj) {\n    printf(\"Yerel k\u00fct\u00fcphane fonksiyonu \u00e7al\u0131\u015ft\u0131!\\n\");\n}\n</code></pre> <p>\u00d6zet:</p> <ul> <li>JNI fonksiyonu <code>nJx57F()</code> gibi rastgele bir isimle tan\u0131mlanm\u0131\u015ft\u0131r. Bu, geri m\u00fchendislik yapan bir ki\u015finin fonksiyonun ne yapt\u0131\u011f\u0131n\u0131 anlamas\u0131n\u0131 zorla\u015ft\u0131r\u0131r.</li> </ul>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#232-jni-parametrelerinin-gizlenmesi-ve-anlaslmasn-zorlastrma","title":"2.3.2. JNI Parametrelerinin Gizlenmesi ve Anla\u015f\u0131lmas\u0131n\u0131 Zorla\u015ft\u0131rma","text":"<p>A\u00e7\u0131klama: JNI fonksiyonlar\u0131na g\u00f6nderilen parametreler anla\u015f\u0131lmas\u0131n\u0131 zorla\u015ft\u0131racak \u015fekilde gizlenebilir. \u00d6rne\u011fin, parametreler bir diziyle veya \u015fifreli veriyle g\u00f6nderilebilir.</p> <p>Java Kodu:</p> <pre><code>public class MyJNIExample {\n    // Rastgele parametre isimlendirilmi\u015f JNI fonksiyonu\n    public native void obfuscatedJNI(byte[] encryptedData); \n\n    static {\n        System.loadLibrary(\"myNativeLib\");\n    }\n\n    public static void main(String[] args) {\n        MyJNIExample example = new MyJNIExample();\n\n        // Parametre olarak \u015fifrelenmi\u015f veri g\u00f6nderme\n        byte[] encryptedData = { 0x12, 0x34, 0x56 };\n        example.obfuscatedJNI(encryptedData);\n    }\n}\n</code></pre> <p>C Kodu (Yerel K\u00fct\u00fcphane - myNativeLib.c):</p> <pre><code>#include &lt;jni.h&gt;\n#include &lt;stdio.h&gt;\n#include \"MyJNIExample.h\"\n\n// Rastgele parametreli JNI fonksiyonu\nJNIEXPORT void JNICALL Java_MyJNIExample_obfuscatedJNI(JNIEnv *env, jobject obj, jbyteArray encryptedData) {\n    jsize length = (*env)-&gt;GetArrayLength(env, encryptedData);\n    jbyte *data = (*env)-&gt;GetByteArrayElements(env, encryptedData, 0);\n\n    printf(\"Veri uzunlu\u011fu: %d\\n\", length);\n\n    for (int i = 0; i &lt; length; i++) {\n        printf(\"Veri %d: %x\\n\", i, data[i]);\n    }\n\n    (*env)-&gt;ReleaseByteArrayElements(env, encryptedData, data, 0);\n}\n</code></pre> <p>\u00d6zet:</p> <ul> <li>JNI fonksiyonu bir byte dizisi al\u0131r ve veriler \u015fifrelenmi\u015f veya anlams\u0131z \u015fekilde saklanarak fonksiyonun ne yapt\u0131\u011f\u0131 daha zor anla\u015f\u0131l\u0131r hale getirilir.</li> </ul>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#233-jni-hata-yonetimi-ile-saldrganlarn-hatalar-analiz-etmesini-engelleme","title":"2.3.3. JNI Hata Y\u00f6netimi ile Sald\u0131rganlar\u0131n Hatalar\u0131 Analiz Etmesini Engelleme","text":"<p>A\u00e7\u0131klama: JNI fonksiyonlar\u0131nda meydana gelen hatalar sald\u0131rganlar taraf\u0131ndan analiz edilmemelidir. Bunun i\u00e7in \u00f6zel hata y\u00f6netimi uygulan\u0131r ve detayl\u0131 hata mesajlar\u0131 saklan\u0131r.</p> <p>Java Kodu:</p> <pre><code>public class MyJNIExample {\n    public native void performTask();\n\n    static {\n        System.loadLibrary(\"myNativeLib\");\n    }\n\n    public static void main(String[] args) {\n        MyJNIExample example = new MyJNIExample();\n        try {\n            example.performTask();\n        } catch (Exception e) {\n            System.out.println(\"Bir hata olu\u015ftu.\");\n        }\n    }\n}\n</code></pre> <p>C Kodu (Yerel K\u00fct\u00fcphane - myNativeLib.c):</p> <pre><code>#include &lt;jni.h&gt;\n#include &lt;stdio.h&gt;\n#include \"MyJNIExample.h\"\n\n// \u00d6zel hata y\u00f6netimi\nJNIEXPORT void JNICALL Java_MyJNIExample_performTask(JNIEnv *env, jobject obj) {\n    // Hata mesaj\u0131 detays\u0131z\n    if (/* Bir hata meydana gelirse */) {\n        printf(\"Bir hata meydana geldi\\n\");\n        return;\n    }\n\n    // Normal i\u015flem\n    printf(\"G\u00f6rev ba\u015far\u0131yla tamamland\u0131.\\n\");\n}\n</code></pre> <p>\u00d6zet:</p> <ul> <li>Hata meydana geldi\u011finde yaln\u0131zca genel bir mesaj (\"Bir hata meydana geldi\") g\u00f6sterilir. Bu, sald\u0131rganlar\u0131n hatalardan fazla bilgi edinmesini engeller.</li> </ul>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#ozet_1","title":"\u00d6zet:","text":"<ol> <li>JNI Fonksiyon \u0130simlerinin Rastgelele\u015ftirilmesi: Fonksiyon isimlerini rastgele karakterlerle de\u011fi\u015ftirerek analiz edilmeyi zorla\u015ft\u0131rabilirsiniz.</li> <li>JNI Parametrelerinin Gizlenmesi: Parametreler \u015fifrelenmi\u015f veya gizlenmi\u015f formatta g\u00f6nderilerek ne yap\u0131ld\u0131\u011f\u0131n\u0131 anlamay\u0131 zorla\u015ft\u0131rabilirsiniz.</li> <li>JNI Hata Y\u00f6netimi: Hatalar detayl\u0131 mesajlarla payla\u015f\u0131lmaz, bu da sald\u0131rganlar\u0131n analizine kar\u015f\u0131 koruma sa\u011flar.</li> </ol>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#24-statik-dizelerin-obfuske-edilmesi-obfuscation-of-static-strings","title":"2.4. Statik Dizelerin Obfuske Edilmesi (Obfuscation of Static Strings)","text":"<p>Teorik A\u00e7\u0131klama: Statik dizeler, sald\u0131rganlar\u0131n geri m\u00fchendislik i\u015flemleri s\u0131ras\u0131nda kullanabilece\u011fi \u00f6nemli bilgiler i\u00e7erir. Bu dizelerin obfuske edilmesi, g\u00fcvenli\u011fi art\u0131r\u0131r.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Statik dizelerin \u015fifrelenmesi ve \u00e7al\u0131\u015fma an\u0131nda \u00e7\u00f6z\u00fclmesi.</li> <li>Dizelerin obfuske edilerek anlamlar\u0131n\u0131n gizlenmesi.</li> <li>Rastgele dize olu\u015fturma ve manip\u00fclasyon teknikleri ile g\u00fcvenli\u011fi art\u0131rma.</li> </ol>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#241-statik-dizelerin-sifrelenmesi-ve-calsma-annda-cozulmesi","title":"2.4.1. Statik Dizelerin \u015eifrelenmesi ve \u00c7al\u0131\u015fma An\u0131nda \u00c7\u00f6z\u00fclmesi","text":"<p>A\u00e7\u0131klama: Statik dizeler genellikle \u00f6nemli bilgiler i\u00e7erir (\u00f6rne\u011fin, API anahtarlar\u0131 veya kullan\u0131c\u0131 bilgileri) ve geri m\u00fchendislik yapan bir sald\u0131rgan bu bilgilere kolayca eri\u015febilir. Bu nedenle, statik dizeler \u015fifrelenir ve \u00e7al\u0131\u015fma an\u0131nda \u00e7\u00f6z\u00fclerek g\u00fcvenlik art\u0131r\u0131l\u0131r.</p> <p>Java Kodu:</p> <pre><code>import javax.crypto.Cipher;\nimport javax.crypto.spec.SecretKeySpec;\nimport java.util.Base64;\n\npublic class StaticStringObfuscation {\n\n    private static final String KEY = \"1234567890123456\"; // \u015eifreleme anahtar\u0131 (16-byte AES)\n\n    // Statik dizenin \u015fifrelenmi\u015f hali (\u00f6rne\u011fin bir API anahtar\u0131)\n    private static final String ENCRYPTED_STRING = \"Y2hlY2tfdGhpcyBzdHJpbmdf\";\n</code></pre> <pre><code>    // \u015eifreleme fonksiyonu (dizeleri \u015fifrelemek i\u00e7in)\n    public static String encrypt(String data) throws Exception {\n        SecretKeySpec secretKey = new SecretKeySpec(KEY.getBytes(), \"AES\");\n        Cipher cipher = Cipher.getInstance(\"AES\");\n        cipher.init(Cipher.ENCRYPT_MODE, secretKey);\n        byte[] encryptedBytes = cipher.doFinal(data.getBytes());\n        return Base64.getEncoder().encodeToString(encryptedBytes);\n    }\n</code></pre> <pre><code>    // \u015eifre \u00e7\u00f6zme fonksiyonu\n    public static String decrypt(String encryptedData) throws Exception {\n        SecretKeySpec secretKey = new SecretKeySpec(KEY.getBytes(), \"AES\");\n        Cipher cipher = Cipher.getInstance(\"AES\");\n        cipher.init(Cipher.DECRYPT_MODE, secretKey);\n        byte[] decodedBytes = Base64.getDecoder().decode(encryptedData);\n        byte[] decryptedBytes = cipher.doFinal(decodedBytes);\n        return new String(decryptedBytes);\n    }\n</code></pre> <pre><code>    public static void main(String[] args) {\n        try {\n            // Statik dizenin \u015fifresini \u00e7\u00f6zme\n            String decryptedString = decrypt(ENCRYPTED_STRING);\n            System.out.println(\"\u00c7\u00f6z\u00fclen dize: \" + decryptedString);\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n</code></pre> <p>\u00d6zet:</p> <ul> <li><code>ENCRYPTED_STRING</code> de\u011fi\u015fkeni \u015fifrelenmi\u015f bir statik dizeyi temsil eder. Program \u00e7al\u0131\u015f\u0131rken bu \u015fifre \u00e7\u00f6z\u00fclerek ger\u00e7ek veri elde edilir.</li> <li>\u015eifreleme AES algoritmas\u0131yla yap\u0131lm\u0131\u015ft\u0131r ve \u00e7\u00f6z\u00fcm Base64 kodlamas\u0131 ile ger\u00e7ekle\u015ftirilmi\u015ftir.</li> </ul>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#242-dizelerin-obfuske-edilerek-anlamlarnn-gizlenmesi","title":"2.4.2. Dizelerin Obfuske Edilerek Anlamlar\u0131n\u0131n Gizlenmesi","text":"<p>A\u00e7\u0131klama: Dizelerin do\u011frudan kodda yer almas\u0131, bu dizelerin anlamlar\u0131n\u0131 a\u00e7\u0131k eder. Dizeleri obfuske etmek, sald\u0131rganlar\u0131n anlamlar\u0131n\u0131 anlamalar\u0131n\u0131 zorla\u015ft\u0131r\u0131r.</p> <p>Java Kodu:</p> <pre><code>public class StaticStringObfuscation {\n\n    // Obfuske edilmi\u015f dizeler\n    private static final char[] OBFUSCATED_STRING = { 'J', 'a', 'v', 'a', 'I', 's', 'S', 'e', 'c', 'u', 'r', 'e' };\n\n    // Dizeyi \u00e7\u00f6z\u00fcmleyerek ger\u00e7ek de\u011ferini elde etme\n    public static String decodeObfuscatedString() {\n        StringBuilder decodedString = new StringBuilder();\n        for (char c : OBFUSCATED_STRING) {\n            decodedString.append(c);\n        }\n        return decodedString.toString();\n    }\n\n    public static void main(String[] args) {\n        // Obfuske edilmi\u015f dizeyi \u00e7\u00f6zme ve g\u00f6sterme\n        String decoded = decodeObfuscatedString();\n        System.out.println(\"\u00c7\u00f6z\u00fclen dize: \" + decoded);\n    }\n}\n</code></pre> <p>A\u00e7\u0131klama:</p> <ul> <li><code>OBFUSCATED_STRING</code> dizisi, dizeyi karakter karakter saklayarak do\u011frudan g\u00f6r\u00fcnmesini engeller.</li> <li><code>decodeObfuscatedString()</code> metodu, obfuske edilmi\u015f dizeyi \u00e7\u00f6zer ve anlaml\u0131 hale getirir. Bu yakla\u015f\u0131m, dizelerin a\u00e7\u0131k\u00e7a g\u00f6r\u00fcnmemesini sa\u011flar.</li> </ul>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#243-rastgele-dize-olusturma-ve-manipulasyon-teknikleri-ile-guvenligi-artrma","title":"2.4.3. Rastgele Dize Olu\u015fturma ve Manip\u00fclasyon Teknikleri ile G\u00fcvenli\u011fi Art\u0131rma","text":"<p>A\u00e7\u0131klama: Rastgele dize olu\u015fturma ve bu dizeleri \u00e7al\u0131\u015fma an\u0131nda manip\u00fcle etme, dizelerin a\u00e7\u0131k\u00e7a kodda g\u00f6r\u00fcnmesini engeller ve analiz edilmesini zorla\u015ft\u0131r\u0131r.</p> <p>Java Kodu:</p> <pre><code>import java.util.Random;\n\npublic class RandomStringObfuscation {\n\n    // Rastgele bir dize olu\u015fturma fonksiyonu\n    public static String generateRandomString(int length) {\n        String characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        StringBuilder randomString = new StringBuilder();\n        Random random = new Random();\n\n        for (int i = 0; i &lt; length; i++) {\n            randomString.append(characters.charAt(random.nextInt(characters.length())));\n        }\n\n        return randomString.toString();\n    }\n</code></pre> <pre><code>    // Manip\u00fcle edilen dizeyi elde etme\n    public static String manipulateString(String input) {\n        return input.substring(0, input.length() / 2); // Dizenin yar\u0131s\u0131n\u0131 kullan\n    }\n</code></pre> <pre><code>    public static void main(String[] args) {\n        // Rastgele bir dize olu\u015fturma\n        String randomString = generateRandomString(16);\n        System.out.println(\"Olu\u015fturulan rastgele dize: \" + randomString);\n\n        // Dizeyi manip\u00fcle etme\n        String manipulatedString = manipulateString(randomString);\n        System.out.println(\"Manip\u00fcle edilmi\u015f dize: \" + manipulatedString);\n    }\n}\n</code></pre> <p>\u00d6zet:</p> <ul> <li><code>generateRandomString()</code> metodu, rastgele bir dize olu\u015fturur.</li> <li><code>manipulateString()</code> metodu bu diziyi manip\u00fcle eder. Bu teknik, sabit bir dize yerine dinamik ve manip\u00fcle edilmi\u015f bir dize kullanarak dizelerin analiz edilmesini zorla\u015ft\u0131r\u0131r.</li> </ul>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#ozet_2","title":"\u00d6zet:","text":"<ol> <li>Statik Dizelerin \u015eifrelenmesi ve \u00c7al\u0131\u015fma An\u0131nda \u00c7\u00f6z\u00fclmesi: Statik dizeler \u015fifrelenerek saklan\u0131r ve \u00e7al\u0131\u015fma an\u0131nda \u00e7\u00f6z\u00fcl\u00fcr.</li> <li>Dizelerin Obfuske Edilerek Gizlenmesi: Dizeler karakter dizisi olarak saklan\u0131r ve \u00e7al\u0131\u015fma an\u0131nda \u00e7\u00f6z\u00fclerek gizlenir.</li> <li>Rastgele Dize Olu\u015fturma ve Manip\u00fclasyon Teknikleri: Rastgele olu\u015fturulmu\u015f dizeler, statik olmaktan \u00e7\u0131kar ve manip\u00fcle edilerek g\u00fcvenlik art\u0131r\u0131l\u0131r.</li> </ol>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#haftann-ozeti-ve-gelecek-hafta","title":"Haftan\u0131n \u00d6zeti ve Gelecek Hafta","text":"","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#bu-hafta","title":"Bu Hafta:","text":"<ul> <li>Kod G\u00fc\u00e7lendirme Teknikleri (C/C++ ve Java)</li> <li>Obfuske Teknikleri ve Uygulamalar\u0131</li> </ul>","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-4/cen429-week-4/#gelecek-hafta","title":"Gelecek Hafta:","text":"<ul> <li>Sald\u0131r\u0131 A\u011fa\u00e7lar\u0131 ve G\u00fcvenlik Modelleri</li> <li>Sald\u0131r\u0131 Y\u00f6ntemleri ve G\u00fcvenli \u0130leti\u015fim</li> </ul> \\[ 4.Hafta-Sonu \\]","tags":["cen429-hafta-4","kod-g\u00fc\u00e7lendirme","c++","java","obfuske"]},{"location":"tr/week-5/cen429-week-5/","title":"CEN429 G\u00fcvenli Programlama Hafta-5","text":"","tags":["cen429-hafta-5","rasp","c++","runtime-application-self-protection"]},{"location":"tr/week-5/cen429-week-5/#cen429-guvenli-programlama","title":"CEN429 G\u00fcvenli Programlama","text":"","tags":["cen429-hafta-5","rasp","c++","runtime-application-self-protection"]},{"location":"tr/week-5/cen429-week-5/#hafta-5","title":"Hafta-5","text":"","tags":["cen429-hafta-5","rasp","c++","runtime-application-self-protection"]},{"location":"tr/week-5/cen429-week-5/#native-cc-icin-rasp-teknikleri","title":"Native C/C++ i\u00e7in RASP Teknikleri","text":"<p>\u0130ndir </p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-hafta-5","rasp","c++","runtime-application-self-protection"]},{"location":"tr/week-5/cen429-week-5/#outline","title":"Outline","text":"<ul> <li>RASP (\u00c7al\u0131\u015fma Zaman\u0131 Uygulama Korumas\u0131) Nedir?</li> <li>Native C/C++ \u0130\u00e7in RASP Teknikleri</li> <li>Caller APK Hash Do\u011frulama</li> <li>Root Tespiti ve LD Preload Korumas\u0131</li> </ul>","tags":["cen429-hafta-5","rasp","c++","runtime-application-self-protection"]},{"location":"tr/week-5/cen429-week-5/#hafta-5-rasp-runtime-application-self-protection-native-cc-taraf","title":"Hafta-5: RASP (Runtime Application Self-Protection) Native C/C++ Taraf\u0131","text":"<p>Runtime Application Self-Protection (RASP), uygulamalar\u0131n \u00e7al\u0131\u015fma zaman\u0131nda kendi g\u00fcvenliklerini sa\u011flamalar\u0131n\u0131 m\u00fcmk\u00fcn k\u0131lan bir g\u00fcvenlik yakla\u015f\u0131m\u0131d\u0131r. Native C/C++ uygulamalar\u0131nda, RASP kullanarak \u00e7e\u015fitli g\u00fcvenlik kontrolleri ger\u00e7ekle\u015ftirilebilir. Bu ders kapsam\u0131nda RASP teknikleri detayl\u0131ca a\u00e7\u0131klanacak ve uygulama \u00f6rnekleriyle peki\u015ftirilecektir.</p>","tags":["cen429-hafta-5","rasp","c++","runtime-application-self-protection"]},{"location":"tr/week-5/cen429-week-5/#1-calsma-zamannda-kod-bloklarnn-checksum-dogrulamas-runtime-codeblock-checksum-verification","title":"1. \u00c7al\u0131\u015fma Zaman\u0131nda Kod Bloklar\u0131n\u0131n Checksum Do\u011frulamas\u0131 (Runtime CodeBlock Checksum Verification)","text":"<p>Teorik A\u00e7\u0131klama: \u00c7al\u0131\u015fma zaman\u0131nda belirli kod bloklar\u0131n\u0131n hash veya checksum de\u011ferleri do\u011frulanarak, kodun de\u011fi\u015ftirilip de\u011fi\u015ftirilmedi\u011fi tespit edilir. Bu y\u00f6ntem, kod manip\u00fclasyonlar\u0131na ve k\u00f6t\u00fc niyetli m\u00fcdahalelere kar\u015f\u0131 bir koruma sa\u011flar.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Herhangi bir kod blo\u011funun checksum de\u011ferini hesaplama ve \u00e7al\u0131\u015fma s\u0131ras\u0131nda bu de\u011feri kar\u015f\u0131la\u015ft\u0131rma.</li> <li>De\u011fi\u015fiklik tespit edildi\u011finde program\u0131n kapanmas\u0131 veya hatal\u0131 bir sonu\u00e7 \u00fcretmesi.</li> <li>\u00d6nemli fonksiyonlar\u0131n ve kritik kod par\u00e7alar\u0131n\u0131n checksum do\u011frulamas\u0131 ile korunmas\u0131.</li> </ol>","tags":["cen429-hafta-5","rasp","c++","runtime-application-self-protection"]},{"location":"tr/week-5/cen429-week-5/#2-caller-apk-hash-ve-imza-dogrulamas-caller-apk-hash-verification-signature-verification","title":"2. Caller APK Hash ve \u0130mza Do\u011frulamas\u0131 (Caller APK Hash Verification &amp; Signature Verification)","text":"<p>Teorik A\u00e7\u0131klama: APK dosyalar\u0131n\u0131n hash ve imza bilgileri do\u011frulanarak, uygulaman\u0131n yaln\u0131zca g\u00fcvenilir ve imzalanm\u0131\u015f APK'lar taraf\u0131ndan \u00e7a\u011fr\u0131lmas\u0131 sa\u011flan\u0131r. Bu sayede, uygulaman\u0131n de\u011fi\u015ftirilmi\u015f veya sahte APK'lar taraf\u0131ndan \u00e7al\u0131\u015ft\u0131r\u0131lmas\u0131 engellenir.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>APK dosyas\u0131n\u0131n hash de\u011ferini \u00e7al\u0131\u015fma s\u0131ras\u0131nda do\u011frulama.</li> <li>APK'n\u0131n imza bilgisini kontrol ederek yaln\u0131zca orijinal imzalanm\u0131\u015f APK'lar\u0131n \u00e7al\u0131\u015fmas\u0131na izin verme.</li> <li>Hash ve imza de\u011ferlerinin saklanmas\u0131 ve dinamik do\u011frulama i\u015flemleri.</li> </ol>","tags":["cen429-hafta-5","rasp","c++","runtime-application-self-protection"]},{"location":"tr/week-5/cen429-week-5/#3-rooted-cihaz-tespiti-rooted-device-detection","title":"3. Rooted Cihaz Tespiti (Rooted Device Detection)","text":"<p>Teorik A\u00e7\u0131klama: Root yetkisine sahip cihazlar, g\u00fcvenlik riskleri olu\u015fturabilir. Rooted cihazlar\u0131n tespit edilmesi, bu cihazlarda uygulaman\u0131n \u00e7al\u0131\u015fmas\u0131n\u0131n engellenmesini sa\u011flar.</p> <p>Root Tespit Y\u00f6ntemleri:</p> <ol> <li>/dev/kmem Dosyas\u0131: Sistemde bu dosyan\u0131n varl\u0131\u011f\u0131 kontrol edilir. Varsa, sistemde syscall table hook ediliyor olabilir ve cihaz root yetkisine sahip olabilir.</li> <li>/proc/kallsyms Dosyas\u0131: sys_call_table ve compat_sys_call_table adreslerinin bo\u015f olup olmad\u0131\u011f\u0131n\u0131 kontrol etme.</li> <li>/default.prop ve /system/build.prop Dosyalar\u0131: Bu dosyalar okunabiliyorsa cihaz rootlanm\u0131\u015f olabilir.</li> <li>Di\u011fer Root Tespit Y\u00f6ntemleri:</li> <li>Superuser.apk dosyas\u0131n\u0131n varl\u0131\u011f\u0131.</li> <li>27047 portuna ba\u011flanma testi ile frida server\u2019\u0131n aranmas\u0131.</li> </ol> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Belirtilen dosyalar\u0131n varl\u0131\u011f\u0131n\u0131 kontrol ederek root tespiti yapma.</li> <li>Frida gibi ara\u00e7lar\u0131n varl\u0131\u011f\u0131n\u0131 test etme ve tespit etme.</li> <li>Root edilmi\u015f cihazlarda uygulaman\u0131n \u00e7al\u0131\u015fmas\u0131n\u0131 engelleme.</li> </ol>","tags":["cen429-hafta-5","rasp","c++","runtime-application-self-protection"]},{"location":"tr/week-5/cen429-week-5/#4-ileri-seviye-ld-preload-saldr-tespiti-advanced-ld-preload-attack-detection","title":"4. \u0130leri Seviye LD Preload Sald\u0131r\u0131 Tespiti (Advanced LD Preload Attack Detection)","text":"<p>Teorik A\u00e7\u0131klama: LD_PRELOAD, dinamik olarak y\u00fcklenen k\u00fct\u00fcphaneleri manip\u00fcle etmek i\u00e7in kullan\u0131lan bir y\u00f6ntemdir. Bu teknik, k\u00f6t\u00fc ama\u00e7l\u0131 yaz\u0131l\u0131mlar taraf\u0131ndan kullan\u0131lan bir sald\u0131r\u0131 vekt\u00f6r\u00fcd\u00fcr. LD_PRELOAD sald\u0131r\u0131lar\u0131n\u0131n tespit edilmesi, uygulaman\u0131n g\u00fcvenli\u011fini art\u0131r\u0131r.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>\u00c7al\u0131\u015fma zaman\u0131nda LD_PRELOAD ortam de\u011fi\u015fkenlerinin kontrol edilmesi.</li> <li>LD_PRELOAD sald\u0131r\u0131lar\u0131n\u0131n tespiti i\u00e7in \u00f6zel algoritmalar\u0131n kullan\u0131lmas\u0131.</li> <li>Tespit edilen sald\u0131r\u0131lara kar\u015f\u0131 uygulaman\u0131n kendini korumaya almas\u0131.</li> </ol>","tags":["cen429-hafta-5","rasp","c++","runtime-application-self-protection"]},{"location":"tr/week-5/cen429-week-5/#5-gdb-tracers-ve-emulator-tespiti-gdb-tracers-and-emulator-detection","title":"5. GDB, Tracers ve Em\u00fclat\u00f6r Tespiti (GDB, Tracers, and Emulator Detection)","text":"<p>Teorik A\u00e7\u0131klama: GDB gibi hata ay\u0131klama ara\u00e7lar\u0131n\u0131n, izleyici (tracer) ve em\u00fclat\u00f6rlerin tespit edilmesi, sald\u0131rganlar\u0131n uygulamay\u0131 analiz etmelerini ve de\u011fi\u015ftirmelerini engeller.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>GDB ortam\u0131n\u0131n tespit edilmesi ve uygulaman\u0131n bu ortamda \u00e7al\u0131\u015fmamas\u0131n\u0131 sa\u011flama.</li> <li>ltrace, strace gibi izleyicilerin kullan\u0131m\u0131n\u0131 alg\u0131lama ve engelleme.</li> <li>Em\u00fclat\u00f6r ortam\u0131nda \u00e7al\u0131\u015f\u0131rken uygulaman\u0131n kapanmas\u0131n\u0131 veya farkl\u0131 bir davran\u0131\u015f sergilemesini sa\u011flama.</li> </ol>","tags":["cen429-hafta-5","rasp","c++","runtime-application-self-protection"]},{"location":"tr/week-5/cen429-week-5/#6-debugger-eklentisi-tespiti-debugger-attachment-check","title":"6. Debugger Eklentisi Tespiti (Debugger Attachment Check)","text":"<p>Teorik A\u00e7\u0131klama: Uygulaman\u0131n bir hata ay\u0131klay\u0131c\u0131ya (debugger) eklenip eklenmedi\u011fi tespit edilerek, k\u00f6t\u00fc niyetli ki\u015filerin uygulamay\u0131 analiz etmesi engellenebilir.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Debugger eklentisini alg\u0131layan kod par\u00e7alar\u0131n\u0131n uygulamaya eklenmesi.</li> <li>Debugger tespit edildi\u011finde uygulaman\u0131n \u00e7al\u0131\u015fmas\u0131n\u0131 durdurma veya farkl\u0131 bir i\u015flev sergilemesini sa\u011flama.</li> <li>Anti-debugging teknikleri ile uygulaman\u0131n g\u00fcvenli\u011fini art\u0131rma.</li> </ol>","tags":["cen429-hafta-5","rasp","c++","runtime-application-self-protection"]},{"location":"tr/week-5/cen429-week-5/#7-bellek-korumas-memory-protection","title":"7. Bellek Korumas\u0131 (Memory Protection)","text":"<p>Teorik A\u00e7\u0131klama: Bellek koruma teknikleri, bellek eri\u015fimlerinin kontrol edilmesini sa\u011flar. Bellek \u00fczerinde yap\u0131lan manip\u00fclasyonlara kar\u015f\u0131 koruma sa\u011flar. Clang'\u0131n SafeStack \u00f6zelli\u011fi, bellek eri\u015fimlerini izlenebilir hale getirir.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>SafeStack kullanarak bellek koruma i\u015flemlerinin devreye sokulmas\u0131.</li> <li>Bellek \u00fczerinde yap\u0131lan her t\u00fcrl\u00fc manip\u00fclasyonun tespit edilmesi.</li> <li>Bellek koruma mekanizmalar\u0131 ile uygulaman\u0131n g\u00fcvenli\u011fini art\u0131rma.</li> </ol>","tags":["cen429-hafta-5","rasp","c++","runtime-application-self-protection"]},{"location":"tr/week-5/cen429-week-5/#8-diger-rasp-teknikleri","title":"8. Di\u011fer RASP Teknikleri","text":"<ol> <li>LD Preload Custom Envoriment Detection: \u00d6zelle\u015ftirilmi\u015f LD_PRELOAD ortam de\u011fi\u015fkenlerinin tespiti.</li> <li>Tamper Device Detection: Uygulama cihaz\u0131n\u0131n de\u011fi\u015ftirilip de\u011fi\u015ftirilmedi\u011finin kontrol edilmesi.</li> <li>Control Flow Counter Checking: Kontrol ak\u0131\u015f\u0131n\u0131 izleyen saya\u00e7lar ile kodun manip\u00fcle edilip edilmedi\u011finin tespiti.</li> <li>Device Binding: Uygulaman\u0131n belirli bir cihaza ba\u011fl\u0131 olarak \u00e7al\u0131\u015fmas\u0131n\u0131 sa\u011flama.</li> <li>Version Binding: Uygulaman\u0131n belirli bir versiyonda \u00e7al\u0131\u015ft\u0131\u011f\u0131ndan emin olma.</li> </ol> \\[ 5.Hafta-Sonu \\]","tags":["cen429-hafta-5","rasp","c++","runtime-application-self-protection"]},{"location":"tr/week-6/cen429-week-6/","title":"CEN429 G\u00fcvenli Programlama Hafta-6","text":"","tags":["cen429-hafta-6","rasp","java","runtime-application-self-protection"]},{"location":"tr/week-6/cen429-week-6/#cen429-guvenli-programlama","title":"CEN429 G\u00fcvenli Programlama","text":"","tags":["cen429-hafta-6","rasp","java","runtime-application-self-protection"]},{"location":"tr/week-6/cen429-week-6/#hafta-6","title":"Hafta-6","text":"","tags":["cen429-hafta-6","rasp","java","runtime-application-self-protection"]},{"location":"tr/week-6/cen429-week-6/#java-icin-rasp-teknikleri","title":"Java i\u00e7in RASP Teknikleri","text":"<p>\u0130ndir </p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-hafta-6","rasp","java","runtime-application-self-protection"]},{"location":"tr/week-6/cen429-week-6/#outline","title":"Outline","text":"<ul> <li>RASP (\u00c7al\u0131\u015fma Zaman\u0131 Uygulama Korumas\u0131) Nedir?</li> <li>Java \u0130\u00e7in RASP Teknikleri</li> <li>Em\u00fclat\u00f6r, Root ve Debug Modu Tespiti</li> <li>G\u00fcvenlik K\u00fct\u00fcphaneleri ve SSL Pinning</li> </ul>","tags":["cen429-hafta-6","rasp","java","runtime-application-self-protection"]},{"location":"tr/week-6/cen429-week-6/#hafta-6-rasp-runtime-application-self-protection-java-taraf","title":"Hafta-6: RASP (Runtime Application Self-Protection) Java Taraf\u0131","text":"<p>Java uygulamalar\u0131nda RASP (Runtime Application Self-Protection), uygulamalar\u0131n \u00e7al\u0131\u015fma zaman\u0131nda g\u00fcvenliklerini sa\u011flamak i\u00e7in kullan\u0131lan tekniklerden olu\u015fur. Bu hafta, Java tabanl\u0131 uygulamalar i\u00e7in RASP stratejilerini inceleyece\u011fiz. Uygulamalar, \u00f6zellikle mobil uygulamalar, \u00e7al\u0131\u015fma zaman\u0131nda \u00e7e\u015fitli tehditlere kar\u015f\u0131 kendilerini koruyabilmelidir. A\u015fa\u011f\u0131daki ba\u015fl\u0131klar, Java taraf\u0131nda RASP i\u00e7in kullan\u0131lan teknikleri kapsamaktad\u0131r.</p>","tags":["cen429-hafta-6","rasp","java","runtime-application-self-protection"]},{"location":"tr/week-6/cen429-week-6/#1-emulator-tespiti-emulator-detection","title":"1. Em\u00fclat\u00f6r Tespiti (Emulator Detection)","text":"<p>Teorik A\u00e7\u0131klama: Em\u00fclat\u00f6rler, sald\u0131rganlar\u0131n uygulamay\u0131 analiz etmeleri ve zay\u0131f noktalar\u0131 ke\u015ffetmeleri i\u00e7in kullanabilecekleri ara\u00e7lard\u0131r. Em\u00fclat\u00f6r tespiti, uygulaman\u0131n bir em\u00fclat\u00f6r ortam\u0131nda \u00e7al\u0131\u015f\u0131p \u00e7al\u0131\u015fmad\u0131\u011f\u0131n\u0131 anlamas\u0131na olanak tan\u0131r. Qemu gibi pop\u00fcler em\u00fclat\u00f6rler i\u00e7in \u00f6zel tespit mekanizmalar\u0131 uygulanabilir.</p> <p>Kaynak ve Uygulama:</p> <ul> <li>Qemu ARM Em\u00fclat\u00f6r Tespiti i\u00e7in kullan\u0131lan bir \u00f6rnek: Anti Emulator for Qemu ARM</li> <li>Em\u00fclat\u00f6r ortam\u0131n\u0131 alg\u0131lama ve \u00e7al\u0131\u015fma s\u00fcrecinde uygulaman\u0131n i\u015flevini de\u011fi\u015ftirme.</li> </ul>","tags":["cen429-hafta-6","rasp","java","runtime-application-self-protection"]},{"location":"tr/week-6/cen429-week-6/#2-hata-ayklama-modu-tespiti-debug-mode-detection","title":"2. Hata Ay\u0131klama Modu Tespiti (Debug Mode Detection)","text":"<p>Teorik A\u00e7\u0131klama: Bir uygulaman\u0131n hata ay\u0131klama (debug) modunda \u00e7al\u0131\u015fmas\u0131, k\u00f6t\u00fc niyetli ki\u015filerin uygulamay\u0131 analiz etmeleri i\u00e7in bir f\u0131rsat sa\u011flar. Uygulaman\u0131n hata ay\u0131klama modunda olup olmad\u0131\u011f\u0131n\u0131 tespit etmek, bu modda \u00e7al\u0131\u015fmas\u0131n\u0131 engelleyerek g\u00fcvenli\u011fi art\u0131r\u0131r.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Uygulaman\u0131n \u00e7al\u0131\u015fma zaman\u0131nda hata ay\u0131klama modunda olup olmad\u0131\u011f\u0131n\u0131 kontrol eden kod par\u00e7ac\u0131klar\u0131 eklemek.</li> <li>Hata ay\u0131klama modunda oldu\u011funda uygulaman\u0131n \u00e7al\u0131\u015fmas\u0131n\u0131 sonland\u0131rmak veya farkl\u0131 bir i\u015flev sergilemesini sa\u011flamak.</li> </ol>","tags":["cen429-hafta-6","rasp","java","runtime-application-self-protection"]},{"location":"tr/week-6/cen429-week-6/#3-debugger-baglants-tespiti-debugger-attach-detection","title":"3. Debugger Ba\u011flant\u0131s\u0131 Tespiti (Debugger Attach Detection)","text":"<p>Teorik A\u00e7\u0131klama: Hata ay\u0131klay\u0131c\u0131lar\u0131n (debugger) uygulamaya ba\u011flanmas\u0131, uygulaman\u0131n izlenmesine ve analiz edilmesine yol a\u00e7ar. Debugger tespiti, uygulaman\u0131n \u00e7al\u0131\u015fma s\u0131ras\u0131nda bir hata ay\u0131klay\u0131c\u0131ya ba\u011flan\u0131p ba\u011flanmad\u0131\u011f\u0131n\u0131 kontrol eder ve buna g\u00f6re hareket eder.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Debugger tespit edildi\u011finde uygulaman\u0131n kapanmas\u0131n\u0131 veya i\u015flev de\u011fi\u015ftirmesini sa\u011flama.</li> <li>Hata ay\u0131klay\u0131c\u0131ya ba\u011flant\u0131y\u0131 alg\u0131layan g\u00fcvenlik mekanizmalar\u0131 eklemek.</li> </ol>","tags":["cen429-hafta-6","rasp","java","runtime-application-self-protection"]},{"location":"tr/week-6/cen429-week-6/#4-rootbeer-implementasyonu-rootbeer-implementation","title":"4. RootBeer Implementasyonu (RootBeer Implementation)","text":"<p>Teorik A\u00e7\u0131klama: RootBeer, Android cihazlar\u0131n\u0131n root olup olmad\u0131\u011f\u0131n\u0131 kontrol eden bir k\u00fct\u00fcphanedir. Root edilmi\u015f cihazlar, uygulaman\u0131n g\u00fcvenli\u011fini tehlikeye atabilir. RootBeer kullanarak, root edilmi\u015f cihazlar\u0131n tespiti yap\u0131labilir.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>RootBeer kullanarak cihaz\u0131n root olup olmad\u0131\u011f\u0131n\u0131 tespit etme.</li> <li>Root edilmi\u015f cihazlarda uygulaman\u0131n \u00e7al\u0131\u015fmas\u0131n\u0131 engelleme veya k\u0131s\u0131tl\u0131 i\u015flev sa\u011flama.</li> </ol>","tags":["cen429-hafta-6","rasp","java","runtime-application-self-protection"]},{"location":"tr/week-6/cen429-week-6/#5-androidsecuritymanager-ile-root-tespiti-androidsecuritymanager-rooted-device-check","title":"5. AndroidSecurityManager ile Root Tespiti (AndroidSecurityManager Rooted Device Check)","text":"<p>Teorik A\u00e7\u0131klama: AndroidSecurityManager, Android cihazlar\u0131n\u0131n g\u00fcvenlik durumu hakk\u0131nda bilgi sa\u011flayan bir g\u00fcvenlik y\u00f6neticisidir. Root edilmi\u015f cihazlar\u0131 tespit ederek uygulaman\u0131n bu cihazlarda \u00e7al\u0131\u015fmamas\u0131n\u0131 sa\u011flar.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>AndroidSecurityManager kullanarak root kontrol\u00fc ger\u00e7ekle\u015ftirme.</li> <li>Root edilmi\u015f cihazlarda belirli \u00f6zellikleri devre d\u0131\u015f\u0131 b\u0131rakma.</li> </ol>","tags":["cen429-hafta-6","rasp","java","runtime-application-self-protection"]},{"location":"tr/week-6/cen429-week-6/#6-safetynet-implementasyonu-safetynet-implementation","title":"6. SafetyNet Implementasyonu (SafetyNet Implementation)","text":"<p>Teorik A\u00e7\u0131klama: Google SafetyNet, cihaz\u0131n g\u00fcvenlik durumunu de\u011ferlendirmek i\u00e7in kullan\u0131lan bir API'dir. Uygulamalar, SafetyNet ile cihaz\u0131n g\u00fcvenlik b\u00fct\u00fcnl\u00fc\u011f\u00fcn\u00fc kontrol edebilir ve g\u00fcvenlik ihlalleri tespit edildi\u011finde tepki verebilir.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>SafetyNet API'yi kullanarak cihaz\u0131n g\u00fcvenlik b\u00fct\u00fcnl\u00fc\u011f\u00fcn\u00fc kontrol etmek.</li> <li>G\u00fcvenlik ihlalleri tespit edildi\u011finde uygulaman\u0131n davran\u0131\u015f\u0131n\u0131 de\u011fi\u015ftirmek veya sonland\u0131rmak.</li> </ol>","tags":["cen429-hafta-6","rasp","java","runtime-application-self-protection"]},{"location":"tr/week-6/cen429-week-6/#7-kullanlan-native-kutuphane-checksum-kontrolu-used-native-library-checksum-control","title":"7. Kullan\u0131lan Native K\u00fct\u00fcphane Checksum Kontrol\u00fc (Used Native Library Checksum Control)","text":"<p>Teorik A\u00e7\u0131klama: Uygulaman\u0131n kulland\u0131\u011f\u0131 native k\u00fct\u00fcphanelerin checksum de\u011ferlerini kontrol etmek, bu k\u00fct\u00fcphanelerin de\u011fi\u015ftirilip de\u011fi\u015ftirilmedi\u011fini anlamam\u0131z\u0131 sa\u011flar. Bu, uygulaman\u0131n g\u00fcvenli\u011fini koruman\u0131n \u00f6nemli bir yoludur.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>\u00c7al\u0131\u015fma zaman\u0131nda kullan\u0131lan k\u00fct\u00fcphanelerin checksum de\u011ferlerini kontrol etme.</li> <li>K\u00fct\u00fcphane \u00fczerinde bir de\u011fi\u015fiklik tespit edilirse uygulaman\u0131n \u00e7al\u0131\u015fmas\u0131n\u0131 sonland\u0131rma veya i\u015flev de\u011fi\u015ftirme.</li> </ol>","tags":["cen429-hafta-6","rasp","java","runtime-application-self-protection"]},{"location":"tr/week-6/cen429-week-6/#8-tamper-cihaz-tespiti-tamper-device-detection","title":"8. Tamper Cihaz Tespiti (Tamper Device Detection)","text":"<p>Teorik A\u00e7\u0131klama: Cihaz\u0131n veya uygulaman\u0131n manip\u00fcle edilip edilmedi\u011fini kontrol etmek, uygulamay\u0131 g\u00fcvenlik ihlallerine kar\u015f\u0131 korur. Tamper tespiti ile cihaz veya uygulama \u00fczerinde yap\u0131lm\u0131\u015f herhangi bir de\u011fi\u015fikli\u011fi alg\u0131layabilirsiniz.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Cihaz veya uygulaman\u0131n tamper edilmi\u015f olup olmad\u0131\u011f\u0131n\u0131 tespit etme.</li> <li>Tamper tespit edildi\u011finde uygulaman\u0131n \u00e7al\u0131\u015fmas\u0131n\u0131 durdurma veya k\u0131s\u0131tlama.</li> </ol>","tags":["cen429-hafta-6","rasp","java","runtime-application-self-protection"]},{"location":"tr/week-6/cen429-week-6/#9-ssl-pinning-ve-webview-ssl-pinning-ssl-pinning-and-webview-ssl-pinning","title":"9. SSL Pinning ve WebView SSL Pinning (SSL Pinning and Webview SSL Pinning)","text":"<p>Teorik A\u00e7\u0131klama: SSL Pinning, uygulaman\u0131n belirli bir sunucuya g\u00fcvenli \u015fekilde ba\u011flanmas\u0131n\u0131 sa\u011flamak i\u00e7in kullan\u0131l\u0131r. WebView \u00fczerinde SSL pinning uygulamak, kullan\u0131c\u0131lar\u0131n sahte sunucularla ba\u011flant\u0131 kurmas\u0131n\u0131 engeller.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>WebView'da SSL pinning uygulayarak sunucunun kimli\u011fini do\u011frulamak.</li> <li>Yanl\u0131\u015f sunucularla ba\u011flant\u0131 kuruldu\u011funda ba\u011flant\u0131y\u0131 kesmek.</li> </ol>","tags":["cen429-hafta-6","rasp","java","runtime-application-self-protection"]},{"location":"tr/week-6/cen429-week-6/#10-sunucu-sertifikas-kontrolu-server-certificate-check","title":"10. Sunucu Sertifikas\u0131 Kontrol\u00fc (Server Certificate Check)","text":"<p>Teorik A\u00e7\u0131klama: Uygulaman\u0131n bir sunucuya ba\u011flan\u0131rken sunucu sertifikas\u0131n\u0131n do\u011frulu\u011funu kontrol etmesi, sahte sunucularla ba\u011flant\u0131 kurmay\u0131 engeller. Bu, man-in-the-middle sald\u0131r\u0131lar\u0131na kar\u015f\u0131 \u00f6nemli bir koruma sa\u011flar.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Sunucu sertifikas\u0131n\u0131n do\u011frulu\u011funu \u00e7al\u0131\u015fma s\u0131ras\u0131nda kontrol etme.</li> <li>Yanl\u0131\u015f sertifika tespit edildi\u011finde ba\u011flant\u0131y\u0131 kesme.</li> </ol>","tags":["cen429-hafta-6","rasp","java","runtime-application-self-protection"]},{"location":"tr/week-6/cen429-week-6/#11-cihaz-ve-surum-baglama-devicebinding-versionbinding","title":"11. Cihaz ve S\u00fcr\u00fcm Ba\u011flama (DeviceBinding &amp; VersionBinding)","text":"<p>Teorik A\u00e7\u0131klama: Cihaz ba\u011flama, uygulaman\u0131n belirli bir cihaz \u00fczerinde \u00e7al\u0131\u015fmas\u0131n\u0131 sa\u011flar ve ba\u015fka bir cihazda \u00e7al\u0131\u015fmas\u0131n\u0131 engeller. S\u00fcr\u00fcm ba\u011flama ise uygulaman\u0131n belirli bir s\u00fcr\u00fcmde \u00e7al\u0131\u015ft\u0131\u011f\u0131ndan emin olur.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Uygulaman\u0131n sadece belirli bir cihazda \u00e7al\u0131\u015fmas\u0131n\u0131 sa\u011flayan cihaz ba\u011flama i\u015flemlerini ger\u00e7ekle\u015ftirme.</li> <li>Uygulaman\u0131n yaln\u0131zca belirli s\u00fcr\u00fcmlerde \u00e7al\u0131\u015fmas\u0131n\u0131 kontrol eden s\u00fcr\u00fcm ba\u011flama i\u015flemleri.</li> </ol>","tags":["cen429-hafta-6","rasp","java","runtime-application-self-protection"]},{"location":"tr/week-6/cen429-week-6/#12-tuketici-dogrulamas-consumer-verification","title":"12. T\u00fcketici Do\u011frulamas\u0131 (Consumer Verification)","text":"<p>Teorik A\u00e7\u0131klama: Uygulaman\u0131n ger\u00e7ek kullan\u0131c\u0131 taraf\u0131ndan kullan\u0131ld\u0131\u011f\u0131n\u0131 do\u011frulamak, sahte kullan\u0131c\u0131lar\u0131 ve otomatik i\u015flemleri engellemeye yard\u0131mc\u0131 olur. Bu do\u011frulama i\u015flemi, t\u00fcketicinin kimli\u011fini do\u011frular.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>T\u00fcketici do\u011frulamas\u0131 i\u00e7in g\u00fcvenlik testleri ve algoritmalar kullanmak.</li> <li>Do\u011frulanmam\u0131\u015f kullan\u0131c\u0131lar i\u00e7in eri\u015fim k\u0131s\u0131tlamalar\u0131 koymak.</li> </ol> \\[ 6.Hafta-Sonu \\]","tags":["cen429-hafta-6","rasp","java","runtime-application-self-protection"]},{"location":"tr/week-7/cen429-week-7/","title":"CEN429 G\u00fcvenli Programlama Hafta-7","text":"","tags":["cen429-hafta-7","kod-karartma","\u00e7e\u015fitlendirme","obfuscation"]},{"location":"tr/week-7/cen429-week-7/#cen429-guvenli-programlama","title":"CEN429 G\u00fcvenli Programlama","text":"","tags":["cen429-hafta-7","kod-karartma","\u00e7e\u015fitlendirme","obfuscation"]},{"location":"tr/week-7/cen429-week-7/#hafta-7","title":"Hafta-7","text":"","tags":["cen429-hafta-7","kod-karartma","\u00e7e\u015fitlendirme","obfuscation"]},{"location":"tr/week-7/cen429-week-7/#kod-karartma-obfuscation-ve-cesitlendirme-teknikleri","title":"Kod Karartma (Obfuscation) ve \u00c7e\u015fitlendirme Teknikleri","text":"<p>\u0130ndir </p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-hafta-7","kod-karartma","\u00e7e\u015fitlendirme","obfuscation"]},{"location":"tr/week-7/cen429-week-7/#outline","title":"Outline","text":"<ul> <li>Kod Karartma ve \u00c7e\u015fitlendirme Teknikleri</li> <li>Statik ve Dinamik Kod Karartma</li> <li>Sanalla\u015ft\u0131rma ve \u015eifreleme</li> </ul>","tags":["cen429-hafta-7","kod-karartma","\u00e7e\u015fitlendirme","obfuscation"]},{"location":"tr/week-7/cen429-week-7/#hafta-7-kod-karartma-code-obfuscation-ve-cesitlendirme-diversifications","title":"Hafta-7: Kod Karartma (Code Obfuscation) ve \u00c7e\u015fitlendirme (Diversifications)","text":"<p>Kod karartma ve \u00e7e\u015fitlendirme teknikleri, yaz\u0131l\u0131m\u0131n g\u00fcvenli\u011fini art\u0131rmak amac\u0131yla kaynak kodunun ve i\u015flevlerinin karma\u015f\u0131k hale getirilmesini i\u00e7erir. Bu hafta, bu teknikleri ve bunlar\u0131n uygulamalar\u0131n\u0131 inceleyece\u011fiz. Bu y\u00f6ntemler, \u00f6zellikle yaz\u0131l\u0131mlar\u0131n tersine m\u00fchendislikten korunmas\u0131 ve sald\u0131r\u0131lar\u0131n zorla\u015ft\u0131r\u0131lmas\u0131 i\u00e7in kritik \u00f6neme sahiptir.</p>","tags":["cen429-hafta-7","kod-karartma","\u00e7e\u015fitlendirme","obfuscation"]},{"location":"tr/week-7/cen429-week-7/#1-tigress-nedir","title":"1. Tigress Nedir?","text":"<p>Teorik A\u00e7\u0131klama: Tigress, programlar\u0131 d\u00f6n\u00fc\u015ft\u00fcrmek, karartmak ve karma\u015f\u0131k hale getirmek i\u00e7in kullan\u0131lan bir ara\u00e7t\u0131r. Karartma teknikleri ile yaz\u0131l\u0131mlar\u0131n tersine m\u00fchendislikten korunmas\u0131n\u0131 sa\u011flar. Farkl\u0131 karartma teknikleri sunarak kodun analizini zorla\u015ft\u0131r\u0131r.</p>","tags":["cen429-hafta-7","kod-karartma","\u00e7e\u015fitlendirme","obfuscation"]},{"location":"tr/week-7/cen429-week-7/#2-kod-karartma-teknikleri-types-of-obfuscation","title":"2. Kod Karartma Teknikleri (Types of Obfuscation)","text":"<p>Teorik A\u00e7\u0131klama: Kod karartma, kodu insan ve ara\u00e7lar taraf\u0131ndan anla\u015f\u0131lmas\u0131 zor hale getirir. A\u015fa\u011f\u0131daki teknikler kod karartman\u0131n temel y\u00f6ntemlerindendir:</p> <ul> <li>Abstraction Transformations: Mod\u00fcl yap\u0131lar\u0131, s\u0131n\u0131flar, fonksiyonlar vb. yap\u0131lar\u0131n yok edilmesi.</li> <li>Data Transformations: Veri yap\u0131lar\u0131n\u0131 yeni temsillerle de\u011fi\u015ftirmek.</li> <li>Control Transformations: Kontrol yap\u0131lar\u0131n\u0131n (if, while, repeat vb.) yok edilmesi.</li> <li>Dynamic Transformations: Program\u0131n \u00e7al\u0131\u015fma zaman\u0131nda de\u011fi\u015fiklik yapmas\u0131.</li> </ul>","tags":["cen429-hafta-7","kod-karartma","\u00e7e\u015fitlendirme","obfuscation"]},{"location":"tr/week-7/cen429-week-7/#3-statik-kod-karartma-static-obfuscation","title":"3. Statik Kod Karartma (Static Obfuscation)","text":"<p>Teorik A\u00e7\u0131klama: Statik karartma, program\u0131n \u00e7al\u0131\u015fma zaman\u0131nda sabit kalan karartma t\u00fcr\u00fcd\u00fcr. Program\u0131n yap\u0131s\u0131n\u0131 de\u011fi\u015ftirir ancak \u00e7al\u0131\u015f\u0131rken de\u011fi\u015fmez. A\u015fa\u011f\u0131daki teknikler bu kategoridedir:</p> <ul> <li>Bogus Control Flow: Program\u0131n kontrol ak\u0131\u015f\u0131n\u0131 karma\u015f\u0131k hale getirir. Ger\u00e7ek olmayan kontrol yap\u0131lar\u0131 eklenir, \u00f6l\u00fc dallar ve gereksiz dallar kullan\u0131l\u0131r.</li> <li>Control Flow Flattening: Kontrol yap\u0131lar\u0131n\u0131n yap\u0131lar\u0131n\u0131 bozarak kodu d\u00fcmd\u00fcz hale getirir.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Kodda gereksiz dallanmalar ve \u00f6l\u00fc dallar ekleyerek kontrol ak\u0131\u015f\u0131n\u0131 zorla\u015ft\u0131rmak.</li> <li>Fonksiyonlar\u0131n i\u00e7ine sahte i\u015flemler yerle\u015ftirmek.</li> </ol>","tags":["cen429-hafta-7","kod-karartma","\u00e7e\u015fitlendirme","obfuscation"]},{"location":"tr/week-7/cen429-week-7/#4-opaque-predicates-ve-krma-breaking-opaque-predicates","title":"4. Opaque Predicates ve K\u0131rma (Breaking Opaque Predicates)","text":"<p>Teorik A\u00e7\u0131klama: Opaque Predicates, her zaman sabit bir de\u011fere sahip olan, ancak d\u0131\u015far\u0131dan bak\u0131ld\u0131\u011f\u0131nda de\u011fi\u015fiyormu\u015f gibi g\u00f6r\u00fcnen ko\u015ful ifadeleridir. Bu ko\u015fullar\u0131n karma\u015f\u0131k matematiksel veya mant\u0131ksal ili\u015fkilerle olu\u015fturulmas\u0131, kodun analiz edilmesini zorla\u015ft\u0131r\u0131r.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Opaque Predicates kullanarak sabit ko\u015fullar olu\u015fturma.</li> <li>Opaque predicates\u2019i k\u0131rma teknikleri ile matematiksel analizler yaparak bu yap\u0131lar\u0131 \u00e7\u00f6zme.</li> </ol>","tags":["cen429-hafta-7","kod-karartma","\u00e7e\u015fitlendirme","obfuscation"]},{"location":"tr/week-7/cen429-week-7/#5-sifreleme-tabanl-saysal-donusumler-encoding-integer-arithmetic","title":"5. \u015eifreleme Tabanl\u0131 Say\u0131sal D\u00f6n\u00fc\u015f\u00fcmler (Encoding Integer Arithmetic)","text":"<p>Teorik A\u00e7\u0131klama: Say\u0131lar \u00fczerinde karma\u015f\u0131k matematiksel d\u00f6n\u00fc\u015f\u00fcmler kullanarak orijinal i\u015flemleri gizleme. \u00d6rne\u011fin, toplama i\u015flemini karma\u015f\u0131k matematiksel ifadelerle de\u011fi\u015ftirme, tersine m\u00fchendisli\u011fi zorla\u015ft\u0131r\u0131r.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>x + y gibi basit aritmetik i\u015flemleri gizleyerek yerine daha karma\u015f\u0131k matematiksel i\u015flemler yerle\u015ftirme.</li> <li>D\u00f6n\u00fc\u015ft\u00fcr\u00fclm\u00fc\u015f say\u0131sal i\u015flemler \u00fczerinde \u00e7al\u0131\u015farak orijinal aritmetik yap\u0131y\u0131 geri \u00e7\u00f6zme.</li> </ol>","tags":["cen429-hafta-7","kod-karartma","\u00e7e\u015fitlendirme","obfuscation"]},{"location":"tr/week-7/cen429-week-7/#6-linear-transformation-ve-saysal-donusumler-linear-transformation-and-number-theoretic-tricks","title":"6. Linear Transformation ve Say\u0131sal D\u00f6n\u00fc\u015f\u00fcmler (Linear Transformation and Number-Theoretic Tricks)","text":"<p>Teorik A\u00e7\u0131klama: Do\u011frusal d\u00f6n\u00fc\u015f\u00fcmler, orijinal veriyi karma\u015f\u0131k matematiksel d\u00f6n\u00fc\u015f\u00fcmlerden ge\u00e7irerek gizler. Bu d\u00f6n\u00fc\u015f\u00fcmler geri d\u00f6nd\u00fcr\u00fclemez de\u011fildir, ancak analiz edilmesi zordur.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Mod 2^32 gibi b\u00fcy\u00fck mod\u00fcler aritmetiklerle do\u011frusal d\u00f6n\u00fc\u015f\u00fcmler yaparak say\u0131sal i\u015flemleri gizleme.</li> <li>Euclid\u2019in Geni\u015fletilmi\u015f Algoritmas\u0131 gibi matematiksel y\u00f6ntemlerle ters d\u00f6n\u00fc\u015f\u00fcmleri yapma.</li> </ol>","tags":["cen429-hafta-7","kod-karartma","\u00e7e\u015fitlendirme","obfuscation"]},{"location":"tr/week-7/cen429-week-7/#7-sanallastrma-virtualization","title":"7. Sanalla\u015ft\u0131rma (Virtualization)","text":"<p>Teorik A\u00e7\u0131klama: Sanalla\u015ft\u0131rma, kodun do\u011frudan CPU'da \u00e7al\u0131\u015ft\u0131r\u0131lmas\u0131 yerine bir sanal makine (interpreter) \u00fczerinde \u00e7al\u0131\u015ft\u0131r\u0131lmas\u0131n\u0131 sa\u011flar. Bu y\u00f6ntemle, program\u0131n \u00e7al\u0131\u015fma zaman\u0131nda s\u00fcrekli olarak \u00e7evrimi yap\u0131l\u0131r ve kodun tersine m\u00fchendisli\u011fi zorla\u015ft\u0131r\u0131l\u0131r.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Program\u0131n t\u00fcm komutlar\u0131n\u0131 bir interpreter arac\u0131l\u0131\u011f\u0131yla \u00e7al\u0131\u015ft\u0131rarak orijinal kodu gizlemek.</li> <li>Interpreter bazl\u0131 sanalla\u015ft\u0131rmalarla kodun s\u00fcrekli olarak de\u011fi\u015fken tutulmas\u0131.</li> </ol>","tags":["cen429-hafta-7","kod-karartma","\u00e7e\u015fitlendirme","obfuscation"]},{"location":"tr/week-7/cen429-week-7/#8-cesitlendirme-diversity","title":"8. \u00c7e\u015fitlendirme (Diversity)","text":"<p>Teorik A\u00e7\u0131klama: \u00c7e\u015fitlendirme, her bir program\u0131n farkl\u0131 bir versiyonunu olu\u015fturarak, kodun sabit bir yap\u0131da olmamas\u0131n\u0131 sa\u011flar. Bu, vir\u00fcslerin veya k\u00f6t\u00fc niyetli yaz\u0131l\u0131mlar\u0131n kodu analiz etmesini zorla\u015ft\u0131r\u0131r.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Ayn\u0131 i\u015flevi yerine getiren ancak farkl\u0131 g\u00f6r\u00fcn\u00fcmlerdeki kod yap\u0131lar\u0131 olu\u015fturma.</li> <li>Her kod versiyonunda k\u00fc\u00e7\u00fck yap\u0131sal de\u011fi\u015fiklikler yaparak kodun analiz edilmesini zorla\u015ft\u0131rma.</li> </ol>","tags":["cen429-hafta-7","kod-karartma","\u00e7e\u015fitlendirme","obfuscation"]},{"location":"tr/week-7/cen429-week-7/#9-sifreleme-ve-saysal-donusumler-encoding-and-transforming","title":"9. \u015eifreleme ve Say\u0131sal D\u00f6n\u00fc\u015f\u00fcmler (Encoding and Transforming)","text":"<p>Teorik A\u00e7\u0131klama: Kodun baz\u0131 b\u00f6l\u00fcmleri, \u00f6zel \u015fifreleme algoritmalar\u0131yla gizlenebilir. Bu, kodun analizini zorla\u015ft\u0131ran ba\u015fka bir karartma tekni\u011fidir. \u00d6zellikle say\u0131lar \u00fczerinde \u015fifreleme ve d\u00f6n\u00fc\u015f\u00fcmler uygulanabilir.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Kod i\u00e7inde kullan\u0131lan say\u0131lar\u0131 \u015fifreleyerek bu say\u0131lar\u0131n analizini zorla\u015ft\u0131rma.</li> <li>\u015eifrelenmi\u015f say\u0131lar\u0131n \u00e7\u00f6z\u00fcmlerini analiz ederek orijinal de\u011ferleri geri d\u00f6nd\u00fcrme.</li> </ol>","tags":["cen429-hafta-7","kod-karartma","\u00e7e\u015fitlendirme","obfuscation"]},{"location":"tr/week-7/cen429-week-7/#10-opaque-ifadeler-ve-dinamik-karartma-opaque-expressions-and-dynamic-obfuscation","title":"10. Opaque \u0130fadeler ve Dinamik Karartma (Opaque Expressions and Dynamic Obfuscation)","text":"<p>Teorik A\u00e7\u0131klama: Opaque ifadeler, kodun belirli k\u0131s\u0131mlar\u0131n\u0131n karma\u015f\u0131k ko\u015fullar alt\u0131nda de\u011ferlendirilmesini sa\u011flar. Dinamik karartma, kodun \u00e7al\u0131\u015fma zaman\u0131nda s\u00fcrekli olarak d\u00f6n\u00fc\u015ft\u00fcr\u00fclmesi ve de\u011fi\u015fken tutulmas\u0131n\u0131 i\u00e7erir.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Kodun \u00e7al\u0131\u015ft\u0131\u011f\u0131 s\u0131rada s\u00fcrekli olarak d\u00f6n\u00fc\u015f\u00fcmler uygulayarak analiz edilmesini zorla\u015ft\u0131rmak.</li> <li>\u00c7al\u0131\u015fma zaman\u0131nda kodu yeniden yap\u0131land\u0131rarak sabit kalmas\u0131n\u0131 engellemek.</li> </ol> \\[ 7.Hafta-Sonu \\]","tags":["cen429-hafta-7","kod-karartma","\u00e7e\u015fitlendirme","obfuscation"]},{"location":"tr/week-8-quiz-report/cen429-week-8/","title":"CEN429 G\u00fcvenli Programlama Hafta-8","text":"","tags":["cen429-hafta-8","quiz","ara-d\u00f6nem-raporu"]},{"location":"tr/week-8-quiz-report/cen429-week-8/#cen429-guvenli-programlama","title":"CEN429 G\u00fcvenli Programlama","text":"","tags":["cen429-hafta-8","quiz","ara-d\u00f6nem-raporu"]},{"location":"tr/week-8-quiz-report/cen429-week-8/#hafta-8","title":"Hafta-8","text":"","tags":["cen429-hafta-8","quiz","ara-d\u00f6nem-raporu"]},{"location":"tr/week-8-quiz-report/cen429-week-8/#quiz-1-ara-donem-proje-rapor-teslimi","title":"Quiz 1 &amp; Ara D\u00f6nem Proje Rapor Teslimi","text":"<p>\u0130ndir </p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-hafta-8","quiz","ara-d\u00f6nem-raporu"]},{"location":"tr/week-8-quiz-report/cen429-week-8/#icerik","title":"\u0130\u00e7erik","text":"<ul> <li>Quiz 1</li> <li>Ara D\u00f6nem Proje Raporu Teslimi Y\u00f6nergeleri</li> <li>\u00d6nemli Tarihler ve Son Teslim</li> </ul>","tags":["cen429-hafta-8","quiz","ara-d\u00f6nem-raporu"]},{"location":"tr/week-9/cen429-week-9/","title":"CEN429 G\u00fcvenli Programlama Hafta-9","text":"","tags":["cen429-hafta-9","sertifikalar","\u015fifreleme","simetrik-\u015fifreleme","asimetrik-\u015fifreleme"]},{"location":"tr/week-9/cen429-week-9/#cen429-guvenli-programlama","title":"CEN429 G\u00fcvenli Programlama","text":"","tags":["cen429-hafta-9","sertifikalar","\u015fifreleme","simetrik-\u015fifreleme","asimetrik-\u015fifreleme"]},{"location":"tr/week-9/cen429-week-9/#hafta-9","title":"Hafta-9","text":"","tags":["cen429-hafta-9","sertifikalar","\u015fifreleme","simetrik-\u015fifreleme","asimetrik-\u015fifreleme"]},{"location":"tr/week-9/cen429-week-9/#sertifikalar-ve-sifreleme-yontemleri","title":"Sertifikalar ve \u015eifreleme Y\u00f6ntemleri","text":"<p>\u0130ndir </p> <ul> <li>PDF</li> <li>DOC</li> <li>SLIDE</li> <li>PPTX</li> </ul>","tags":["cen429-hafta-9","sertifikalar","\u015fifreleme","simetrik-\u015fifreleme","asimetrik-\u015fifreleme"]},{"location":"tr/week-9/cen429-week-9/#outline","title":"Outline","text":"<ul> <li>Sertifikalar ve \u015eifreleme Y\u00f6ntemleri</li> <li>Simetrik ve Asimetrik \u015eifreleme</li> <li>Dijital \u0130mzalar ve Sertifika Y\u00f6netimi</li> </ul>","tags":["cen429-hafta-9","sertifikalar","\u015fifreleme","simetrik-\u015fifreleme","asimetrik-\u015fifreleme"]},{"location":"tr/week-9/cen429-week-9/#hafta-9-sertifikalar-ve-sifreleme-yontemleri","title":"Hafta-9: Sertifikalar ve \u015eifreleme Y\u00f6ntemleri","text":"<p>Bu hafta, yaz\u0131l\u0131m g\u00fcvenli\u011fi ve ileti\u015fimde kullan\u0131lan \u015fifreleme y\u00f6ntemleri ile sertifikalar\u0131n temel ilkelerini inceleyece\u011fiz. Hem asimetrik hem de simetrik \u015fifreleme algoritmalar\u0131n\u0131, dijital sertifikalar\u0131n nas\u0131l \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131 ve uygulama g\u00fcvenli\u011fine nas\u0131l katk\u0131 sa\u011flad\u0131klar\u0131n\u0131 ke\u015ffedece\u011fiz.</p>","tags":["cen429-hafta-9","sertifikalar","\u015fifreleme","simetrik-\u015fifreleme","asimetrik-\u015fifreleme"]},{"location":"tr/week-9/cen429-week-9/#1-sifreleme-yontemlerinin-temelleri","title":"1. \u015eifreleme Y\u00f6ntemlerinin Temelleri","text":"<p>Teorik A\u00e7\u0131klama: \u015eifreleme, verilerin gizlili\u011fini korumak ve yetkisiz eri\u015fimlere kar\u015f\u0131 koruma sa\u011flamak amac\u0131yla kullan\u0131lan bir tekniktir. \u015eifreleme y\u00f6ntemleri iki ana kategoriye ayr\u0131l\u0131r: simetrik ve asimetrik.</p> <ul> <li>Simetrik \u015eifreleme: Ayn\u0131 anahtar hem \u015fifreleme hem de \u015fifre \u00e7\u00f6zme i\u015flemlerinde kullan\u0131l\u0131r. \u00d6rnek algoritmalar: AES, DES.</li> <li>Asimetrik \u015eifreleme: \u0130ki farkl\u0131 anahtar kullan\u0131l\u0131r. Bir anahtar \u015fifreleme i\u00e7in, di\u011feri ise \u015fifre \u00e7\u00f6zme i\u00e7in kullan\u0131l\u0131r. \u00d6rnek algoritmalar: RSA, ECC.</li> </ul>","tags":["cen429-hafta-9","sertifikalar","\u015fifreleme","simetrik-\u015fifreleme","asimetrik-\u015fifreleme"]},{"location":"tr/week-9/cen429-week-9/#2-simetrik-sifreleme-yontemleri","title":"2. Simetrik \u015eifreleme Y\u00f6ntemleri","text":"<p>Teorik A\u00e7\u0131klama: Simetrik \u015fifreleme, h\u0131z ve verimlilik a\u00e7\u0131s\u0131ndan asimetrik \u015fifrelemeden daha avantajl\u0131d\u0131r, ancak anahtar payla\u015f\u0131m\u0131 sorunu vard\u0131r.</p> <ul> <li>AES (Advanced Encryption Standard): Yayg\u0131n kullan\u0131lan ve olduk\u00e7a g\u00fcvenli bir blok \u015fifreleme algoritmas\u0131d\u0131r. 128, 192 veya 256 bit anahtar uzunluklar\u0131yla \u00e7al\u0131\u015f\u0131r.</li> <li>DES (Data Encryption Standard): Daha eski bir algoritma olup, g\u00fcn\u00fcm\u00fczde g\u00fcvenlik a\u00e7\u0131klar\u0131 nedeniyle art\u0131k \u00f6nerilmemektedir.</li> <li>Blok \u015eifreleme ve Modlar: Blok \u015fifreleme, veriyi sabit uzunluklardaki bloklar halinde \u015fifreler. \u00d6rne\u011fin, ECB (Electronic Codebook), CBC (Cipher Block Chaining) gibi \u015fifreleme modlar\u0131 vard\u0131r.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>AES kullanarak bir metni \u015fifreleyip \u00e7\u00f6zme i\u015flemi.</li> <li>CBC modunu kullanarak bir dosyan\u0131n \u015fifrelenmesi ve \u015fifre \u00e7\u00f6zme i\u015flemi.</li> </ol>","tags":["cen429-hafta-9","sertifikalar","\u015fifreleme","simetrik-\u015fifreleme","asimetrik-\u015fifreleme"]},{"location":"tr/week-9/cen429-week-9/#3-asimetrik-sifreleme-yontemleri","title":"3. Asimetrik \u015eifreleme Y\u00f6ntemleri","text":"<p>Teorik A\u00e7\u0131klama: Asimetrik \u015fifrelemede iki anahtar bulunur: bir kamuya a\u00e7\u0131k anahtar (public key) ve bir \u00f6zel anahtar (private key). Veri, kamuya a\u00e7\u0131k anahtar ile \u015fifrelenir ve sadece \u00f6zel anahtar ile \u00e7\u00f6z\u00fclebilir.</p> <ul> <li>RSA (Rivest-Shamir-Adleman): Yayg\u0131n kullan\u0131lan asimetrik \u015fifreleme algoritmas\u0131d\u0131r. B\u00fcy\u00fck asal say\u0131lara dayal\u0131d\u0131r ve hem \u015fifreleme hem de dijital imza i\u015flemlerinde kullan\u0131l\u0131r.</li> <li>ECC (Elliptic Curve Cryptography): Daha k\u00fc\u00e7\u00fck anahtar boyutlar\u0131 ile RSA\u2019ya k\u0131yasla daha g\u00fc\u00e7l\u00fc g\u00fcvenlik sa\u011flayan asimetrik bir \u015fifreleme algoritmas\u0131d\u0131r.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>RSA kullanarak bir metni \u015fifreleme ve \u00e7\u00f6zme i\u015flemi.</li> <li>ECC kullanarak dijital imza olu\u015fturma ve do\u011frulama.</li> </ol>","tags":["cen429-hafta-9","sertifikalar","\u015fifreleme","simetrik-\u015fifreleme","asimetrik-\u015fifreleme"]},{"location":"tr/week-9/cen429-week-9/#4-hibrit-sifreleme","title":"4. Hibrit \u015eifreleme","text":"<p>Teorik A\u00e7\u0131klama: Hibrit \u015fifreleme, hem simetrik hem de asimetrik \u015fifrelemeyi bir arada kullan\u0131r. Simetrik anahtarlar, asimetrik \u015fifreleme ile g\u00fcvenli bir \u015fekilde payla\u015f\u0131l\u0131r, ard\u0131ndan veriler simetrik anahtarla \u015fifrelenir.</p> <ul> <li>Uygulama: E-posta ve HTTPS gibi bir\u00e7ok g\u00fcvenli ileti\u015fim protokol\u00fcnde kullan\u0131l\u0131r.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Simetrik anahtar\u0131n asimetrik olarak \u015fifrelenmesi ve ard\u0131ndan verilerin simetrik \u015fifre ile korunmas\u0131.</li> <li>Hibrit \u015fifreleme kullanarak iki cihaz aras\u0131nda g\u00fcvenli veri al\u0131\u015fveri\u015fi.</li> </ol>","tags":["cen429-hafta-9","sertifikalar","\u015fifreleme","simetrik-\u015fifreleme","asimetrik-\u015fifreleme"]},{"location":"tr/week-9/cen429-week-9/#5-dijital-sertifikalar-ve-sertifika-yetkilileri-cas","title":"5. Dijital Sertifikalar ve Sertifika Yetkilileri (CAs)","text":"<p>Teorik A\u00e7\u0131klama: Dijital sertifikalar, bir ki\u015finin veya kurulu\u015fun kimli\u011fini do\u011frulayan elektronik belgeler olarak tan\u0131mlanabilir. Bu sertifikalar genellikle bir sertifika yetkilisi (Certificate Authority - CA) taraf\u0131ndan imzalan\u0131r ve kullan\u0131c\u0131lara g\u00fcvenli bir \u015fekilde iletilir.</p> <ul> <li>X.509 Sertifikas\u0131: En yayg\u0131n kullan\u0131lan sertifika t\u00fcr\u00fcd\u00fcr.</li> <li>Sertifika Yetkilisi (CA): Sertifikalar\u0131 dijital olarak imzalayan g\u00fcvenilir otoriteler.</li> <li>Sertifika Zinciri: Sertifikalar\u0131n do\u011frulanabilir bir hiyerar\u015fi ile ba\u011fland\u0131\u011f\u0131 yap\u0131. Her sertifika, bir \u00fcst otorite taraf\u0131ndan imzalan\u0131r.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Bir web sunucusu i\u00e7in SSL/TLS sertifikas\u0131 olu\u015fturma ve y\u00fckleme.</li> <li>X.509 sertifikalar\u0131n\u0131n do\u011frulanmas\u0131 ve g\u00fcvenlik zincirinin incelenmesi.</li> </ol>","tags":["cen429-hafta-9","sertifikalar","\u015fifreleme","simetrik-\u015fifreleme","asimetrik-\u015fifreleme"]},{"location":"tr/week-9/cen429-week-9/#6-dijital-imzalar","title":"6. Dijital \u0130mzalar","text":"<p>Teorik A\u00e7\u0131klama: Dijital imzalar, verilerin kimli\u011fini do\u011frulamak ve de\u011fi\u015fikli\u011fe u\u011fray\u0131p u\u011framad\u0131\u011f\u0131n\u0131 kontrol etmek i\u00e7in kullan\u0131l\u0131r. \u0130mza, bir mesaj\u0131n karmas\u0131n\u0131 (hash) hesaplayarak ve bu karmay\u0131 \u00f6zel bir anahtarla \u015fifreleyerek olu\u015fturulur.</p> <ul> <li>\u0130mzan\u0131n Do\u011frulanmas\u0131: \u0130mza, kamuya a\u00e7\u0131k anahtar kullan\u0131larak do\u011frulanabilir.</li> <li>Uygulama Alanlar\u0131: E-posta, yaz\u0131l\u0131m da\u011f\u0131t\u0131m\u0131, dijital s\u00f6zle\u015fmeler.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Bir dosya i\u00e7in dijital imza olu\u015fturma ve do\u011frulama.</li> <li>PGP/GPG kullanarak bir mesaj\u0131n imzalanmas\u0131 ve do\u011frulanmas\u0131.</li> </ol>","tags":["cen429-hafta-9","sertifikalar","\u015fifreleme","simetrik-\u015fifreleme","asimetrik-\u015fifreleme"]},{"location":"tr/week-9/cen429-week-9/#7-sertifika-tabanl-kimlik-dogrulama","title":"7. Sertifika Tabanl\u0131 Kimlik Do\u011frulama","text":"<p>Teorik A\u00e7\u0131klama: Sertifikalar, \u00f6zellikle sunucular aras\u0131 g\u00fcvenli ileti\u015fimde kimlik do\u011frulama i\u00e7in kullan\u0131l\u0131r. \u0130stemci ve sunucu birbirlerinin sertifikalar\u0131n\u0131 do\u011frulayarak g\u00fcvenli bir ileti\u015fim kanal\u0131 olu\u015fturur.</p> <ul> <li>SSL/TLS: Web taray\u0131c\u0131lar\u0131 ve sunucular aras\u0131ndaki g\u00fcvenli ileti\u015fimde kullan\u0131lan bir protokold\u00fcr.</li> <li>Mutual Authentication: Hem sunucu hem de istemci birbirlerini sertifikalar arac\u0131l\u0131\u011f\u0131yla do\u011frular.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>SSL/TLS kullanarak g\u00fcvenli bir ba\u011flant\u0131 kurulmas\u0131.</li> <li>Sertifika tabanl\u0131 \u00e7ift tarafl\u0131 kimlik do\u011frulama senaryosu uygulama.</li> </ol>","tags":["cen429-hafta-9","sertifikalar","\u015fifreleme","simetrik-\u015fifreleme","asimetrik-\u015fifreleme"]},{"location":"tr/week-9/cen429-week-9/#8-pki-public-key-infrastructure-ack-anahtar-altyaps","title":"8. PKI (Public Key Infrastructure - A\u00e7\u0131k Anahtar Altyap\u0131s\u0131)","text":"<p>Teorik A\u00e7\u0131klama: PKI, dijital sertifikalar\u0131n olu\u015fturulmas\u0131, da\u011f\u0131t\u0131lmas\u0131, y\u00f6netilmesi ve do\u011frulanmas\u0131 s\u00fcre\u00e7lerini i\u00e7eren bir yap\u0131d\u0131r. PKI, g\u00fcvenli ileti\u015fim sa\u011flamak i\u00e7in gerekli anahtar \u00e7iftlerinin ve sertifikalar\u0131n y\u00f6netimini sa\u011flar.</p> <ul> <li>Bile\u015fenler: CA (Certificate Authority), RA (Registration Authority), CRL (Certificate Revocation List), OCSP (Online Certificate Status Protocol).</li> <li>Uygulama Alanlar\u0131: SSL/TLS, VPN, e-posta g\u00fcvenli\u011fi, kod imzalama.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>PKI kullanarak bir sertifika y\u00f6netim altyap\u0131s\u0131 kurma.</li> <li>OCSP ve CRL ile sertifika iptallerinin kontrol edilmesi.</li> </ol>","tags":["cen429-hafta-9","sertifikalar","\u015fifreleme","simetrik-\u015fifreleme","asimetrik-\u015fifreleme"]},{"location":"tr/week-9/cen429-week-9/#9-beyaz-kutu-kriptografisi-whitebox-cryptography","title":"9. Beyaz Kutu Kriptografisi (Whitebox Cryptography)","text":"<p>Teorik A\u00e7\u0131klama: Beyaz kutu kriptografisi, \u00f6zellikle \u015fifreleme algoritmalar\u0131n\u0131n a\u00e7\u0131k bir sistemde g\u00fcvenli bir \u015fekilde uygulanmas\u0131n\u0131 sa\u011flar. Bu teknikle, \u015fifreleme i\u015flemleri s\u0131ras\u0131nda anahtarlar ve di\u011fer hassas bilgiler koruma alt\u0131nda tutulur.</p> <ul> <li>Whitebox AES/DES: AES ve DES gibi simetrik \u015fifreleme algoritmalar\u0131n\u0131n beyaz kutu ortamlar\u0131nda uygulanmas\u0131.</li> <li>Uygulama Alan\u0131: Dijital hak y\u00f6netimi (DRM), mobil uygulama g\u00fcvenli\u011fi.</li> </ul> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Whitebox AES kullanarak bir dosya \u015fifreleme i\u015flemi ger\u00e7ekle\u015ftirmek.</li> <li>Whitebox kriptografi ile hassas verileri koruma alt\u0131na almak.</li> </ol>","tags":["cen429-hafta-9","sertifikalar","\u015fifreleme","simetrik-\u015fifreleme","asimetrik-\u015fifreleme"]},{"location":"tr/week-9/cen429-week-9/#10-sertifika-ve-anahtar-yonetimi","title":"10. Sertifika ve Anahtar Y\u00f6netimi","text":"<p>Teorik A\u00e7\u0131klama: Sertifikalar\u0131n ve kriptografik anahtarlar\u0131n etkin bir \u015fekilde y\u00f6netilmesi, g\u00fcvenli sistemlerin temel yap\u0131 ta\u015flar\u0131ndan biridir. Sertifikalar\u0131n zaman\u0131nda yenilenmesi, iptal edilmesi ve saklanmas\u0131, g\u00fcvenli bir ileti\u015fim ortam\u0131 i\u00e7in kritik \u00f6neme sahiptir.</p> <p>Uygulama \u00d6rnekleri:</p> <ol> <li>Sertifikalar\u0131n otomatik olarak yenilenmesi ve eski sertifikalar\u0131n iptal edilmesi (CRL veya OCSP kullan\u0131m\u0131).</li> <li>Anahtar y\u00f6netim sistemleri (Key Management Systems) ile anahtarlar\u0131n g\u00fcvenli bir \u015fekilde y\u00f6netilmesi.</li> </ol> \\[ 9.Hafta-Sonu \\]","tags":["cen429-hafta-9","sertifikalar","\u015fifreleme","simetrik-\u015fifreleme","asimetrik-\u015fifreleme"]},{"location":"tr/tags/#aktarmda-veri-guvenligi","title":"aktar\u0131mda-veri-g\u00fcvenli\u011fi","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-3</li> </ul>"},{"location":"tr/tags/#application-protection-plan","title":"application-protection-plan","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-1</li> </ul>"},{"location":"tr/tags/#ara-donem-raporu","title":"ara-d\u00f6nem-raporu","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-8</li> </ul>"},{"location":"tr/tags/#asimetrik-sifreleme","title":"asimetrik-\u015fifreleme","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-9</li> </ul>"},{"location":"tr/tags/#beyaz-kutu-kriptografi","title":"beyaz-kutu-kriptografi","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-10</li> </ul>"},{"location":"tr/tags/#c","title":"c++","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-4</li> <li>CEN429 G\u00fcvenli Programlama Hafta-5</li> </ul>"},{"location":"tr/tags/#cen429","title":"cen429","text":"<ul> <li>CEN429 G\u00fcvenli Programlama</li> </ul>"},{"location":"tr/tags/#cen429-hafta-10","title":"cen429-hafta-10","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-10</li> </ul>"},{"location":"tr/tags/#cen429-hafta-11","title":"cen429-hafta-11","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-11</li> </ul>"},{"location":"tr/tags/#cen429-hafta-12","title":"cen429-hafta-12","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-12</li> </ul>"},{"location":"tr/tags/#cen429-hafta-13","title":"cen429-hafta-13","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-13</li> </ul>"},{"location":"tr/tags/#cen429-hafta-14","title":"cen429-hafta-14","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-14</li> </ul>"},{"location":"tr/tags/#cen429-hafta-15","title":"cen429-hafta-15","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-15</li> </ul>"},{"location":"tr/tags/#cen429-hafta-2","title":"cen429-hafta-2","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-2</li> </ul>"},{"location":"tr/tags/#cen429-hafta-3","title":"cen429-hafta-3","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-3</li> </ul>"},{"location":"tr/tags/#cen429-hafta-4","title":"cen429-hafta-4","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-4</li> </ul>"},{"location":"tr/tags/#cen429-hafta-5","title":"cen429-hafta-5","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-5</li> </ul>"},{"location":"tr/tags/#cen429-hafta-6","title":"cen429-hafta-6","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-6</li> </ul>"},{"location":"tr/tags/#cen429-hafta-7","title":"cen429-hafta-7","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-7</li> </ul>"},{"location":"tr/tags/#cen429-hafta-8","title":"cen429-hafta-8","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-8</li> </ul>"},{"location":"tr/tags/#cen429-hafta-9","title":"cen429-hafta-9","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-9</li> </ul>"},{"location":"tr/tags/#cen429-syllabus","title":"cen429-syllabus","text":"<ul> <li>CEN429 G\u00fcvenli Programlama</li> </ul>"},{"location":"tr/tags/#cen429-week-1","title":"cen429-week-1","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-1</li> </ul>"},{"location":"tr/tags/#code-splitting","title":"code-splitting","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-1</li> </ul>"},{"location":"tr/tags/#code-verification","title":"code-verification","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-1</li> </ul>"},{"location":"tr/tags/#computer-viruses","title":"computer-viruses","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-1</li> </ul>"},{"location":"tr/tags/#depolamada-veri-guvenligi","title":"depolamada-veri-g\u00fcvenli\u011fi","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-3</li> </ul>"},{"location":"tr/tags/#degisiklik-yonetimi","title":"de\u011fi\u015fiklik-y\u00f6netimi","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-2</li> </ul>"},{"location":"tr/tags/#fall-2024","title":"fall-2024","text":"<ul> <li>CEN429 G\u00fcvenli Programlama</li> </ul>"},{"location":"tr/tags/#final-rapor","title":"final-rapor","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-15</li> </ul>"},{"location":"tr/tags/#gelistirme-ortam","title":"geli\u015ftirme-ortam\u0131","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-2</li> </ul>"},{"location":"tr/tags/#guvenli-programlama","title":"g\u00fcvenli-programlama","text":"<ul> <li>CEN429 G\u00fcvenli Programlama</li> </ul>"},{"location":"tr/tags/#guvenlik","title":"g\u00fcvenlik","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-10</li> <li>CEN429 G\u00fcvenli Programlama Hafta-11</li> <li>CEN429 G\u00fcvenli Programlama Hafta-12</li> <li>CEN429 G\u00fcvenli Programlama Hafta-13</li> <li>CEN429 G\u00fcvenli Programlama Hafta-2</li> </ul>"},{"location":"tr/tags/#guvenlik-gereksinimleri","title":"g\u00fcvenlik-gereksinimleri","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-12</li> </ul>"},{"location":"tr/tags/#guvenlik-sertifikalar","title":"g\u00fcvenlik-sertifikalar\u0131","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-11</li> </ul>"},{"location":"tr/tags/#java","title":"java","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-4</li> <li>CEN429 G\u00fcvenli Programlama Hafta-6</li> </ul>"},{"location":"tr/tags/#kod-guclendirme","title":"kod-g\u00fc\u00e7lendirme","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-4</li> </ul>"},{"location":"tr/tags/#kod-karartma","title":"kod-karartma","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-7</li> </ul>"},{"location":"tr/tags/#kullanmda-veri-guvenligi","title":"kullan\u0131mda-veri-g\u00fcvenli\u011fi","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-3</li> </ul>"},{"location":"tr/tags/#obfuscation","title":"obfuscation","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-7</li> </ul>"},{"location":"tr/tags/#obfuske","title":"obfuske","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-4</li> </ul>"},{"location":"tr/tags/#penetrasyon-testi","title":"penetrasyon-testi","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-11</li> </ul>"},{"location":"tr/tags/#proje-sunum","title":"proje-sunum","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-15</li> </ul>"},{"location":"tr/tags/#proje-teslim","title":"proje-teslim","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-15</li> </ul>"},{"location":"tr/tags/#protocol-monitoring","title":"protocol-monitoring","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-1</li> </ul>"},{"location":"tr/tags/#quiz","title":"quiz","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-14</li> <li>CEN429 G\u00fcvenli Programlama Hafta-8</li> </ul>"},{"location":"tr/tags/#rasp","title":"rasp","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-5</li> <li>CEN429 G\u00fcvenli Programlama Hafta-6</li> </ul>"},{"location":"tr/tags/#runtime-application-self-protection","title":"runtime-application-self-protection","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-5</li> <li>CEN429 G\u00fcvenli Programlama Hafta-6</li> </ul>"},{"location":"tr/tags/#secure-programming","title":"secure-programming","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-1</li> </ul>"},{"location":"tr/tags/#sertifikalar","title":"sertifikalar","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-9</li> </ul>"},{"location":"tr/tags/#simetrik-sifreleme","title":"simetrik-\u015fifreleme","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-9</li> </ul>"},{"location":"tr/tags/#standartlar","title":"standartlar","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-12</li> </ul>"},{"location":"tr/tags/#surum-kontrol","title":"s\u00fcr\u00fcm-kontrol","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-2</li> </ul>"},{"location":"tr/tags/#tigress","title":"tigress","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-13</li> </ul>"},{"location":"tr/tags/#veri-guvenligi","title":"veri-g\u00fcvenli\u011fi","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-3</li> </ul>"},{"location":"tr/tags/#virus-countermeasures","title":"virus-countermeasures","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-1</li> </ul>"},{"location":"tr/tags/#yazlm-gelistirme","title":"yaz\u0131l\u0131m-geli\u015ftirme","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-2</li> </ul>"},{"location":"tr/tags/#cesitlendirme","title":"\u00e7e\u015fitlendirme","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-7</li> </ul>"},{"location":"tr/tags/#cesitlilik-teknikleri","title":"\u00e7e\u015fitlilik-teknikleri","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-13</li> </ul>"},{"location":"tr/tags/#sifreleme","title":"\u015fifreleme","text":"<ul> <li>CEN429 G\u00fcvenli Programlama Hafta-10</li> <li>CEN429 G\u00fcvenli Programlama Hafta-9</li> </ul>"}]}